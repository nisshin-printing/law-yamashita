{"version":3,"sources":["apps.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","global","_interopRequireDefault","obj","__esModule","default","_jquery","window","_jquery2","jQuery","this","self","./parts/auto-input-kana","./parts/calculate-rate","./parts/countup","./parts/foundation","./parts/googlemap","./parts/isotope-grid","./parts/page-transitions","./parts/removing-alert","./parts/scrolldepth","./parts/slick-slider","./parts/svg","2","$","document","getElementById","fn","autoKana","katakana","addClass","append","toggleClass","../vendor/jquery.autoKana","../vendor/yubinbango","3","adminBar","height","mainNav","headerHeight","parseInt","on","event","preventDefault","target","parents","position","offset","top","animate","scrollTop","find","inputNum","val","resultNum01","resultNum02","resultNum","inputType","4","ele","each","_this","start","data","end","appear","countUp","last","../vendor/appear","../vendor/countup","5","ready","Foundation","Accordion","defaults","allowAllClosed","Sticky","marginTop","stickyOn","anchor","topAnchor","btmAnchor","foundation","sticky","topSpacing","../vendor/foundation.js","../vendor/jquery.sticky.js","6","latlng1","google","maps","LatLng","latlng2","opts1","zoom","center","mapTypeId","MapTypeId","ROADMAP","scrollwheel","opts2","map1","Map","map2","icon1","MarkerImage","Size","Point","markerOptions1","map","icon","title","iwopts2","content","Marker","InfoWindow","7","Isotope","jQueryBridget","concatValues","value","prop","container","isotope","itemSelector","masonry","gutter","columnWidth","isFitWidth","animationOptions","duration","filters","filterGroup","attr","filterValue","filter","isotope-layout","jquery-bridget","8","scroll","actionsBtn","fadeIn","fadeOut","click","href","9","querySelector","backAndForward","location","hash","off","onhashchange","removeClass","el","area","hasClass","name","parent","children","delay","10","scrollDepth","../vendor/jquery.scrolldepth","11","slick","slide","autoplay","fade","mobileFirst","appendArrows","prevArrow","nextArrow","useCSS","useTransform","arrows","lazyLoad","slidesToShow","responsive","breakpoint","settings","autoplaySpeed","count","hour","minute","css","-webkit-transform","-ms-transform","transform","../vendor/slick","12","svg4everybody","../vendor/svg4everybody","13","extend","undefined","one","accX","accY","appeared","trigger","is","scrollLeft","left","c","h","width","p","unbind","inArray","checks","splice","apply","arguments","bind","push","timeout","checkAll","run","clearTimeout","setTimeout","14","options","d","Number","text","frame","update","complete","$that","$t","total_frame","split","clear","setInterval","Math","round","clearInterval","String","replace","15","_classCallCheck","instance","Constructor","TypeError","_typeof","Symbol","iterator","constructor","prototype","functionName","Function","funcNameRegex","results","exec","toString","trim","parseValue","str","test","isNaN","parseFloat","hyphenate","toLowerCase","FOUNDATION_VERSION","version","_plugins","_uuids","rtl","plugin","_plugin","className","attrName","registerPlugin","pluginName","uuid","GetYoDigits","$element","unregisterPlugin","indexOf","removeAttr","removeData","reInit","plugins","isJQ","_init","type","fns","object","plgs","forEach","string","Object","keys","err","console","error","namespace","pow","random","slice","reflow","elem","$elem","addBack","$el","opts","warn","opt","er","getFnName","transitionend","transitions","transition","WebkitTransition","MozTransition","OTransition","createElement","style","triggerHandler","util","throttle","func","timer","context","args","method","$meta","$noJS","appendTo","head","MediaQuery","Array","plugClass","ReferenceError","Date","now","getTime","vendors","requestAnimationFrame","vp","cancelAnimationFrame","navigator","userAgent","lastTime","callback","nextTime","max","performance","oThis","aArgs","fToBind","fNOP","fBound","concat","ImNotTouchingYou","element","lrOnly","tbOnly","bottom","right","eleDims","GetDimensions","parDims","windowDims","allDirs","rect","getBoundingClientRect","parRect","parentNode","winRect","body","winY","pageYOffset","winX","pageXOffset","parentDims","GetOffsets","vOffset","hOffset","isOverflow","$eleDims","$anchorDims","Box","getKeyCodes","kcs","k","kc","keyCodes","27","32","37","38","39","40","commands","Keyboard","parseKey","key","which","keyCode","fromCharCode","toUpperCase","shiftKey","ctrlKey","altKey","handleKey","component","functions","cmds","command","commandList","ltr","handled","unhandled","findFocusable","register","componentName","parseStyleToObject","styleObject","reduce","ret","param","parts","decodeURIComponent","hasOwnProperty","isArray","queries","current","namedQueries","extractedStyles","_getCurrentSize","_watcher","atLeast","size","query","get","matchMedia","matches","matched","newSize","styleMedia","media","script","getElementsByTagName","info","id","insertBefore","getComputedStyle","currentStyle","matchMedium","styleSheet","cssText","textContent","Move","move","ts","prog","anim","isIn","animation","cb","finish","hide","reset","transitionDuration","initClass","activeClass","eq","initClasses","activeClasses","show","offsetWidth","Motion","animateIn","animateOut","Nest","Feather","menu","items","role","subMenuClass","subItemClass","hasSubClass","$item","$sub","aria-haspopup","aria-expanded","aria-label","data-submenu","aria-hidden","Burn","Timer","nameSpace","remain","isPaused","restart","infinite","pause","onImagesLoaded","images","singleImageLoaded","unloaded","naturalWidth","onTouchEnd","removeEventListener","onTouchMove","isMoving","spotSwipe","dir","x","touches","pageX","dx","pageY","startPosX","elapsedTime","startTime","abs","moveThreshold","timeThreshold","onTouchStart","startPosY","addEventListener","init","enabled","documentElement","special","swipe","setup","noop","addTouch","handleTouch","simulatedEvent","changedTouches","first","eventTypes","touchstart","touchmove","touchend","MouseEvent","bubbles","cancelable","screenX","screenY","clientX","clientY","createEvent","initMouseEvent","dispatchEvent","checkListeners","eventsListener","resizeListener","scrollListener","closemeListener","yetiBoxes","plugNames","listeners","join","pluginId","not","debounce","$nodes","MutationObserver","nodes","querySelectorAll","listeningElementsMutation","mutationRecordsList","$target","elementObserver","observe","attributes","childList","characterData","subtree","attributeFilter","prefixes","triggers","stopPropagation","load","IHearYou","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","Abide","$inputs","_events","_this2","resetForm","validateForm","validateOn","validateInput","liveValidate","isGood","checked","$error","siblings","formErrorSelector","$label","closest","findLabel","$formError","findFormError","labelErrorClass","formErrorClass","inputErrorClass","clearRequire","requiredCheck","validated","customValidator","validator","equalTo","validateRadio","validateText","matchValidation","validators","goodToGo","message","acc","noError","pattern","inputText","patterns","RegExp","groupName","$group","counter","rdio","removeErrorClasses","required","_this3","v","$form","alpha","alpha_numeric","integer","number","card","cvv","email","url","domain","datetime","date","time","dateISO","month_day_year","day_month_year","color","ENTER","SPACE","ARROW_DOWN","ARROW_UP","$tabs","idx","$content","linkId","aria-controls","aria-selected","aria-labelledby","$initActive","down","$tabContent","up","toggle","next","focus","previous","prev","firstTime","multiExpand","$currentActive","slideDown","slideSpeed","$aunts","canClose","slideUp","AccordionMenu","ARROW_RIGHT","ARROW_LEFT","ESCAPE","TAB","SHIFT_TAB","aria-multiselectable","multiOpen","$menuLinks","subId","isActive","initPanes","$submenu","$prevElement","$nextElement","$elements","min","open","close","closeAll","hideAll","stopImmediatePropagation","parentsUntil","add","$menus","Drilldown","$submenuAnchors","$submenus","$menuItems","_prepareMenu","_keyboardEvents","$link","parentLink","clone","prependTo","wrap","tabindex","$menu","$back","prepend","backButton","_back","$wrapper","wrapper","_getMaxDims","_show","closeOnClick","$body","_hideAll","_hide","blur","result","numOfElems","unwrap","remove","Dropdown","$id","$anchor","data-is-focus","data-yeti-box","positionClass","getPositionClass","usedPositions","data-resize","match","classChanged","direction","_reposition","_setPosition","open.zf.trigger","close.zf.trigger","toggle.zf.trigger","resizeme.zf.trigger","hover","hoverDelay","hoverPane","visibleFocusableElements","tab_forward","trapFocus","tab_backward","autoFocus","$focusable","_addBodyHandler","curPositionClass","DropdownMenu","subs","verticalClass","rightClass","alignment","changed","hasTouch","ontouchstart","parClass","clickOpen","hasSub","hasClicked","forceFollow","disableHover","autoclose","closingTime","isTab","index","nextSibling","prevSibling","openSub","closeSub","vertical","$sibs","oldClass","$parentLi","$toClose","somethingToClose","data-is-click","Equalizer","eqId","$watched","hasNested","isNested","isOn","tooSmall","imgs","equalizeOn","_checkMQ","_reflow","_pauseEvents","equalizeOnStack","_isStacked","equalizeByRow","getHeightsByRow","applyHeightByRow","getHeights","applyHeight","offsetTop","heights","len","offsetHeight","lastElTopOffset","groups","group","elOffsetTop","j","ln","groupsILength","lenJ","Interchange","rules","currentPath","_addBreakpoints","_generateRules","rule","path","SPECIAL_QUERIES","rulesList","nodeName","background-image","response","html","landscape","portrait","retina","Magellan","$targets","$links","data-scroll","$active","scrollPos","points","winHeight","innerHeight","clientHeight","docHeight","scrollHeight","$tar","pt","threshold","targetPoint","animationDuration","easing","animationEasing","deepLinking","scrollToLoc","calcPoints","_updateActive","scrollme.zf.trigger","arrival","getAttribute","loc","barOffset","stop","curIdx","winPos","isDown","curVisible","history","pushState","OffCanvas","$lastTrigger","$exiter","exiter","setAttribute","isRevealed","revealClass","revealOn","_setMQChecker","transitionTime","keydown.zf.offcanvas","_handleKeyboard","click.zf.offcanvas","reveal","$closer","forceTop","_trapFocus","focusable","keycode","Orbit","containerClass","$slides","slideClass","$images","initActive","useMUI","_prepareForOrbit","bullets","_loadBullets","autoPlay","geoSync","accessible","$bullets","boxOfBullets","timerDelay","changeSlide","_setWrapperHeight","_setSlideHeight","temp","display","pauseOnHover","navButtons","$controls","nextClass","prevClass","$slide","isLTR","chosenSlide","$curSlide","$newSlide","$firstSlide","$lastSlide","dirIn","dirOut","infiniteWrap","_updateBullets","$oldBullet","span","detach","animInFromRight","animOutToRight","animInFromLeft","animOutToLeft","ResponsiveMenu","currentMq","currentPlugin","rulesTree","ruleSize","rulePlugin","MenuPlugins","isEmptyObject","_checkMediaQueries","matchedMq","cssClass","destroy","dropdown","drilldown","accordion","ResponsiveToggle","targetID","$targetMenu","$toggler","_update","toggleMenu","hideFor","iPhoneSniff","Reveal","cached","mq","isiOS","anchorId","fullScreen","overlay","$overlay","_makeOverlay","deepLink","outerWidth","outerHeight","_updatePosition","contains","_handleState","visibility","multipleOpened","animationIn","focusableElements","showDelay","_extraHandlers","closeOnEsc","finishUp","animationOut","hideDelay","resetOnClose","replaceState","pathname","btmOffsetPct","percent","frac","num","absPosition","$handle","clickPos","Slider","SHIFT_ARROW_RIGHT","SHIFT_ARROW_UP","SHIFT_ARROW_DOWN","SHIFT_ARROW_LEFT","inputs","handles","$input","$fill","isDbl","disabled","disabledClass","binding","_setInitAttr","doubleSided","$handle2","$input2","_setHandlePos","initialStart","initialEnd","$hndl","noInvert","h2Val","step","h1Val","vert","hOrW","lOrT","handleDim","elemDim","pctOfBar","toFixed","pxToMove","movement","decimal","_setValues","dim","isLeftHndl","handlePct","handlePos","moveTime","aria-valuemax","aria-valuemin","aria-valuenow","aria-orientation","hasVal","_adjustValue","pageXY","halfOfHandle","barDim","barXY","offsetPct","firstHndlPos","secndHndlPos","prev_val","next_val","div","curHandle","_handleEvent","clickSelect","draggable","currentTarget","newValue","_$handle","oldValue","decrease","increase","decrease_fast","increase_fast","invertVertical","emCalc","em","fontSize","$parent","wasWrapped","$container","wrapInner","stickyClass","scrollCount","checkEvery","isStuck","_parsePoints","_setSizes","_calc","reverse","btm","pts","breaks","place","0","canStick","_pauseListeners","checkSizes","topPoint","bottomPoint","_setSticky","_removeSticky","stickTo","mrgn","notStuckTo","isTop","stickToTop","anchorPt","anchorHeight","elemHeight","topOrBottom","newElemWidth","comp","pdng","max-width","newContainerHeight","containerHeight","_setBreakPoints","mTop","mBtm","marginBottom","Tabs","$tabTitles","linkClass","matchHeight","_setHeight","_addKeyHandler","_addClickHandler","_handleTabChange","wrapOnKeys","$tabLink","$targetContent","$oldTab","idStr","panelClass","panel","Toggler","input","_updateARIA","Tooltip","isClick","elemId","_getPositionClass","tipText","template","_buildTemplate","aria-describedby","data-toggle","triggerClass","templateClasses","tooltipClass","$template","data-is-active","$tipDims","showOn","fadeInDuration","fadeOutDuration","isFocus","disableForTouch","touchCloseText","16","element1","element2","passedOptions","_checkConvert","new_values","flagConvert","values","tmp_values","kana_compacting_pattern","_stateConvert","_checkValue","new_input","elName","_stateClear","_setKana","_removeString","kana_extraction_pattern","_clearInterval","_eventBlur","_eventFocus","_stateInput","_setInterval","_eventKeyDown","_isHiragana","chara","ignoreString","ignoreArray","inputArray","active","_val","_toKatakana","baseKana","elKana","src","charCodeAt","charAt","keydown","17","factory","define","amd","universalGA","classicGA","gaGlobal","standardEventHandler","minHeight","elements","percentage","userTiming","pixelDepth","nonInteraction","gtmOverride","$window","cache","scrollEventBound","lastPixelDepth","sendEvent","action","label","scrollDistance","timing","eventCategory","eventAction","eventLabel","eventValue","eventNonInteraction","rounded","eventTiming","_gaq","calculateMarks","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%","checkMarks","marks","checkElements","floor","bindScrollDepth","wait","later","remaining","ga","__gaTracker","eventHandler","dataLayer","addElements","elems","merge","removeElements","inElementsArray","inCacheArray","18","bottomSpacing","wrapperClassName","getWidthFrom","widthFromWrapper","responsiveWidth","$document","sticked","windowHeight","scroller","documentHeight","dwh","extra","elementTop","stickyWrapper","etse","stickyElement","currentTop","newTop","newWidth","stickyWrapperContainer","unstick","resizer","methods","stickyId","stickyHeight","wrapperId","wrapAll","marginLeft","marginRight","float","that","unstickyElement","removeIdx","attachEvent","19","Slick","dataSettings","_","accessibility","adaptiveHeight","appendDots","asNavFor","centerMode","centerPadding","cssEase","customPaging","slider","dots","dotsClass","edgeFriction","focusOnSelect","initialSlide","pauseOnDotsHover","respondTo","rows","slidesPerRow","slidesToScroll","speed","swipeToSlide","touchMove","touchThreshold","variableWidth","verticalSwiping","waitForAnimate","zIndex","initials","animating","dragging","autoPlayTimer","currentDirection","currentLeft","currentSlide","$dots","listWidth","listHeight","loadIndex","$nextArrow","$prevArrow","slideCount","slideWidth","$slideTrack","sliding","slideOffset","swipeLeft","$list","touchObject","transformsEnabled","unslicked","activeBreakpoint","animType","animProp","breakpoints","breakpointSettings","cssTransitions","hidden","paused","positionProp","rowCount","shouldClick","$slider","$slidesCache","transformType","transitionType","visibilityChange","windowWidth","windowTimer","originalSettings","mozHidden","webkitHidden","proxy","autoPlayClear","clickHandler","selectHandler","setPosition","swipeHandler","dragHandler","keyHandler","autoPlayIterator","instanceUid","htmlExpr","registerBreakpoints","checkResponsive","addSlide","slickAdd","markup","addBefore","unload","insertAfter","reinit","animateHeight","targetHeight","animateSlide","targetLeft","animProps","animStart","ceil","applyTransition","disableTransition","slideHandler","buildArrows","aria-disabled","buildDots","dotString","getDotCount","buildOut","setupInfinite","updateDots","setSlideClasses","buildRows","b","newSlides","numOfSlides","originalSlides","slidesPerSection","createDocumentFragment","row","appendChild","initial","forceUpdate","targetBreakpoint","respondToWidth","triggerBreakpoint","sliderWidth","innerWidth","unslick","refresh","dontAnimate","indexOffset","unevenOffset","checkNavigable","navigables","prevNavigable","getNavigableIndexes","cleanUpEvents","setPaused","orientationChange","resize","cleanUpRows","fadeSlide","slideIndex","opacity","fadeSlideOut","filterSlides","slickFilter","getCurrent","slickCurrentSlide","breakPoint","pagerQty","getLeft","verticalHeight","targetSlide","verticalOffset","offsetLeft","getOption","slickGetOption","option","indexes","getSlick","getSlideCount","slidesTraversed","swipedSlide","centerOffset","goTo","slickGoTo","creation","setProps","startLoad","loadSlider","initializeEvents","updateArrows","initADA","initArrowEvents","initDotEvents","initUI","tagName","loadImages","imagesScope","image","imageSource","imageToLoad","onload","loadRange","cloneRange","rangeStart","rangeEnd","progressiveLazyLoad","slickNext","slickPause","play","slickPlay","postSlide","slickPrev","imgCount","targetImage","initializing","currentBreakpoint","responsiveSettings","sort","focusHandler","windowDelay","removeSlide","slickRemove","removeBefore","removeAll","setCSS","y","positionProps","setDimensions","padding","setFade","setHeight","setOption","slickSetOption","item","bodyStyle","msTransition","OTransform","perspectiveProperty","webkitPerspective","MozTransform","MozPerspective","webkitTransform","msTransform","allSlides","remainder","infiniteCount","targetElement","sync","animSlide","oldSlide","slideLeft","swipeDirection","xDist","yDist","swipeAngle","startX","curX","startY","curY","atan2","PI","swipeEnd","swipeLength","edgeHit","minSwipe","fingerCount","originalEvent","swipeStart","swipeMove","curLeft","positionOffset","sqrt","unfilterSlides","slickUnfilter","fromBreakpoint","activateADA","_isSlideOnFocus","sf","isPlay","20","root","embed","svg","fragment","viewBox","cloneNode","childNodes","firstChild","loadreadystatechange","xhr","onreadystatechange","readyState","cachedDocument","_cachedDocument","implementation","createHTMLDocument","innerHTML","responseText","_cachedTarget","_embeds","rawopts","oninterval","uses","use","polyfill","validate","removeChild","srcSplit","shift","requests","XMLHttpRequest","send","newerIEUA","webkitUA","olderEdgeUA","21","YubinBango","CACHE","URL","REGION","chk7","getAddr","addrDic","region_id","region","locality","street","extended","selectAddr","jsonp","$yubin","substr","Core","ISO31661JP","HADRLIST","hadrloop","countryNameCheck","applyDom","getFormNode","some","reduceVal","setAddr","postalFormClear","postalFormSet","p-region-id","p-region","p-locality","p-street-address","p-extended-address","MicroformatDom","22","matchesSelector","matchesMethod","ElemProto","Element","prefix","selector","23","EvEmitter","proto","eventName","listener","events","once","onceEvents","_onceEvents","onceListeners","emitEvent","isOnce","24","fizzyUIUtils","utils","modulo","makeArray","ary","removeFrom","getParent","getQueryElement","handleEvent","filterFindElements","ffElems","HTMLElement","childElems","debounceMethod","_class","methodName","timeoutName","docReady","toDashed","$1","$2","htmlInit","WidgetClass","dashedNamespace","dataAttr","dataAttrElems","jsDashElems","dataOptionsAttr","JSON","parse","desandro-matches-selector","25","getSize","getStyleSize","isValid","getZeroSize","measurementsLength","measurement","measurements","getStyle","logError","isSetup","borderStyle","borderWidth","boxSizing","isBoxSizeOuter","nodeType","isBorderBox","paddingWidth","paddingLeft","paddingRight","paddingHeight","paddingTop","paddingBottom","marginWidth","marginHeight","borderLeftWidth","borderRightWidth","borderHeight","borderTopWidth","borderBottomWidth","isBorderBoxSizeOuter","styleWidth","styleHeight","26","Outlayer","Item","LayoutMode","getItemSorter","sortBys","sortAsc","itemA","itemB","sortBy","sortData","isAscending","create","layoutMode","isJQueryFiltering","sortAscending","_create","itemGUID","_sorters","_getSorters","modes","filteredItems","sortHistory","_initLayoutMode","reloadItems","_itemize","_updateItemsSortData","Mode","initialOpts","layout","_isLayoutInited","_getOption","arrange","_layout","isInstant","_getIsInstant","_resetLayout","_manageStamps","layoutItems","filtered","_filter","_bindArrangeComplete","_isInstant","_noTransition","_hideReveal","_sort","needReveal","needHide","isLayoutInstant","arrangeParallelCallback","isLayoutComplete","isHideComplete","isRevealComplete","hiddenMatched","visibleUnmatched","_getFilterTest","isIgnored","isMatched","isHidden","updateSortData","getItems","getSortData","sorter","mungeSorter","attrMatch","getValue","getValueGetter","parser","sortDataParsers","child","sortByOpt","itemSorter","unshift","_mode","mode","_getItemLayoutPosition","_manageStamp","stamp","_getContainerSize","needsResizeLayout","appended","addItems","_filterRevealAdded","prepended","insert","filteredInsertItems","_remove","removeItems","shuffle","returnValue","getFilteredItemElements","./item","./layout-mode","./layout-modes/fit-rows","./layout-modes/masonry","./layout-modes/vertical","fizzy-ui-utils","get-size","outlayer","sorters","_destroy","28","facadeMethods","needsVerticalResizeLayout","hasSizes","_getMeasurement","getColumnWidth","getSegmentSize","getRowHeight","segment","segmentName","outerSize","firstItemSize","getFirstItemSize","firstItem","29","FitRows","maxY","itemWidth","containerWidth","../layout-mode","30","Masonry","MasonryMode","keepModeMethods","_getElementOffset","measureColumns","fitWidth","masonry-layout","31","Vertical","horizontalAlignment","PluginClass","methodCall","$elems","pluginMethodStr","plainCall","isPlainObject","arg0","arraySlice","updateJQuery","bridget","jquery","33","w","noGlobal","isArrayLike","isWindow","winnow","qualifier","isFunction","grep","risSimple","sibling","cur","createOptions","rnotwhite","flag","completed","Data","expando","uid","rmultiDash","rbrace","parseJSON","dataUser","set","adjustCSS","valueParts","tween","adjusted","scale","maxIterations","currentValue","unit","cssNumber","initialInUnit","rcssNum","getAll","tag","setGlobalEval","refElements","dataPriv","buildFragment","scripts","selection","ignored","tmp","rhtml","rtagName","wrapMap","_default","htmlPrefilter","lastChild","createTextNode","ownerDocument","rscriptType","returnTrue","returnFalse","safeActiveElement","activeElement","types","origFn","guid","manipulationTarget","disableScript","restoreScript","rscriptTypeMasked","removeAttribute","cloneCopyEvent","dest","pdataOld","pdataCur","udataOld","udataCur","hasData","access","handle","fixInput","rcheckableType","defaultValue","domManip","collection","hasScripts","node","doc","iNoClone","support","checkClone","rchecked","_evalUrl","globalEval","rcleanScript","keepData","cleanData","actualDisplay","defaultDisplay","elemdisplay","iframe","contentDocument","write","curCSS","computed","minWidth","maxWidth","getStyles","getPropertyValue","pixelMarginRight","rnumnonpx","rmargin","addGetHookIf","conditionFn","hookFn","vendorPropName","emptyStyle","capName","cssPrefixes","setPositiveNumber","subtract","augmentWidthOrHeight","styles","cssExpand","getWidthOrHeight","valueIsBorderBox","boxSizingReliable","showHide","Tween","createFxNow","fxNow","genFx","includeWidth","attrs","createTween","Animation","tweeners","defaultPrefilter","hooks","oldfire","checkDisplay","orig","dataShow","queue","_queueHooks","unqueued","empty","fire","always","overflow","overflowX","overflowY","rfxtypes","done","propFilter","specialEasing","camelCase","cssHooks","expand","properties","stopped","prefilters","deferred","Deferred","tick","currentTime","tweens","notifyWith","resolveWith","promise","originalProperties","originalOptions","gotoEnd","rejectWith","fx","progress","fail","getClass","addToPrefiltersOrTransports","structure","dataTypeExpression","dataType","dataTypes","inspectPrefiltersOrTransports","jqXHR","inspect","selected","inspected","prefilterOrFactory","dataTypeOrTransport","seekingTransport","transports","ajaxExtend","deep","flatOptions","ajaxSettings","ajaxHandleResponses","responses","ct","finalDataType","firstDataType","contents","mimeType","getResponseHeader","converters","ajaxConvert","isSuccess","conv2","conv","responseFields","dataFilter","throws","state","buildParams","traditional","rbracket","getWindow","defaultView","arr","class2type","hasOwn","rtrim","rmsPrefix","rdashAlpha","fcamelCase","all","letter","toArray","pushStack","prevObject","copy","copyIsArray","isReady","msg","isNumeric","realStringObj","indirect","eval","second","invert","callbackInverse","callbackExpect","arg","Sizzle","seed","m","nid","nidselect","newSelector","newContext","preferredDoc","setDocument","documentIsHTML","rquickExpr","getElementsByClassName","qsa","compilerCache","rbuggyQSA","rescape","tokenize","ridentifier","toSelector","rsibling","testContext","qsaError","select","createCache","Expr","cacheLength","markFunction","assert","addHandle","handler","attrHandle","siblingCheck","diff","sourceIndex","MAX_NEGATIVE","createInputPseudo","createButtonPseudo","createPositionalPseudo","argument","matchIndexes","setFilters","tokens","addCombinator","matcher","combinator","base","checkNonElements","doneName","xml","oldCache","uniqueCache","outerCache","newCache","dirruns","uniqueID","elementMatcher","matchers","multipleContexts","contexts","condense","unmatched","newUnmatched","mapped","setMatcher","preFilter","postFilter","postFinder","postSelector","preMap","postMap","preexisting","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","relative","implicitRelative","matchContext","matchAnyContext","outermostContext","matcherFromGroupMatchers","elementMatchers","setMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","dirrunsUnique","pop","uniqueSort","getText","isXML","compile","sortInput","hasDuplicate","docElem","rbuggyMatches","classCache","tokenCache","sortOrder","push_native","list","booleans","whitespace","identifier","pseudos","rwhitespace","rcomma","rcombinators","rattributeQuotes","rpseudo","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rinputs","rheader","rnative","runescape","funescape","escaped","escapedWhitespace","high","unloadHandler","els","hasCompare","createComment","getById","getElementsByName","attrId","getAttributeNode","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","expr","specified","duplicates","detectDuplicates","sortStable","nodeValue","selectors","createPseudo",">"," ","+","~","excess","unquoted","nodeNameSelector","operator","check","what","simple","forward","ofType","nodeIndex","useCache","pseudo","has","innerText","lang","elemLang","hasFocus","tabIndex","selectedIndex","header","button","even","odd","lt","gt","radio","checkbox","file","password","submit","parseOnly","soFar","preFilters","token","compiled","div1","unique","isXMLDoc","until","truncate","rneedsContext","rsingleTag","rootjQuery","parseHTML","rparentsprev","guaranteedUnique","targets","pos","prevAll","nextAll","nextUntil","prevUntil","Callbacks","firing","memory","fired","locked","firingIndex","stopOnFalse","disable","lock","fireWith","tuples","then","newDefer","tuple","returned","notify","resolve","reject","pipe","stateString","when","subordinate","progressValues","progressContexts","resolveContexts","resolveValues","updateFunc","readyList","readyWait","holdReady","hold","doScroll","chainable","emptyGet","raw","bulk","acceptData","owner","stored","camel","_data","_removeData","camelKey","dequeue","startLength","setter","clearQueue","defer","pnum","source","thead","col","tr","td","optgroup","tbody","tfoot","colgroup","caption","th","noCloneChecked","rkeyEvent","rmouseEvent","rtypenamespace","handleObjIn","eventHandle","handleObj","handlers","namespaces","origType","elemData","triggered","dispatch","delegateType","bindType","delegateCount","mappedTypes","origCount","teardown","removeEvent","fix","handlerQueue","delegateTarget","preDispatch","isPropagationStopped","isImmediatePropagationStopped","rnamespace","postDispatch","sel","fixHooks","keyHooks","original","charCode","mouseHooks","eventDoc","clientLeft","clientTop","fixHook","Event","noBubble","beforeunload","isDefaultPrevented","defaultPrevented","timeStamp","isSimulated","mouseenter","mouseleave","pointerenter","pointerleave","related","relatedTarget","rxhtmlTag","rnoInnerhtml","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","before","after","replaceWith","replaceChild","replaceAll","HTML","BODY","view","opener","swap","old","computeStyleTests","divStyle","pixelPositionVal","reliableMarginLeftVal","boxSizingReliableVal","pixelMarginRightVal","backgroundClip","clearCloneStyle","pixelPosition","reliableMarginLeft","reliableMarginRight","marginDiv","rdisplayswap","cssShow","cssNormalTransform","letterSpacing","fontWeight","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","order","orphans","widows","cssProps","origName","isFinite","margin","border","suffix","expanded","propHooks","eased","linear","swing","cos","timerId","rrun","*","tweener","prefilter","speeds","fadeTo","to","optall","doAnimation","stopQueue","timers","cssFn","slideToggle","fadeToggle","interval","slow","fast","checkOn","optSelected","optDisabled","radioValue","boolHook","nType","attrHooks","propName","attrNames","propFix","getter","rfocusable","rclickable","removeProp","for","class","rclass","classes","curValue","clazz","finalValue","stateVal","classNames","rreturn","rspaces","valHooks","optionSet","rfocusMorph","onlyHandlers","bubbleType","ontype","eventPath","isTrigger","parentWindow","simulate","fnOver","fnOut","focusin","attaches","nonce","rquery","parseXML","DOMParser","parseFromString","rhash","rts","rheaders","rlocalProtocol","rnoContent","rprotocol","allTypes","originAnchor","lastModified","etag","isLocal","protocol","processData","async","contentType","accepts","json","* text","text html","text json","text xml","ajaxSetup","ajaxPrefilter","ajaxTransport","ajax","status","nativeStatusText","headers","success","modified","statusText","timeoutTimer","transport","responseHeadersString","ifModified","cacheURL","callbackContext","statusCode","fireGlobals","globalEventContext","completeDeferred","responseHeaders","urlAnchor","requestHeaders","requestHeadersNames","strAbort","getAllResponseHeaders","setRequestHeader","lname","overrideMimeType","abort","finalText","crossDomain","host","hasContent","beforeSend","getJSON","getScript","firstElementChild","visible","getClientRects","r20","rCRLF","rsubmitterTypes","rsubmittable","encodeURIComponent","serialize","serializeArray","xhrSuccessStatus","1223","xhrSupported","cors","errorCallback","username","xhrFields","onerror","onabort","responseType","binary","text script","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonpCallback","callbackName","overwritten","responseContainer","jsonProp","keepScripts","parsed","_load","params","animated","setOffset","curPosition","curCSSTop","curTop","curOffset","curCSSLeft","calculatePosition","curElem","using","win","box","offsetParent","parentOffset","scrollTo","Height","Width","","defaultExtra","funcName","delegate","undelegate","andSelf","_jQuery","_$","noConflict","34","compatOptions","colYs","cols","getContainerWidth","firstItemElem","mathMethod","colSpan","colGroup","_getColGroup","minimumY","shortColIndex","setSpan","groupCount","groupColYs","stampSize","isOriginLeft","firstX","lastX","firstCol","lastCol","isOriginTop","stampMaxY","_getContainerFitWidth","unusedCols","previousWidth","35","isEmptyObj","toDashedAll","docElemStyle","transitionProperty","transformProperty","transitionEndEvent","vendorProperties","transitionDelay","_transn","ingProperties","clean","onEnd","elemStyle","supportedProp","getPosition","xValue","yValue","layoutSize","layoutPosition","xPadding","xProperty","xResetProperty","getXValue","yPadding","yProperty","yResetProperty","getYValue","isHorizontal","percentPosition","_transitionTo","compareX","compareY","didNotMove","isTransitioning","transX","transY","transitionStyle","getTranslate","onTransitionEnd","isCleaning","moveTo","_nonTransition","_removeStyles","_transition","from","enableTransition","transitionProps","staggerDelay","onwebkitTransitionEnd","ontransitionend","onotransitionend","dashedVendorProperties","propertyName","removeTransitionStyles","cleanStyle","cleanTransitionStyle","stagger","removeElem","transitionEndProperty","getHideRevealTransitionEndProperty","onRevealTransitionEnd","hiddenStyle","visibleStyle","styleProperty","optionStyle","onHideTransitionEnd","ev-emitter","36","queryElement","GUID","outlayerGUID","instances","isInitLayout","subclass","Parent","SubClass","getMilliseconds","mult","msUnits","containerStyle","initLayout","originLeft","originTop","resizeContainer","oldOption","horizontal","layoutInstant","stamps","canBindResize","bindResize","itemElems","_filterFindItemElements","getItemElements","_getItemsForLayout","_layoutItems","_postLayout","_emitCompleteOnItems","_processLayoutQueue","updateStagger","_positionItem","isResizingContainer","_setContainerMeasure","measure","isWidth","elemSize","onComplete","doneCount","emitArgs","$event","ignore","getItem","unignore","_find","unstamp","_getBoundingRect","boundingRect","_boundingRect","thisRect","isResizeBound","unbindResize","onresize","previousItems","revealItemElements","hideItemElements","Layout","ms"],"mappings":"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","file":"apps.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar _jquery = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nrequire('./parts/svg');\n\nrequire('./parts/scrolldepth');\n\nrequire('./parts/foundation');\n\nrequire('./parts/slick-slider');\n\nrequire('./parts/page-transitions');\n\nrequire('./parts/googlemap');\n\nrequire('./parts/isotope-grid');\n\nrequire('./parts/auto-input-kana');\n\nrequire('./parts/calculate-rate');\n\nrequire('./parts/countup');\n\nrequire('./parts/removing-alert');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nwindow.jQuery = _jquery2.default;\n\n/*\r\n * Parts\r\n */\n// Global\n/*\r\n Global\r\n */\n\n\n// Pages\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./parts/auto-input-kana\":2,\"./parts/calculate-rate\":3,\"./parts/countup\":4,\"./parts/foundation\":5,\"./parts/googlemap\":6,\"./parts/isotope-grid\":7,\"./parts/page-transitions\":8,\"./parts/removing-alert\":9,\"./parts/scrolldepth\":10,\"./parts/slick-slider\":11,\"./parts/svg\":12}],2:[function(require,module,exports){\n'use strict';\n\nrequire('../vendor/yubinbango');\nrequire('../vendor/jquery.autoKana');\n!function ($) {\n\t'use strict';\n\n\tif (document.getElementById('user-name')) {\n\t\t$.fn.autoKana('#user-name', '#user-name-kana', {\n\t\t\tkatakana: true\n\t\t});\n\t}\n\n\t// Yubinbango\n\tif ($('.wpcf7-form') && document.getElementById('zip')) {\n\t\t$('.wpcf7-form').addClass('h-adr').append('<input type=\"hidden\" class=\"p-country-name\" value=\"Japan\">');\n\t\t$('#zip').addClass('p-postal-code');\n\t\t$('#addr').toggleClass('p-region p-locality p-street-address p-extended-address');\n\t}\n}(jQuery);\n\n},{\"../vendor/jquery.autoKana\":16,\"../vendor/yubinbango\":21}],3:[function(require,module,exports){\n'use strict';\n\n!function ($) {\n\t// 共通\n\tvar adminBar = document.getElementById('wpadminbar') ? $('#wpadminbar').height() : 0,\n\t    mainNav = document.getElementById('sticky-topbar') ? $('#sticky-topbar').height() : 0,\n\t    headerHeight = parseInt(adminBar) + parseInt(mainNav);\n\t$('.rates-form .button').on('click', function (event) {\n\t\tevent.preventDefault();\n\t\tvar target = $(this).parents('.rates-form'),\n\t\t    position = target.offset().top - headerHeight;\n\t\ttarget.animate({\n\t\t\tscrollTop: position\n\t\t}, 550, 'ease');\n\t\treturn false;\n\t});\n\t// 交渉・調停・裁判の着手金と報酬金\n\t$('.chakusyu').find('.num').on('change', function () {\n\t\tvar inputNum = $(this).val(),\n\t\t    resultNum01 = void 0,\n\t\t    resultNum02 = void 0;\n\t\tif (inputNum < 300) {\n\t\t\tresultNum01 = inputNum * 0.08 <= 20 ? 20 : inputNum * 0.08;\n\t\t\tresultNum02 = inputNum * 0.16;\n\t\t} else if (300 <= inputNum) {\n\t\t\tresultNum01 = inputNum * 0.05 + 9;\n\t\t\tresultNum02 = inputNum * 0.1 + 18;\n\t\t} else {\n\t\t\tresultNum01 = '';\n\t\t\tresultNum02 = '';\n\t\t}\n\t\tif (resultNum01 && resultNum02) {\n\t\t\tresultNum01 = parseInt(resultNum01);\n\t\t\tresultNum02 = parseInt(resultNum02);\n\t\t}\n\t\t$(this).parents('.chakusyu').find('.result01').val(resultNum01);\n\t\t$(this).parents('.chakusyu').find('.result02').val(resultNum02);\n\t});\n\t// 遺産分割協議書作成手数料\n\t$('.tesuryo').find('.num').on('change', function () {\n\t\tvar inputNum = $(this).val(),\n\t\t    resultNum = void 0;\n\t\tif (inputNum < 300) {\n\t\t\tresultNum = 10;\n\t\t} else if (300 <= inputNum) {\n\t\t\tresultNum = inputNum * 0.01 + 7;\n\t\t} else {\n\t\t\tresultNum = '';\n\t\t}\n\t\tif (resultNum) {\n\t\t\tresultNum = parseInt(resultNum);\n\t\t}\n\t\t$(this).parents('.tesuryo').find('.result').val(resultNum);\n\t});\n\t// 遺言書作成手数料\n\t$('.igon').find('.type').on('change', function () {\n\t\tvar inputType = $(this).val(),\n\t\t    resultNum = void 0,\n\t\t    inputNum = $(this).parents('.igon').find('.num').val();\n\t\tif (inputNum < 300) {\n\t\t\tresultNum = 20;\n\t\t} else if (300 <= inputNum) {\n\t\t\tresultNum = inputNum * 0.01 + 17;\n\t\t} else {\n\t\t\tresultNum = '';\n\t\t}\n\t\tif (resultNum) {\n\t\t\tresultNum = parseInt(resultNum);\n\t\t}\n\t\t$(this).parents('.igon').find('.result').val(resultNum);\n\t});\n\t$('.igon').find('.num').on('change', function () {\n\t\tvar inputType = $(this).parents('.igon').find('.type').val(),\n\t\t    resultNum = void 0;\n\t\tinputNum = $(this).val();\n\t\tif (0 == inputType) {\n\t\t\tresultNum = '10～20';\n\t\t} else {\n\t\t\tif (inputNum < 300) {\n\t\t\t\tresultNum = 20;\n\t\t\t} else if (300 <= inputNum) {\n\t\t\t\tresultNum = inputNum * 0.01 + 17;\n\t\t\t} else {\n\t\t\t\tresultNum = '';\n\t\t\t}\n\t\t\tif (resultNum) {\n\t\t\t\tresultNum = parseInt(resultNum);\n\t\t\t}\n\t\t};\n\t\t$(this).parents('.igon').find('.result').val(resultNum);\n\t});\n\t// 遺言執行手数料\n\t$('.executor').find('.num').on('change', function () {\n\t\tvar inputNum = $(this).val(),\n\t\t    resultNum = void 0;\n\t\tif (inputNum < 300) {\n\t\t\tresultNum = 30;\n\t\t} else if (300 <= inputNum) {\n\t\t\tresultNum = inputNum * 0.02 + 24;\n\t\t} else {\n\t\t\tresultNum = '';\n\t\t}\n\t\tif (resultNum) {\n\t\t\tresultNum = parseInt(resultNum);\n\t\t}\n\t\t$(this).parents('.executor').find('.result').val(resultNum);\n\t});\n}(jQuery);\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nrequire('../vendor/countup');\nrequire('../vendor/appear');\n!function ($) {\n\tvar ele = $('.js-countup');\n\tif (!ele[0]) {\n\t\tele.each(function (i, _this) {\n\t\t\tvar start = _this.data('countup-start'),\n\t\t\t    end = _this.data('countup-end');\n\t\t\t_this.appear(function () {\n\t\t\t\t_this.countUp({\n\t\t\t\t\tstart: start,\n\t\t\t\t\tlast: end\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n}(jQuery);\n\n},{\"../vendor/appear\":13,\"../vendor/countup\":14}],5:[function(require,module,exports){\n'use strict';\n\nvar foundation = require('../vendor/foundation.js');\nrequire('../vendor/jquery.sticky.js');\n!function ($) {\n\t$(document).ready(function () {\n\t\t'use strict';\n\n\t\tvar adminBar = $('#wpadminbar')[0] ? $('#wpadminbar').height() : 0,\n\t\t    mainNav = $('#sticky-topbar')[0] ? $('#sticky-topbar').height() : 0,\n\t\t    headerHeight = adminBar + mainNav;\n\n\t\t// Change default settings.\n\t\tFoundation.Accordion.defaults.allowAllClosed = true;\n\t\tFoundation.Sticky.defaults.marginTop = headerHeight / 16 + 1;\n\t\tFoundation.Sticky.defaults.stickyOn = 'large';\n\t\tFoundation.Sticky.defaults.anchor = 'content-wrapper';\n\t\tFoundation.Sticky.defaults.topAnchor = 'content-wrapper';\n\t\tFoundation.Sticky.defaults.btmAnchor = 'content-wrapper';\n\n\t\t$(document).foundation();\n\n\t\t// Sticky Navigation.\n\t\t$('#sticky-topbar').sticky({\n\t\t\ttopSpacing: adminBar\n\t\t});\n\t});\n}(jQuery);\n\n},{\"../vendor/foundation.js\":15,\"../vendor/jquery.sticky.js\":18}],6:[function(require,module,exports){\n'use strict';\n\n{\n\tif (document.getElementById('section-map')) {\n\t\tvar latlng1 = new google.maps.LatLng(34.399869, 132.4645053),\n\t\t    latlng2 = new google.maps.LatLng(34.3951325, 132.461194),\n\t\t    opts1 = {\n\t\t\tzoom: 17,\n\t\t\tcenter: latlng1,\n\t\t\tmapTypeId: google.maps.MapTypeId.ROADMAP,\n\t\t\tscrollwheel: false\n\t\t},\n\t\t    opts2 = {\n\t\t\tzoom: 17,\n\t\t\tcenter: latlng2,\n\t\t\tmapTypeId: google.maps.MapTypeId.ROADMAP,\n\t\t\tscrollwheel: false\n\t\t},\n\t\t    map1 = new google.maps.Map(document.getElementById('section-map'), opts1),\n\t\t    map2 = new google.maps.Map(document.getElementById('bicycle-map'), opts2);\n\t\tvar icon1 = new google.maps.MarkerImage('../wp-content/themes/law-yamashita/assets/img/map-logo.png', new google.maps.Size(64, 86), new google.maps.Point(0, 0));\n\t\tvar markerOptions1 = {\n\t\t\tposition: latlng1,\n\t\t\tmap: map1,\n\t\t\ticon: icon1,\n\t\t\ttitle: '山下江法律事務所'\n\t\t},\n\t\t    iwopts2 = {\n\t\t\tposition: latlng2,\n\t\t\tmap: map2,\n\t\t\tcontent: '<a class=\"external-links no-ani\" href=\"http://www.city.hiroshima.lg.jp/www/contents/1393215813133/index.html#kamiyatyou\" title=\"市営基町駐輪場の詳細\" target=\"_blank\">市営の基町駐輪場（有料）</a>'\n\t\t},\n\t\t    marker1 = new google.maps.Marker(markerOptions1),\n\t\t    infoWindow = new google.maps.InfoWindow(iwopts2);\n\t}\n}\n\n},{}],7:[function(require,module,exports){\n'use strict';\n\nvar Isotope = require('isotope-layout'),\n    jQueryBridget = require('jquery-bridget');\n!function ($) {\n\tif (document.getElementById('grid-members')) {\n\t\t(function () {\n\t\t\tvar concatValues = function concatValues(obj) {\n\t\t\t\tvar value = '';\n\t\t\t\tfor (var prop in obj) {\n\t\t\t\t\tvalue += obj[prop];\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t};\n\n\t\t\tjQueryBridget('isotope', Isotope, $);\n\t\t\tvar container = $('#grid-members').isotope({\n\t\t\t\titemSelector: '.grid-item',\n\t\t\t\tmasonry: {\n\t\t\t\t\tgutter: 10,\n\t\t\t\t\tcolumnWidth: 210,\n\t\t\t\t\tisFitWidth: true\n\t\t\t\t},\n\t\t\t\tanimationOptions: {\n\t\t\t\t\tduration: 1000\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar filters = {};\n\t\t\t$('.filter-group').on('change', function () {\n\t\t\t\tvar filterGroup = $(this).attr('data-filter-group');\n\t\t\t\tfilters[filterGroup] = this.value;\n\t\t\t\tvar filterValue = concatValues(filters);\n\t\t\t\tcontainer.isotope({\n\t\t\t\t\tfilter: filterValue\n\t\t\t\t});\n\t\t\t});\n\t\t})();\n\t}\n}(jQuery);\n\n},{\"isotope-layout\":26,\"jquery-bridget\":32}],8:[function(require,module,exports){\n'use strict';\n\n!function ($) {\n\t'use strict';\n\n\t$(document).ready(function () {\n\t\tvar adminBar = $('#wpadminbar')[0] ? $('#wpadminbar').height() : 0,\n\t\t    mainNav = $('#sticky-topbar')[0] ? $('#sticky-topbar').height() : 0,\n\t\t    headerHeight = adminBar + mainNav;\n\n\t\t$(window).scroll(function () {\n\t\t\tvar actionsBtn = $('#btn-fixed-actions');\n\t\t\tif (200 < $(this).scrollTop()) {\n\t\t\t\tactionsBtn.fadeIn('slow');\n\t\t\t} else {\n\t\t\t\tactionsBtn.fadeOut('slow');\n\t\t\t}\n\t\t});\n\t\t$('[href^=\"#\"]').click(function () {\n\t\t\tvar href = $(this).attr('href'),\n\t\t\t    target = $(href === '#' || href === '' ? 'html' : href),\n\t\t\t    position = target.offset().top - headerHeight;\n\t\t\t$('html, body').animate({\n\t\t\t\tscrollTop: position\n\t\t\t}, 550, 'swing');\n\t\t\treturn false;\n\t\t});\n\t});\n}(jQuery);\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\n!function ($) {\n\t'use stirct';\n\n\tvar _this = this;\n\n\tif (document.querySelector('.wpcf7-form') !== 0) {\n\t\tvar backAndForward = function backAndForward() {\n\t\t\tif ('' == location.hash) {\n\t\t\t\t$('#select-member').foundation('close');\n\t\t\t};\n\t\t};\n\t\t// Inputをクリック時にReveal Modalを開く\n\n\n\t\t$('input, textarea, select').on('keyup change', function () {\n\t\t\t$(window).on('beforeunload', function () {\n\t\t\t\treturn '他のページヘ移動すると入力データはすべて破棄されます。';\n\t\t\t});\n\t\t});\n\t\t$('a, input[type=\"submit\"]').on('click', function (e) {\n\t\t\t$(window).off('beforeunload');\n\t\t});\n\t\t// 戻るボタンを押されたときに戻らずにModalを閉じる\n\t\t$('.js-select-modal').on('click', function () {\n\t\t\tlocation.hash = 'member-select';\n\t\t});\n\t\twindow.onhashchange = backAndForward;\n\t\t$('.js-select-member').on('click', function (event) {\n\t\t\tevent.preventDefault();\n\t\t\t$('#select-member').foundation('open');\n\t\t});\n\t\t// 指名しないボタンを用意\n\t\t$('.close-select-members').on('click', function () {\n\t\t\t$('.js-select-member').val('指名しない');\n\t\t\t$('#select-member .focus').removeClass('focus');\n\t\t\t$('#select-member').foundation('close');\n\t\t});\n\t\t// メンバーを指名した場合の値の受け渡し\n\t\t$('#select-member .column').on('click', function () {\n\t\t\tvar el = $(_this),\n\t\t\t    wrapper = el.parents('.select-member-wrapper'),\n\t\t\t    area = $('.js-select-member');\n\t\t\tif (!el.hasClass('.focus')) {\n\t\t\t\tel.parent('.row').children('.focus').removeClass('focus');\n\t\t\t\tel.addClass('focus');\n\t\t\t\tname = el.data('name');\n\t\t\t} else {\n\t\t\t\tel.removeClass('focus');\n\t\t\t\tname = '指名しない';\n\t\t\t}\n\t\t\tarea.val(name);\n\t\t\tel.parents('#select-member').delay(300).foundation('close');\n\t\t});\n\t}\n}(jQuery);\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nrequire('../vendor/jquery.scrolldepth');\n!function ($) {\n\t$.scrollDepth();\n}(jQuery);\n\n},{\"../vendor/jquery.scrolldepth\":17}],11:[function(require,module,exports){\n'use strict';\n\nrequire('../vendor/slick');\n!function ($) {\n\t/*\r\n  * トップスライダー\r\n  */\n\t$('#top-slides').slick({\n\t\tslide: '.slide-item',\n\t\tautoplay: true,\n\t\tfade: true,\n\t\tmobileFirst: true,\n\t\tappendArrows: $('#slides-btn'),\n\t\tprevArrow: '<button class=\"button btn-prev waves-effect\"><i class=\"fa fa-angle-left\"></i></button>',\n\t\tnextArrow: '<button class=\"button btn-next waves-effect\"><i class=\"fa fa-angle-right\"></i></button>',\n\t\tuseCSS: true,\n\t\tuseTransform: true\n\t});\n\t/*\r\n  * メンバーカルーセル\r\n  */\n\t$('#cta-member-carousel').slick({\n\t\tslide: '.slide-item',\n\t\tautoplay: true,\n\t\tarrows: false,\n\t\tlazyLoad: 'progressive',\n\t\tmobileFirst: true,\n\t\tslidesToShow: 3,\n\t\tresponsive: [{\n\t\t\tbreakpoint: 1024,\n\t\t\tsettings: {\n\t\t\t\tslidesToShow: 3\n\t\t\t}\n\t\t}, {\n\t\t\tbreakpoint: 750,\n\t\t\tsettings: {\n\t\t\t\tslidesToShow: 3\n\t\t\t}\n\t\t}, {\n\t\t\tbreakpoint: 500,\n\t\t\tsettings: {\n\t\t\t\tslidesToShow: 2\n\t\t\t}\n\t\t}]\n\t});\n\t/*\r\n  * LPの時計\r\n  */\n\t$('#js-clock').slick({\n\t\tslide: '.slide-item',\n\t\tautoplay: true,\n\t\tautoplaySpeed: 2000,\n\t\tfade: true,\n\t\tarrows: false,\n\t\tlazyLoad: 'progressive',\n\t\tmobileFirst: true,\n\t\tslidesToShow: 1\n\t});\n\tif (document.getElementById('js-clock') !== null) {\n\t\t(function () {\n\t\t\tvar count = 0,\n\t\t\t    hour = $('#js-clock .hour-hand'),\n\t\t\t    minute = $('#js-clock .minute-hand');\n\t\t\t$('#js-clock').on('afterChange', function () {\n\t\t\t\t// 分針\n\t\t\t\tminute.css({\n\t\t\t\t\t\"-webkit-transform\": \"rotate(\" + (count + 1) * 90 + \"deg)\",\n\t\t\t\t\t\"-ms-transform\": \"rotate(\" + (count + 1) * 90 + \"deg)\",\n\t\t\t\t\t\"transform\": \"rotate(\" + (count + 1) * 90 + \"deg)\"\n\t\t\t\t});\n\t\t\t\t// 時針\n\t\t\t\tif (0 === count % 4 && 0 !== count) {\n\t\t\t\t\thour.css({\n\t\t\t\t\t\t\"-webkit-transform\": \"rotate(\" + (count / 4 + 1) * 90 + \"deg)\",\n\t\t\t\t\t\t\"-ms-transform\": \"rotate(\" + (count / 4 + 1) * 90 + \"deg)\",\n\t\t\t\t\t\t\"transform\": \"rotate(\" + (count / 4 + 1) * 90 + \"deg)\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tcount++;\n\t\t\t});\n\t\t})();\n\t}\n}(jQuery);\n\n},{\"../vendor/slick\":19}],12:[function(require,module,exports){\n'use strict';\n\n{\n\t'use strict';\n\tvar svg4everybody = require('../vendor/svg4everybody');\n\tsvg4everybody();\n}\n\n},{\"../vendor/svg4everybody\":20}],13:[function(require,module,exports){\n\"use strict\";\n\n/*\r\n * jQuery.appear\r\n * https://github.com/bas2k/jquery.appear/\r\n *\r\n * Copyright (c) 2009 Michael Hixson\r\n * Copyright (c) 2012-2014 Alexander Brovikov\r\n * Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)\r\n */\n(function (e) {\n  e.fn.appear = function (t, n) {\n    var r = e.extend({ data: undefined, one: true, accX: 0, accY: 0 }, n);return this.each(function () {\n      var n = e(this);n.appeared = false;if (!t) {\n        n.trigger(\"appear\", r.data);return;\n      }var i = e(window);var s = function s() {\n        if (!n.is(\":visible\")) {\n          n.appeared = false;return;\n        }var e = i.scrollLeft();var t = i.scrollTop();var s = n.offset();var o = s.left;var u = s.top;var a = r.accX;var f = r.accY;var l = n.height();var c = i.height();var h = n.width();var p = i.width();if (u + l + f >= t && u <= t + c + f && o + h + a >= e && o <= e + p + a) {\n          if (!n.appeared) n.trigger(\"appear\", r.data);\n        } else {\n          n.appeared = false;\n        }\n      };var o = function o() {\n        n.appeared = true;if (r.one) {\n          i.unbind(\"scroll\", s);var o = e.inArray(s, e.fn.appear.checks);if (o >= 0) e.fn.appear.checks.splice(o, 1);\n        }t.apply(this, arguments);\n      };if (r.one) n.one(\"appear\", r.data, o);else n.bind(\"appear\", r.data, o);i.scroll(s);e.fn.appear.checks.push(s);s();\n    });\n  };e.extend(e.fn.appear, { checks: [], timeout: null, checkAll: function checkAll() {\n      var t = e.fn.appear.checks.length;if (t > 0) while (t--) {\n        e.fn.appear.checks[t]();\n      }\n    }, run: function run() {\n      if (e.fn.appear.timeout) clearTimeout(e.fn.appear.timeout);e.fn.appear.timeout = setTimeout(e.fn.appear.checkAll, 20);\n    } });e.each([\"append\", \"prepend\", \"after\", \"before\", \"attr\", \"removeAttr\", \"addClass\", \"removeClass\", \"toggleClass\", \"remove\", \"css\", \"show\", \"hide\"], function (t, n) {\n    var r = e.fn[n];if (r) {\n      e.fn[n] = function () {\n        var t = r.apply(this, arguments);e.fn.appear.run();return t;\n      };\n    }\n  });\n})(jQuery);\n\n},{}],14:[function(require,module,exports){\n'use strict';\n\n/**\r\n * jquery.countUp\r\n * @author hisayoshi hayashi: HYS INC.\r\n * @license MIT license\r\n *\r\n */\n\n;\n(function ($) {\n  $.fn.countUp = function (options) {\n    var start_num = Number($(this).text());\n    var d = {\n      start: 0,\n      last: 100,\n      duration: 1000,\n      frame: 33,\n      update: null,\n      complete: null\n    };\n    var o = $.extend(d, options);\n    var $that = $(this);\n\n    o.last = parseInt(o.last);\n    o.duration = parseInt(o.duration);\n    o.frame = parseInt(o.frame);\n\n    $that.each(function (i) {\n      var $t = $(this);\n      var total_frame = 0;\n      var split = (o.last - o.start) / (o.duration / 33);\n      var value = o.start;\n\n      var clear = setInterval(function () {\n        value = Math.round(value + split);\n        $t.text(value);\n\n        if (typeof o.update == 'function') {\n          o.update.call($t, value);\n        }\n\n        if (total_frame > o.duration) {\n          clearInterval(clear);\n          $t.text(o.last);\n\n          if (typeof o.complete == 'function') {\n            o.complete.call($t, value);\n          }\n        }\n        total_frame += o.frame;\n      }, o.frame);\n    });\n    $that = new String($that).replace(/,/g, \"\");\n    while ($that != ($that = $that.replace(/^(-?\\d+)(\\d{3})/, \"$1,$2\"))) {}\n    return $that;\n  };\n})(jQuery);\n\n},{}],15:[function(require,module,exports){\n'use strict';var _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};!function($){\"use strict\";var FOUNDATION_VERSION='6.2.0';// Global Foundation object\n// This is attached to the window, or used as a module for AMD/Browserify\nvar Foundation={version:FOUNDATION_VERSION,/**\r\n     * Stores initialized plugins.\r\n     */_plugins:{},/**\r\n     * Stores generated unique ids for plugin instances\r\n     */_uuids:[],/**\r\n     * Returns a boolean for RTL support\r\n     */rtl:function rtl(){return $('html').attr('dir')==='rtl';},/**\r\n     * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\r\n     * @param {Object} plugin - The constructor of the plugin.\r\n     */plugin:function plugin(_plugin,name){// Object key to use when adding to global Foundation object\n// Examples: Foundation.Reveal, Foundation.OffCanvas\nvar className=name||functionName(_plugin);// Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\n// Examples: data-reveal, data-off-canvas\nvar attrName=hyphenate(className);// Add to the Foundation object and the plugins list (for reflowing)\nthis._plugins[attrName]=this[className]=_plugin;},/**\r\n     * @function\r\n     * Populates the _uuids array with pointers to each individual plugin instance.\r\n     * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\r\n     * Also fires the initialization event for each plugin, consolidating repeditive code.\r\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\r\n     * @param {String} name - the name of the plugin, passed as a camelCased string.\r\n     * @fires Plugin#init\r\n     */registerPlugin:function registerPlugin(plugin,name){var pluginName=name?hyphenate(name):functionName(plugin.constructor).toLowerCase();plugin.uuid=this.GetYoDigits(6,pluginName);if(!plugin.$element.attr('data-'+pluginName)){plugin.$element.attr('data-'+pluginName,plugin.uuid);}if(!plugin.$element.data('zfPlugin')){plugin.$element.data('zfPlugin',plugin);}/**\r\n       * Fires when the plugin has initialized.\r\n       * @event Plugin#init\r\n       */plugin.$element.trigger('init.zf.'+pluginName);this._uuids.push(plugin.uuid);return;},/**\r\n     * @function\r\n     * Removes the plugins uuid from the _uuids array.\r\n     * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\r\n     * Also fires the destroyed event for the plugin, consolidating repeditive code.\r\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\r\n     * @fires Plugin#destroyed\r\n     */unregisterPlugin:function unregisterPlugin(plugin){var pluginName=hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));this._uuids.splice(this._uuids.indexOf(plugin.uuid),1);plugin.$element.removeAttr('data-'+pluginName).removeData('zfPlugin')/**\r\n       * Fires when the plugin has been destroyed.\r\n       * @event Plugin#destroyed\r\n       */.trigger('destroyed.zf.'+pluginName);for(var prop in plugin){plugin[prop]=null;//clean up script to prep for garbage collection.\n}return;},/**\r\n     * @function\r\n     * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\r\n     * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\r\n     * @default If no argument is passed, reflow all currently active plugins.\r\n     */reInit:function reInit(plugins){var isJQ=plugins instanceof $;try{if(isJQ){plugins.each(function(){$(this).data('zfPlugin')._init();});}else{var type=typeof plugins==='undefined'?'undefined':_typeof(plugins),_this=this,fns={'object':function object(plgs){plgs.forEach(function(p){p=hyphenate(p);$('[data-'+p+']').foundation('_init');});},'string':function string(){plugins=hyphenate(plugins);$('[data-'+plugins+']').foundation('_init');},'undefined':function undefined(){this['object'](Object.keys(_this._plugins));}};fns[type](plugins);}}catch(err){console.error(err);}finally{return plugins;}},/**\r\n     * returns a random base-36 uid with namespacing\r\n     * @function\r\n     * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\r\n     * @param {String} namespace - name of plugin to be incorporated in uid, optional.\r\n     * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\r\n     * @returns {String} - unique id\r\n     */GetYoDigits:function GetYoDigits(length,namespace){length=length||6;return Math.round(Math.pow(36,length+1)-Math.random()*Math.pow(36,length)).toString(36).slice(1)+(namespace?'-'+namespace:'');},/**\r\n     * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\r\n     * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\r\n     * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\r\n     */reflow:function reflow(elem,plugins){// If plugins is undefined, just grab everything\nif(typeof plugins==='undefined'){plugins=Object.keys(this._plugins);}// If plugins is a string, convert it to an array with one item\nelse if(typeof plugins==='string'){plugins=[plugins];}var _this=this;// Iterate through each plugin\n$.each(plugins,function(i,name){// Get the current plugin\nvar plugin=_this._plugins[name];// Localize the search to all elements inside elem, as well as elem itself, unless elem === document\nvar $elem=$(elem).find('[data-'+name+']').addBack('[data-'+name+']');// For each plugin found, initialize it\n$elem.each(function(){var $el=$(this),opts={};// Don't double-dip on plugins\nif($el.data('zfPlugin')){console.warn(\"Tried to initialize \"+name+\" on an element that already has a Foundation plugin.\");return;}if($el.attr('data-options')){var thing=$el.attr('data-options').split(';').forEach(function(e,i){var opt=e.split(':').map(function(el){return el.trim();});if(opt[0])opts[opt[0]]=parseValue(opt[1]);});}try{$el.data('zfPlugin',new plugin($(this),opts));}catch(er){console.error(er);}finally{return;}});});},getFnName:functionName,transitionend:function transitionend($elem){var transitions={'transition':'transitionend','WebkitTransition':'webkitTransitionEnd','MozTransition':'transitionend','OTransition':'otransitionend'};var elem=document.createElement('div'),end;for(var t in transitions){if(typeof elem.style[t]!=='undefined'){end=transitions[t];}}if(end){return end;}else{end=setTimeout(function(){$elem.triggerHandler('transitionend',[$elem]);},1);return'transitionend';}}};Foundation.util={/**\r\n     * Function for applying a debounce effect to a function call.\r\n     * @function\r\n     * @param {Function} func - Function to be called at end of timeout.\r\n     * @param {Number} delay - Time in ms to delay the call of `func`.\r\n     * @returns function\r\n     */throttle:function throttle(func,delay){var timer=null;return function(){var context=this,args=arguments;if(timer===null){timer=setTimeout(function(){func.apply(context,args);timer=null;},delay);}};}};// TODO: consider not making this a jQuery function\n// TODO: need way to reflow vs. re-initialize\n/**\r\n   * The Foundation jQuery method.\r\n   * @param {String|Array} method - An action to perform on the current jQuery object.\r\n   */var foundation=function foundation(method){var type=typeof method==='undefined'?'undefined':_typeof(method),$meta=$('meta.foundation-mq'),$noJS=$('.no-js');if(!$meta.length){$('<meta class=\"foundation-mq\">').appendTo(document.head);}if($noJS.length){$noJS.removeClass('no-js');}if(type==='undefined'){//needs to initialize the Foundation object, or an individual plugin.\nFoundation.MediaQuery._init();Foundation.reflow(this);}else if(type==='string'){//an individual method to invoke on a plugin or group of plugins\nvar args=Array.prototype.slice.call(arguments,1);//collect all the arguments, if necessary\nvar plugClass=this.data('zfPlugin');//determine the class of plugin\nif(plugClass!==undefined&&plugClass[method]!==undefined){//make sure both the class and method exist\nif(this.length===1){//if there's only one, call it directly.\nplugClass[method].apply(plugClass,args);}else{this.each(function(i,el){//otherwise loop through the jQuery collection and invoke the method on each\nplugClass[method].apply($(el).data('zfPlugin'),args);});}}else{//error for no class or no method\nthrow new ReferenceError(\"We're sorry, '\"+method+\"' is not an available method for \"+(plugClass?functionName(plugClass):'this element')+'.');}}else{//error for invalid argument type\nthrow new TypeError('We\\'re sorry, '+type+' is not a valid parameter. You must use a string representing the method you wish to invoke.');}return this;};window.Foundation=Foundation;$.fn.foundation=foundation;// Polyfill for requestAnimationFrame\n(function(){if(!Date.now||!window.Date.now)window.Date.now=Date.now=function(){return new Date().getTime();};var vendors=['webkit','moz'];for(var i=0;i<vendors.length&&!window.requestAnimationFrame;++i){var vp=vendors[i];window.requestAnimationFrame=window[vp+'RequestAnimationFrame'];window.cancelAnimationFrame=window[vp+'CancelAnimationFrame']||window[vp+'CancelRequestAnimationFrame'];}if(/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent)||!window.requestAnimationFrame||!window.cancelAnimationFrame){var lastTime=0;window.requestAnimationFrame=function(callback){var now=Date.now();var nextTime=Math.max(lastTime+16,now);return setTimeout(function(){callback(lastTime=nextTime);},nextTime-now);};window.cancelAnimationFrame=clearTimeout;}/**\r\n     * Polyfill for performance.now, required by rAF\r\n     */if(!window.performance||!window.performance.now){window.performance={start:Date.now(),now:function now(){return Date.now()-this.start;}};}})();if(!Function.prototype.bind){Function.prototype.bind=function(oThis){if(typeof this!=='function'){// closest thing possible to the ECMAScript 5\n// internal IsCallable function\nthrow new TypeError('Function.prototype.bind - what is trying to be bound is not callable');}var aArgs=Array.prototype.slice.call(arguments,1),fToBind=this,fNOP=function fNOP(){},fBound=function fBound(){return fToBind.apply(this instanceof fNOP?this:oThis,aArgs.concat(Array.prototype.slice.call(arguments)));};if(this.prototype){// native functions don't have a prototype\nfNOP.prototype=this.prototype;}fBound.prototype=new fNOP();return fBound;};}// Polyfill to get the name of a function in IE9\nfunction functionName(fn){if(Function.prototype.name===undefined){var funcNameRegex=/function\\s([^(]{1,})\\(/;var results=funcNameRegex.exec(fn.toString());return results&&results.length>1?results[1].trim():\"\";}else if(fn.prototype===undefined){return fn.constructor.name;}else{return fn.prototype.constructor.name;}}function parseValue(str){if(/true/.test(str))return true;else if(/false/.test(str))return false;else if(!isNaN(str*1))return parseFloat(str);return str;}// Convert PascalCase to kebab-case\n// Thank you: http://stackoverflow.com/a/8955580\nfunction hyphenate(str){return str.replace(/([a-z])([A-Z])/g,'$1-$2').toLowerCase();}}(jQuery);'use strict';!function($){Foundation.Box={ImNotTouchingYou:ImNotTouchingYou,GetDimensions:GetDimensions,GetOffsets:GetOffsets};/**\r\n   * Compares the dimensions of an element to a container and determines collision events with container.\r\n   * @function\r\n   * @param {jQuery} element - jQuery object to test for collisions.\r\n   * @param {jQuery} parent - jQuery object to use as bounding container.\r\n   * @param {Boolean} lrOnly - set to true to check left and right values only.\r\n   * @param {Boolean} tbOnly - set to true to check top and bottom values only.\r\n   * @default if no parent object passed, detects collisions with `window`.\r\n   * @returns {Boolean} - true if collision free, false if a collision in any direction.\r\n   */function ImNotTouchingYou(element,parent,lrOnly,tbOnly){var eleDims=GetDimensions(element),top,bottom,left,right;if(parent){var parDims=GetDimensions(parent);bottom=eleDims.offset.top+eleDims.height<=parDims.height+parDims.offset.top;top=eleDims.offset.top>=parDims.offset.top;left=eleDims.offset.left>=parDims.offset.left;right=eleDims.offset.left+eleDims.width<=parDims.width;}else{bottom=eleDims.offset.top+eleDims.height<=eleDims.windowDims.height+eleDims.windowDims.offset.top;top=eleDims.offset.top>=eleDims.windowDims.offset.top;left=eleDims.offset.left>=eleDims.windowDims.offset.left;right=eleDims.offset.left+eleDims.width<=eleDims.windowDims.width;}var allDirs=[bottom,top,left,right];if(lrOnly){return left===right===true;}if(tbOnly){return top===bottom===true;}return allDirs.indexOf(false)===-1;};/**\r\n   * Uses native methods to return an object of dimension values.\r\n   * @function\r\n   * @param {jQuery || HTML} element - jQuery object or DOM element for which to get the dimensions. Can be any element other that document or window.\r\n   * @returns {Object} - nested object of integer pixel values\r\n   * TODO - if element is window, return only those values.\r\n   */function GetDimensions(elem,test){elem=elem.length?elem[0]:elem;if(elem===window||elem===document){throw new Error(\"I'm sorry, Dave. I'm afraid I can't do that.\");}var rect=elem.getBoundingClientRect(),parRect=elem.parentNode.getBoundingClientRect(),winRect=document.body.getBoundingClientRect(),winY=window.pageYOffset,winX=window.pageXOffset;return{width:rect.width,height:rect.height,offset:{top:rect.top+winY,left:rect.left+winX},parentDims:{width:parRect.width,height:parRect.height,offset:{top:parRect.top+winY,left:parRect.left+winX}},windowDims:{width:winRect.width,height:winRect.height,offset:{top:winY,left:winX}}};}/**\r\n   * Returns an object of top and left integer pixel values for dynamically rendered elements,\r\n   * such as: Tooltip, Reveal, and Dropdown\r\n   * @function\r\n   * @param {jQuery} element - jQuery object for the element being positioned.\r\n   * @param {jQuery} anchor - jQuery object for the element's anchor point.\r\n   * @param {String} position - a string relating to the desired position of the element, relative to it's anchor\r\n   * @param {Number} vOffset - integer pixel value of desired vertical separation between anchor and element.\r\n   * @param {Number} hOffset - integer pixel value of desired horizontal separation between anchor and element.\r\n   * @param {Boolean} isOverflow - if a collision event is detected, sets to true to default the element to full width - any desired offset.\r\n   * TODO alter/rewrite to work with `em` values as well/instead of pixels\r\n   */function GetOffsets(element,anchor,position,vOffset,hOffset,isOverflow){var $eleDims=GetDimensions(element),$anchorDims=anchor?GetDimensions(anchor):null;switch(position){case'top':return{left:Foundation.rtl()?$anchorDims.offset.left-$eleDims.width+$anchorDims.width:$anchorDims.offset.left,top:$anchorDims.offset.top-($eleDims.height+vOffset)};break;case'left':return{left:$anchorDims.offset.left-($eleDims.width+hOffset),top:$anchorDims.offset.top};break;case'right':return{left:$anchorDims.offset.left+$anchorDims.width+hOffset,top:$anchorDims.offset.top};break;case'center top':return{left:$anchorDims.offset.left+$anchorDims.width/2-$eleDims.width/2,top:$anchorDims.offset.top-($eleDims.height+vOffset)};break;case'center bottom':return{left:isOverflow?hOffset:$anchorDims.offset.left+$anchorDims.width/2-$eleDims.width/2,top:$anchorDims.offset.top+$anchorDims.height+vOffset};break;case'center left':return{left:$anchorDims.offset.left-($eleDims.width+hOffset),top:$anchorDims.offset.top+$anchorDims.height/2-$eleDims.height/2};break;case'center right':return{left:$anchorDims.offset.left+$anchorDims.width+hOffset+1,top:$anchorDims.offset.top+$anchorDims.height/2-$eleDims.height/2};break;case'center':return{left:$eleDims.windowDims.offset.left+$eleDims.windowDims.width/2-$eleDims.width/2,top:$eleDims.windowDims.offset.top+$eleDims.windowDims.height/2-$eleDims.height/2};break;case'reveal':return{left:($eleDims.windowDims.width-$eleDims.width)/2,top:$eleDims.windowDims.offset.top+vOffset};case'reveal full':return{left:$eleDims.windowDims.offset.left,top:$eleDims.windowDims.offset.top};break;default:return{left:Foundation.rtl()?$anchorDims.offset.left-$eleDims.width+$anchorDims.width:$anchorDims.offset.left,top:$anchorDims.offset.top+$anchorDims.height+vOffset};}}}(jQuery);/*******************************************\r\n *                                         *\r\n * This util was created by Marius Olbertz *\r\n * Please thank Marius on GitHub /owlbertz *\r\n * or the web http://www.mariusolbertz.de/ *\r\n *                                         *\r\n ******************************************/'use strict';!function($){var keyCodes={9:'TAB',13:'ENTER',27:'ESCAPE',32:'SPACE',37:'ARROW_LEFT',38:'ARROW_UP',39:'ARROW_RIGHT',40:'ARROW_DOWN'};var commands={};var Keyboard={keys:getKeyCodes(keyCodes),/**\r\n     * Parses the (keyboard) event and returns a String that represents its key\r\n     * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\r\n     * @param {Event} event - the event generated by the event handler\r\n     * @return String key - String that represents the key pressed\r\n     */parseKey:function parseKey(event){var key=keyCodes[event.which||event.keyCode]||String.fromCharCode(event.which).toUpperCase();if(event.shiftKey)key='SHIFT_'+key;if(event.ctrlKey)key='CTRL_'+key;if(event.altKey)key='ALT_'+key;return key;},/**\r\n     * Handles the given (keyboard) event\r\n     * @param {Event} event - the event generated by the event handler\r\n     * @param {String} component - Foundation component's name, e.g. Slider or Reveal\r\n     * @param {Objects} functions - collection of functions that are to be executed\r\n     */handleKey:function handleKey(event,component,functions){var commandList=commands[component],keyCode=this.parseKey(event),cmds,command,fn;if(!commandList)return console.warn('Component not defined!');if(typeof commandList.ltr==='undefined'){// this component does not differentiate between ltr and rtl\ncmds=commandList;// use plain list\n}else{// merge ltr and rtl: if document is rtl, rtl overwrites ltr and vice versa\nif(Foundation.rtl())cmds=$.extend({},commandList.ltr,commandList.rtl);else cmds=$.extend({},commandList.rtl,commandList.ltr);}command=cmds[keyCode];fn=functions[command];if(fn&&typeof fn==='function'){// execute function  if exists\nfn.apply();if(functions.handled||typeof functions.handled==='function'){// execute function when event was handled\nfunctions.handled.apply();}}else{if(functions.unhandled||typeof functions.unhandled==='function'){// execute function when event was not handled\nfunctions.unhandled.apply();}}},/**\r\n     * Finds all focusable elements within the given `$element`\r\n     * @param {jQuery} $element - jQuery object to search within\r\n     * @return {jQuery} $focusable - all focusable elements within `$element`\r\n     */findFocusable:function findFocusable($element){return $element.find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').filter(function(){if(!$(this).is(':visible')||$(this).attr('tabindex')<0){return false;}//only have visible elements and those that have a tabindex greater or equal 0\nreturn true;});},/**\r\n     * Returns the component name name\r\n     * @param {Object} component - Foundation component, e.g. Slider or Reveal\r\n     * @return String componentName\r\n     */register:function register(componentName,cmds){commands[componentName]=cmds;}};/*\r\n   * Constants for easier comparing.\r\n   * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\r\n   */function getKeyCodes(kcs){var k={};for(var kc in kcs){k[kcs[kc]]=kcs[kc];}return k;}Foundation.Keyboard=Keyboard;}(jQuery);'use strict';!function($){// Default set of media queries\nvar defaultQueries={'default':'only screen',landscape:'only screen and (orientation: landscape)',portrait:'only screen and (orientation: portrait)',retina:'only screen and (-webkit-min-device-pixel-ratio: 2),'+'only screen and (min--moz-device-pixel-ratio: 2),'+'only screen and (-o-min-device-pixel-ratio: 2/1),'+'only screen and (min-device-pixel-ratio: 2),'+'only screen and (min-resolution: 192dpi),'+'only screen and (min-resolution: 2dppx)'};var MediaQuery={queries:[],current:'',/**\r\n     * Initializes the media query helper, by extracting the breakpoint list from the CSS and activating the breakpoint watcher.\r\n     * @function\r\n     * @private\r\n     */_init:function _init(){var self=this;var extractedStyles=$('.foundation-mq').css('font-family');var namedQueries;namedQueries=parseStyleToObject(extractedStyles);for(var key in namedQueries){self.queries.push({name:key,value:'only screen and (min-width: '+namedQueries[key]+')'});}this.current=this._getCurrentSize();this._watcher();},/**\r\n     * Checks if the screen is at least as wide as a breakpoint.\r\n     * @function\r\n     * @param {String} size - Name of the breakpoint to check.\r\n     * @returns {Boolean} `true` if the breakpoint matches, `false` if it's smaller.\r\n     */atLeast:function atLeast(size){var query=this.get(size);if(query){return window.matchMedia(query).matches;}return false;},/**\r\n     * Gets the media query of a breakpoint.\r\n     * @function\r\n     * @param {String} size - Name of the breakpoint to get.\r\n     * @returns {String|null} - The media query of the breakpoint, or `null` if the breakpoint doesn't exist.\r\n     */get:function get(size){for(var i in this.queries){var query=this.queries[i];if(size===query.name)return query.value;}return null;},/**\r\n     * Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\r\n     * @function\r\n     * @private\r\n     * @returns {String} Name of the current breakpoint.\r\n     */_getCurrentSize:function _getCurrentSize(){var matched;for(var i in this.queries){var query=this.queries[i];if(window.matchMedia(query.value).matches){matched=query;}}if((typeof matched==='undefined'?'undefined':_typeof(matched))==='object'){return matched.name;}else{return matched;}},/**\r\n     * Activates the breakpoint watcher, which fires an event on the window whenever the breakpoint changes.\r\n     * @function\r\n     * @private\r\n     */_watcher:function _watcher(){var _this=this;$(window).on('resize.zf.mediaquery',function(){var newSize=_this._getCurrentSize();if(newSize!==_this.current){// Broadcast the media query change on the window\n$(window).trigger('changed.zf.mediaquery',[newSize,_this.current]);// Change the current media query\n_this.current=newSize;}});}};Foundation.MediaQuery=MediaQuery;// matchMedia() polyfill - Test a CSS media type/query in JS.\n// Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license\nwindow.matchMedia||(window.matchMedia=function(){'use strict';// For browsers that support matchMedium api such as IE 9 and webkit\nvar styleMedia=window.styleMedia||window.media;// For those that don't support matchMedium\nif(!styleMedia){var style=document.createElement('style'),script=document.getElementsByTagName('script')[0],info=null;style.type='text/css';style.id='matchmediajs-test';script.parentNode.insertBefore(style,script);// 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\ninfo='getComputedStyle'in window&&window.getComputedStyle(style,null)||style.currentStyle;styleMedia={matchMedium:function matchMedium(media){var text='@media '+media+'{ #matchmediajs-test { width: 1px; } }';// 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\nif(style.styleSheet){style.styleSheet.cssText=text;}else{style.textContent=text;}// Test if media query is true or false\nreturn info.width==='1px';}};}return function(media){return{matches:styleMedia.matchMedium(media||'all'),media:media||'all'};};}());// Thank you: https://github.com/sindresorhus/query-string\nfunction parseStyleToObject(str){var styleObject={};if(typeof str!=='string'){return styleObject;}str=str.trim().slice(1,-1);// browsers re-quote string style values\nif(!str){return styleObject;}styleObject=str.split('&').reduce(function(ret,param){var parts=param.replace(/\\+/g,' ').split('=');var key=parts[0];var val=parts[1];key=decodeURIComponent(key);// missing `=` should be `null`:\n// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\nval=val===undefined?null:decodeURIComponent(val);if(!ret.hasOwnProperty(key)){ret[key]=val;}else if(Array.isArray(ret[key])){ret[key].push(val);}else{ret[key]=[ret[key],val];}return ret;},{});return styleObject;}Foundation.MediaQuery=MediaQuery;}(jQuery);'use strict';!function($){/**\r\n   * Motion module.\r\n   * @module foundation.motion\r\n   */var initClasses=['mui-enter','mui-leave'];var activeClasses=['mui-enter-active','mui-leave-active'];var Motion={animateIn:function animateIn(element,animation,cb){animate(true,element,animation,cb);},animateOut:function animateOut(element,animation,cb){animate(false,element,animation,cb);}};function Move(duration,elem,fn){var anim,prog,start=null;// console.log('called');\nfunction move(ts){if(!start)start=window.performance.now();// console.log(start, ts);\nprog=ts-start;fn.apply(elem);if(prog<duration){anim=window.requestAnimationFrame(move,elem);}else{window.cancelAnimationFrame(anim);elem.trigger('finished.zf.animate',[elem]).triggerHandler('finished.zf.animate',[elem]);}}anim=window.requestAnimationFrame(move);}/**\r\n   * Animates an element in or out using a CSS transition class.\r\n   * @function\r\n   * @private\r\n   * @param {Boolean} isIn - Defines if the animation is in or out.\r\n   * @param {Object} element - jQuery or HTML object to animate.\r\n   * @param {String} animation - CSS class to use.\r\n   * @param {Function} cb - Callback to run when animation is finished.\r\n   */function animate(isIn,element,animation,cb){element=$(element).eq(0);if(!element.length)return;var initClass=isIn?initClasses[0]:initClasses[1];var activeClass=isIn?activeClasses[0]:activeClasses[1];// Set up the animation\nreset();element.addClass(animation).css('transition','none');requestAnimationFrame(function(){element.addClass(initClass);if(isIn)element.show();});// Start the animation\nrequestAnimationFrame(function(){element[0].offsetWidth;element.css('transition','').addClass(activeClass);});// Clean up the animation when it finishes\nelement.one(Foundation.transitionend(element),finish);// Hides the element (for out animations), resets the element, and runs a callback\nfunction finish(){if(!isIn)element.hide();reset();if(cb)cb.apply(element);}// Resets transitions and removes motion-specific classes\nfunction reset(){element[0].style.transitionDuration=0;element.removeClass(initClass+' '+activeClass+' '+animation);}}Foundation.Move=Move;Foundation.Motion=Motion;}(jQuery);'use strict';!function($){var Nest={Feather:function Feather(menu){var type=arguments.length<=1||arguments[1]===undefined?'zf':arguments[1];menu.attr('role','menubar');var items=menu.find('li').attr({'role':'menuitem'}),subMenuClass='is-'+type+'-submenu',subItemClass=subMenuClass+'-item',hasSubClass='is-'+type+'-submenu-parent';menu.find('a:first').attr('tabindex',0);items.each(function(){var $item=$(this),$sub=$item.children('ul');if($sub.length){$item.addClass(hasSubClass).attr({'aria-haspopup':true,'aria-expanded':false,'aria-label':$item.children('a:first').text()});$sub.addClass('submenu '+subMenuClass).attr({'data-submenu':'','aria-hidden':true,'role':'menu'});}if($item.parent('[data-submenu]').length){$item.addClass('is-submenu-item '+subItemClass);}});return;},Burn:function Burn(menu,type){var items=menu.find('li').removeAttr('tabindex'),subMenuClass='is-'+type+'-submenu',subItemClass=subMenuClass+'-item',hasSubClass='is-'+type+'-submenu-parent';menu.find('*').removeClass(subMenuClass+' '+subItemClass+' '+hasSubClass+' is-submenu-item submenu is-active').removeAttr('data-submenu').css('display','');// console.log(      menu.find('.' + subMenuClass + ', .' + subItemClass + ', .has-submenu, .is-submenu-item, .submenu, [data-submenu]')\n//           .removeClass(subMenuClass + ' ' + subItemClass + ' has-submenu is-submenu-item submenu')\n//           .removeAttr('data-submenu'));\n// items.each(function(){\n//   var $item = $(this),\n//       $sub = $item.children('ul');\n//   if($item.parent('[data-submenu]').length){\n//     $item.removeClass('is-submenu-item ' + subItemClass);\n//   }\n//   if($sub.length){\n//     $item.removeClass('has-submenu');\n//     $sub.removeClass('submenu ' + subMenuClass).removeAttr('data-submenu');\n//   }\n// });\n}};Foundation.Nest=Nest;}(jQuery);'use strict';!function($){function Timer(elem,options,cb){var _this=this,duration=options.duration,//options is an object for easily adding features later.\nnameSpace=Object.keys(elem.data())[0]||'timer',remain=-1,start,timer;this.isPaused=false;this.restart=function(){remain=-1;clearTimeout(timer);this.start();};this.start=function(){this.isPaused=false;// if(!elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\nclearTimeout(timer);remain=remain<=0?duration:remain;elem.data('paused',false);start=Date.now();timer=setTimeout(function(){if(options.infinite){_this.restart();//rerun the timer.\n}cb();},remain);elem.trigger('timerstart.zf.'+nameSpace);};this.pause=function(){this.isPaused=true;//if(elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\nclearTimeout(timer);elem.data('paused',true);var end=Date.now();remain=remain-(end-start);elem.trigger('timerpaused.zf.'+nameSpace);};}/**\r\n   * Runs a callback function when images are fully loaded.\r\n   * @param {Object} images - Image(s) to check if loaded.\r\n   * @param {Func} callback - Function to execute when image is fully loaded.\r\n   */function onImagesLoaded(images,callback){var self=this,unloaded=images.length;if(unloaded===0){callback();}images.each(function(){if(this.complete){singleImageLoaded();}else if(typeof this.naturalWidth!=='undefined'&&this.naturalWidth>0){singleImageLoaded();}else{$(this).one('load',function(){singleImageLoaded();});}});function singleImageLoaded(){unloaded--;if(unloaded===0){callback();}}}Foundation.Timer=Timer;Foundation.onImagesLoaded=onImagesLoaded;}(jQuery);//**************************************************\n//**Work inspired by multiple jquery swipe plugins**\n//**Done by Yohai Ararat ***************************\n//**************************************************\n(function($){$.spotSwipe={version:'1.0.0',enabled:'ontouchstart'in document.documentElement,preventDefault:false,moveThreshold:75,timeThreshold:200};var startPosX,startPosY,startTime,elapsedTime,isMoving=false;function onTouchEnd(){//  alert(this);\nthis.removeEventListener('touchmove',onTouchMove);this.removeEventListener('touchend',onTouchEnd);isMoving=false;}function onTouchMove(e){if($.spotSwipe.preventDefault){e.preventDefault();}if(isMoving){var x=e.touches[0].pageX;var y=e.touches[0].pageY;var dx=startPosX-x;var dy=startPosY-y;var dir;elapsedTime=new Date().getTime()-startTime;if(Math.abs(dx)>=$.spotSwipe.moveThreshold&&elapsedTime<=$.spotSwipe.timeThreshold){dir=dx>0?'left':'right';}// else if(Math.abs(dy) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\n//   dir = dy > 0 ? 'down' : 'up';\n// }\nif(dir){e.preventDefault();onTouchEnd.call(this);$(this).trigger('swipe',dir).trigger('swipe'+dir);}}}function onTouchStart(e){if(e.touches.length==1){startPosX=e.touches[0].pageX;startPosY=e.touches[0].pageY;isMoving=true;startTime=new Date().getTime();this.addEventListener('touchmove',onTouchMove,false);this.addEventListener('touchend',onTouchEnd,false);}}function init(){this.addEventListener&&this.addEventListener('touchstart',onTouchStart,false);}function teardown(){this.removeEventListener('touchstart',onTouchStart);}$.event.special.swipe={setup:init};$.each(['left','up','down','right'],function(){$.event.special['swipe'+this]={setup:function setup(){$(this).on('swipe',$.noop);}};});})(jQuery);/****************************************************\r\n * Method for adding psuedo drag events to elements *\r\n ***************************************************/!function($){$.fn.addTouch=function(){this.each(function(i,el){$(el).bind('touchstart touchmove touchend touchcancel',function(){//we pass the original event object because the jQuery event\n//object is normalized to w3c specs and does not provide the TouchList\nhandleTouch(event);});});var handleTouch=function handleTouch(event){var touches=event.changedTouches,first=touches[0],eventTypes={touchstart:'mousedown',touchmove:'mousemove',touchend:'mouseup'},type=eventTypes[event.type],simulatedEvent;if('MouseEvent'in window&&typeof window.MouseEvent==='function'){simulatedEvent=window.MouseEvent(type,{'bubbles':true,'cancelable':true,'screenX':first.screenX,'screenY':first.screenY,'clientX':first.clientX,'clientY':first.clientY});}else{simulatedEvent=document.createEvent('MouseEvent');simulatedEvent.initMouseEvent(type,true,true,window,1,first.screenX,first.screenY,first.clientX,first.clientY,false,false,false,false,0/*left*/,null);}first.target.dispatchEvent(simulatedEvent);};};}(jQuery);//**********************************\n//**From the jQuery Mobile Library**\n//**need to recreate functionality**\n//**and try to improve if possible**\n//**********************************\n/* Removing the jQuery function ****\r\n************************************\r\n\r\n(function( $, window, undefined ) {\r\n\r\n\tvar $document = $( document ),\r\n\t\t// supportTouch = $.mobile.support.touch,\r\n\t\ttouchStartEvent = 'touchstart'//supportTouch ? \"touchstart\" : \"mousedown\",\r\n\t\ttouchStopEvent = 'touchend'//supportTouch ? \"touchend\" : \"mouseup\",\r\n\t\ttouchMoveEvent = 'touchmove'//supportTouch ? \"touchmove\" : \"mousemove\";\r\n\r\n\t// setup new event shortcuts\r\n\t$.each( ( \"touchstart touchmove touchend \" +\r\n\t\t\"swipe swipeleft swiperight\" ).split( \" \" ), function( i, name ) {\r\n\r\n\t\t$.fn[ name ] = function( fn ) {\r\n\t\t\treturn fn ? this.bind( name, fn ) : this.trigger( name );\r\n\t\t};\r\n\r\n\t\t// jQuery < 1.8\r\n\t\tif ( $.attrFn ) {\r\n\t\t\t$.attrFn[ name ] = true;\r\n\t\t}\r\n\t});\r\n\r\n\tfunction triggerCustomEvent( obj, eventType, event, bubble ) {\r\n\t\tvar originalType = event.type;\r\n\t\tevent.type = eventType;\r\n\t\tif ( bubble ) {\r\n\t\t\t$.event.trigger( event, undefined, obj );\r\n\t\t} else {\r\n\t\t\t$.event.dispatch.call( obj, event );\r\n\t\t}\r\n\t\tevent.type = originalType;\r\n\t}\r\n\r\n\t// also handles taphold\r\n\r\n\t// Also handles swipeleft, swiperight\r\n\t$.event.special.swipe = {\r\n\r\n\t\t// More than this horizontal displacement, and we will suppress scrolling.\r\n\t\tscrollSupressionThreshold: 30,\r\n\r\n\t\t// More time than this, and it isn't a swipe.\r\n\t\tdurationThreshold: 1000,\r\n\r\n\t\t// Swipe horizontal displacement must be more than this.\r\n\t\thorizontalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\r\n\r\n\t\t// Swipe vertical displacement must be less than this.\r\n\t\tverticalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\r\n\r\n\t\tgetLocation: function ( event ) {\r\n\t\t\tvar winPageX = window.pageXOffset,\r\n\t\t\t\twinPageY = window.pageYOffset,\r\n\t\t\t\tx = event.clientX,\r\n\t\t\t\ty = event.clientY;\r\n\r\n\t\t\tif ( event.pageY === 0 && Math.floor( y ) > Math.floor( event.pageY ) ||\r\n\t\t\t\tevent.pageX === 0 && Math.floor( x ) > Math.floor( event.pageX ) ) {\r\n\r\n\t\t\t\t// iOS4 clientX/clientY have the value that should have been\r\n\t\t\t\t// in pageX/pageY. While pageX/page/ have the value 0\r\n\t\t\t\tx = x - winPageX;\r\n\t\t\t\ty = y - winPageY;\r\n\t\t\t} else if ( y < ( event.pageY - winPageY) || x < ( event.pageX - winPageX ) ) {\r\n\r\n\t\t\t\t// Some Android browsers have totally bogus values for clientX/Y\r\n\t\t\t\t// when scrolling/zooming a page. Detectable since clientX/clientY\r\n\t\t\t\t// should never be smaller than pageX/pageY minus page scroll\r\n\t\t\t\tx = event.pageX - winPageX;\r\n\t\t\t\ty = event.pageY - winPageY;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tstart: function( event ) {\r\n\t\t\tvar data = event.originalEvent.touches ?\r\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\r\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\r\n\t\t\treturn {\r\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\r\n\t\t\t\t\t\tcoords: [ location.x, location.y ],\r\n\t\t\t\t\t\torigin: $( event.target )\r\n\t\t\t\t\t};\r\n\t\t},\r\n\r\n\t\tstop: function( event ) {\r\n\t\t\tvar data = event.originalEvent.touches ?\r\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\r\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\r\n\t\t\treturn {\r\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\r\n\t\t\t\t\t\tcoords: [ location.x, location.y ]\r\n\t\t\t\t\t};\r\n\t\t},\r\n\r\n\t\thandleSwipe: function( start, stop, thisObject, origTarget ) {\r\n\t\t\tif ( stop.time - start.time < $.event.special.swipe.durationThreshold &&\r\n\t\t\t\tMath.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.horizontalDistanceThreshold &&\r\n\t\t\t\tMath.abs( start.coords[ 1 ] - stop.coords[ 1 ] ) < $.event.special.swipe.verticalDistanceThreshold ) {\r\n\t\t\t\tvar direction = start.coords[0] > stop.coords[ 0 ] ? \"swipeleft\" : \"swiperight\";\r\n\r\n\t\t\t\ttriggerCustomEvent( thisObject, \"swipe\", $.Event( \"swipe\", { target: origTarget, swipestart: start, swipestop: stop }), true );\r\n\t\t\t\ttriggerCustomEvent( thisObject, direction,$.Event( direction, { target: origTarget, swipestart: start, swipestop: stop } ), true );\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\r\n\t\t},\r\n\r\n\t\t// This serves as a flag to ensure that at most one swipe event event is\r\n\t\t// in work at any given time\r\n\t\teventInProgress: false,\r\n\r\n\t\tsetup: function() {\r\n\t\t\tvar events,\r\n\t\t\t\tthisObject = this,\r\n\t\t\t\t$this = $( thisObject ),\r\n\t\t\t\tcontext = {};\r\n\r\n\t\t\t// Retrieve the events data for this element and add the swipe context\r\n\t\t\tevents = $.data( this, \"mobile-events\" );\r\n\t\t\tif ( !events ) {\r\n\t\t\t\tevents = { length: 0 };\r\n\t\t\t\t$.data( this, \"mobile-events\", events );\r\n\t\t\t}\r\n\t\t\tevents.length++;\r\n\t\t\tevents.swipe = context;\r\n\r\n\t\t\tcontext.start = function( event ) {\r\n\r\n\t\t\t\t// Bail if we're already working on a swipe event\r\n\t\t\t\tif ( $.event.special.swipe.eventInProgress ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t$.event.special.swipe.eventInProgress = true;\r\n\r\n\t\t\t\tvar stop,\r\n\t\t\t\t\tstart = $.event.special.swipe.start( event ),\r\n\t\t\t\t\torigTarget = event.target,\r\n\t\t\t\t\temitted = false;\r\n\r\n\t\t\t\tcontext.move = function( event ) {\r\n\t\t\t\t\tif ( !start || event.isDefaultPrevented() ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstop = $.event.special.swipe.stop( event );\r\n\t\t\t\t\tif ( !emitted ) {\r\n\t\t\t\t\t\temitted = $.event.special.swipe.handleSwipe( start, stop, thisObject, origTarget );\r\n\t\t\t\t\t\tif ( emitted ) {\r\n\r\n\t\t\t\t\t\t\t// Reset the context to make way for the next swipe event\r\n\t\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// prevent scrolling\r\n\t\t\t\t\tif ( Math.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.scrollSupressionThreshold ) {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tcontext.stop = function() {\r\n\t\t\t\t\t\temitted = true;\r\n\r\n\t\t\t\t\t\t// Reset the context to make way for the next swipe event\r\n\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\r\n\t\t\t\t\t\t$document.off( touchMoveEvent, context.move );\r\n\t\t\t\t\t\tcontext.move = null;\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$document.on( touchMoveEvent, context.move )\r\n\t\t\t\t\t.one( touchStopEvent, context.stop );\r\n\t\t\t};\r\n\t\t\t$this.on( touchStartEvent, context.start );\r\n\t\t},\r\n\r\n\t\tteardown: function() {\r\n\t\t\tvar events, context;\r\n\r\n\t\t\tevents = $.data( this, \"mobile-events\" );\r\n\t\t\tif ( events ) {\r\n\t\t\t\tcontext = events.swipe;\r\n\t\t\t\tdelete events.swipe;\r\n\t\t\t\tevents.length--;\r\n\t\t\t\tif ( events.length === 0 ) {\r\n\t\t\t\t\t$.removeData( this, \"mobile-events\" );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( context ) {\r\n\t\t\t\tif ( context.start ) {\r\n\t\t\t\t\t$( this ).off( touchStartEvent, context.start );\r\n\t\t\t\t}\r\n\t\t\t\tif ( context.move ) {\r\n\t\t\t\t\t$document.off( touchMoveEvent, context.move );\r\n\t\t\t\t}\r\n\t\t\t\tif ( context.stop ) {\r\n\t\t\t\t\t$document.off( touchStopEvent, context.stop );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t$.each({\r\n\t\tswipeleft: \"swipe.left\",\r\n\t\tswiperight: \"swipe.right\"\r\n\t}, function( event, sourceEvent ) {\r\n\r\n\t\t$.event.special[ event ] = {\r\n\t\t\tsetup: function() {\r\n\t\t\t\t$( this ).bind( sourceEvent, $.noop );\r\n\t\t\t},\r\n\t\t\tteardown: function() {\r\n\t\t\t\t$( this ).unbind( sourceEvent );\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n})( jQuery, this );\r\n*/'use strict';!function($){var MutationObserver=function(){var prefixes=['WebKit','Moz','O','Ms',''];for(var i=0;i<prefixes.length;i++){if(prefixes[i]+'MutationObserver'in window){return window[prefixes[i]+'MutationObserver'];}}return false;}();var triggers=function triggers(el,type){el.data(type).split(' ').forEach(function(id){$('#'+id)[type==='close'?'trigger':'triggerHandler'](type+'.zf.trigger',[el]);});};// Elements with [data-open] will reveal a plugin that supports it when clicked.\n$(document).on('click.zf.trigger','[data-open]',function(){triggers($(this),'open');});// Elements with [data-close] will close a plugin that supports it when clicked.\n// If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\n$(document).on('click.zf.trigger','[data-close]',function(){var id=$(this).data('close');if(id){triggers($(this),'close');}else{$(this).trigger('close.zf.trigger');}});// Elements with [data-toggle] will toggle a plugin that supports it when clicked.\n$(document).on('click.zf.trigger','[data-toggle]',function(){triggers($(this),'toggle');});// Elements with [data-closable] will respond to close.zf.trigger events.\n$(document).on('close.zf.trigger','[data-closable]',function(e){e.stopPropagation();var animation=$(this).data('closable');if(animation!==''){Foundation.Motion.animateOut($(this),animation,function(){$(this).trigger('closed.zf');});}else{$(this).fadeOut().trigger('closed.zf');}});$(document).on('focus.zf.trigger blur.zf.trigger','[data-toggle-focus]',function(){var id=$(this).data('toggle-focus');$('#'+id).triggerHandler('toggle.zf.trigger',[$(this)]);});/**\r\n  * Fires once after all other scripts have loaded\r\n  * @function\r\n  * @private\r\n  */$(window).load(function(){checkListeners();});function checkListeners(){eventsListener();resizeListener();scrollListener();closemeListener();}//******** only fires this function once on load, if there's something to watch ********\nfunction closemeListener(pluginName){var yetiBoxes=$('[data-yeti-box]'),plugNames=['dropdown','tooltip','reveal'];if(pluginName){if(typeof pluginName==='string'){plugNames.push(pluginName);}else if((typeof pluginName==='undefined'?'undefined':_typeof(pluginName))==='object'&&typeof pluginName[0]==='string'){plugNames.concat(pluginName);}else{console.error('Plugin names must be strings');}}if(yetiBoxes.length){var listeners=plugNames.map(function(name){return'closeme.zf.'+name;}).join(' ');$(window).off(listeners).on(listeners,function(e,pluginId){var plugin=e.namespace.split('.')[0];var plugins=$('[data-'+plugin+']').not('[data-yeti-box=\"'+pluginId+'\"]');plugins.each(function(){var _this=$(this);_this.triggerHandler('close.zf.trigger',[_this]);});});}}function resizeListener(debounce){var timer=undefined,$nodes=$('[data-resize]');if($nodes.length){$(window).off('resize.zf.trigger').on('resize.zf.trigger',function(e){if(timer){clearTimeout(timer);}timer=setTimeout(function(){if(!MutationObserver){//fallback for IE 9\n$nodes.each(function(){$(this).triggerHandler('resizeme.zf.trigger');});}//trigger all listening elements and signal a resize event\n$nodes.attr('data-events',\"resize\");},debounce||10);//default time to emit resize event\n});}}function scrollListener(debounce){var timer=undefined,$nodes=$('[data-scroll]');if($nodes.length){$(window).off('scroll.zf.trigger').on('scroll.zf.trigger',function(e){if(timer){clearTimeout(timer);}timer=setTimeout(function(){if(!MutationObserver){//fallback for IE 9\n$nodes.each(function(){$(this).triggerHandler('scrollme.zf.trigger');});}//trigger all listening elements and signal a scroll event\n$nodes.attr('data-events',\"scroll\");},debounce||10);//default time to emit scroll event\n});}}function eventsListener(){if(!MutationObserver){return false;}var nodes=document.querySelectorAll('[data-resize], [data-scroll], [data-mutate]');//element callback\nvar listeningElementsMutation=function listeningElementsMutation(mutationRecordsList){var $target=$(mutationRecordsList[0].target);//trigger the event handler for the element depending on type\nswitch($target.attr(\"data-events\")){case\"resize\":$target.triggerHandler('resizeme.zf.trigger',[$target]);break;case\"scroll\":$target.triggerHandler('scrollme.zf.trigger',[$target,window.pageYOffset]);break;// case \"mutate\" :\n// console.log('mutate', $target);\n// $target.triggerHandler('mutate.zf.trigger');\n//\n// //make sure we don't get stuck in an infinite loop from sloppy codeing\n// if ($target.index('[data-mutate]') == $(\"[data-mutate]\").length-1) {\n//   domMutationObserver();\n// }\n// break;\ndefault:return false;//nothing\n}};if(nodes.length){//for each element that needs to listen for resizing, scrolling, (or coming soon mutation) add a single observer\nfor(var i=0;i<=nodes.length-1;i++){var elementObserver=new MutationObserver(listeningElementsMutation);elementObserver.observe(nodes[i],{attributes:true,childList:false,characterData:false,subtree:false,attributeFilter:[\"data-events\"]});}}}// ------------------------------------\n// [PH]\n// Foundation.CheckWatchers = checkWatchers;\nFoundation.IHearYou=checkListeners;// Foundation.ISeeYou = scrollListener;\n// Foundation.IFeelYou = closemeListener;\n}(jQuery);// function domMutationObserver(debounce) {\n//   // !!! This is coming soon and needs more work; not active  !!! //\n//   var timer,\n//   nodes = document.querySelectorAll('[data-mutate]');\n//   //\n//   if (nodes.length) {\n//     // var MutationObserver = (function () {\n//     //   var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n//     //   for (var i=0; i < prefixes.length; i++) {\n//     //     if (prefixes[i] + 'MutationObserver' in window) {\n//     //       return window[prefixes[i] + 'MutationObserver'];\n//     //     }\n//     //   }\n//     //   return false;\n//     // }());\n//\n//\n//     //for the body, we need to listen for all changes effecting the style and class attributes\n//     var bodyObserver = new MutationObserver(bodyMutation);\n//     bodyObserver.observe(document.body, { attributes: true, childList: true, characterData: false, subtree:true, attributeFilter:[\"style\", \"class\"]});\n//\n//\n//     //body callback\n//     function bodyMutation(mutate) {\n//       //trigger all listening elements and signal a mutation event\n//       if (timer) { clearTimeout(timer); }\n//\n//       timer = setTimeout(function() {\n//         bodyObserver.disconnect();\n//         $('[data-mutate]').attr('data-events',\"mutate\");\n//       }, debounce || 150);\n//     }\n//   }\n// }\n'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}!function($){/**\r\n   * Abide module.\r\n   * @module foundation.abide\r\n   */var Abide=function(){/**\r\n     * Creates a new instance of Abide.\r\n     * @class\r\n     * @fires Abide#init\r\n     * @param {Object} element - jQuery object to add the trigger to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */function Abide(element){var options=arguments.length<=1||arguments[1]===undefined?{}:arguments[1];_classCallCheck(this,Abide);this.$element=element;this.options=$.extend({},Abide.defaults,this.$element.data(),options);this._init();Foundation.registerPlugin(this,'Abide');}/**\r\n     * Initializes the Abide plugin and calls functions to get Abide functioning on load.\r\n     * @private\r\n     */_createClass(Abide,[{key:'_init',value:function _init(){this.$inputs=this.$element.find('input, textarea, select').not('[data-abide-ignore]');this._events();}/**\r\n       * Initializes events for Abide.\r\n       * @private\r\n       */},{key:'_events',value:function _events(){var _this2=this;this.$element.off('.abide').on('reset.zf.abide',function(){_this2.resetForm();}).on('submit.zf.abide',function(){return _this2.validateForm();});if(this.options.validateOn==='fieldChange'){this.$inputs.off('change.zf.abide').on('change.zf.abide',function(e){_this2.validateInput($(e.target));});}if(this.options.liveValidate){this.$inputs.off('input.zf.abide').on('input.zf.abide',function(e){_this2.validateInput($(e.target));});}}/**\r\n       * Calls necessary functions to update Abide upon DOM change\r\n       * @private\r\n       */},{key:'_reflow',value:function _reflow(){this._init();}/**\r\n       * Checks whether or not a form element has the required attribute and if it's checked or not\r\n       * @param {Object} element - jQuery object to check for required attribute\r\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\r\n       */},{key:'requiredCheck',value:function requiredCheck($el){if(!$el.attr('required'))return true;var isGood=true;switch($el[0].type){case'checkbox':case'radio':isGood=$el[0].checked;break;case'select':case'select-one':case'select-multiple':var opt=$el.find('option:selected');if(!opt.length||!opt.val())isGood=false;break;default:if(!$el.val()||!$el.val().length)isGood=false;}return isGood;}/**\r\n       * Based on $el, get the first element with selector in this order:\r\n       * 1. The element's direct sibling('s).\r\n       * 3. The element's parent's children.\r\n       *\r\n       * This allows for multiple form errors per input, though if none are found, no form errors will be shown.\r\n       *\r\n       * @param {Object} $el - jQuery object to use as reference to find the form error selector.\r\n       * @returns {Object} jQuery object with the selector.\r\n       */},{key:'findFormError',value:function findFormError($el){var $error=$el.siblings(this.options.formErrorSelector);if(!$error.length){$error=$el.parent().find(this.options.formErrorSelector);}return $error;}/**\r\n       * Get the first element in this order:\r\n       * 2. The <label> with the attribute `[for=\"someInputId\"]`\r\n       * 3. The `.closest()` <label>\r\n       *\r\n       * @param {Object} $el - jQuery object to check for required attribute\r\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\r\n       */},{key:'findLabel',value:function findLabel($el){var id=$el[0].id;var $label=this.$element.find('label[for=\"'+id+'\"]');if(!$label.length){return $el.closest('label');}return $label;}/**\r\n       * Adds the CSS error class as specified by the Abide settings to the label, input, and the form\r\n       * @param {Object} $el - jQuery object to add the class to\r\n       */},{key:'addErrorClasses',value:function addErrorClasses($el){var $label=this.findLabel($el);var $formError=this.findFormError($el);if($label.length){$label.addClass(this.options.labelErrorClass);}if($formError.length){$formError.addClass(this.options.formErrorClass);}$el.addClass(this.options.inputErrorClass).attr('data-invalid','');}/**\r\n       * Removes CSS error class as specified by the Abide settings from the label, input, and the form\r\n       * @param {Object} $el - jQuery object to remove the class from\r\n       */},{key:'removeErrorClasses',value:function removeErrorClasses($el){var $label=this.findLabel($el);var $formError=this.findFormError($el);if($label.length){$label.removeClass(this.options.labelErrorClass);}if($formError.length){$formError.removeClass(this.options.formErrorClass);}$el.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');}/**\r\n       * Goes through a form to find inputs and proceeds to validate them in ways specific to their type\r\n       * @fires Abide#invalid\r\n       * @fires Abide#valid\r\n       * @param {Object} element - jQuery object to validate, should be an HTML input\r\n       * @returns {Boolean} goodToGo - If the input is valid or not.\r\n       */},{key:'validateInput',value:function validateInput($el){var clearRequire=this.requiredCheck($el),validated=false,customValidator=true,validator=$el.attr('data-validator'),equalTo=true;switch($el[0].type){case'radio':validated=this.validateRadio($el.attr('name'));break;case'checkbox':validated=clearRequire;break;case'select':case'select-one':case'select-multiple':validated=clearRequire;break;default:validated=this.validateText($el);}if(validator){customValidator=this.matchValidation($el,validator,$el.attr('required'));}if($el.attr('data-equalto')){equalTo=this.options.validators.equalTo($el);}var goodToGo=[clearRequire,validated,customValidator,equalTo].indexOf(false)===-1;var message=(goodToGo?'valid':'invalid')+'.zf.abide';this[goodToGo?'removeErrorClasses':'addErrorClasses']($el);/**\r\n         * Fires when the input is done checking for validation. Event trigger is either `valid.zf.abide` or `invalid.zf.abide`\r\n         * Trigger includes the DOM element of the input.\r\n         * @event Abide#valid\r\n         * @event Abide#invalid\r\n         */$el.trigger(message,[$el]);return goodToGo;}/**\r\n       * Goes through a form and if there are any invalid inputs, it will display the form error element\r\n       * @returns {Boolean} noError - true if no errors were detected...\r\n       * @fires Abide#formvalid\r\n       * @fires Abide#forminvalid\r\n       */},{key:'validateForm',value:function validateForm(){var acc=[];var _this=this;this.$inputs.each(function(){acc.push(_this.validateInput($(this)));});var noError=acc.indexOf(false)===-1;this.$element.find('[data-abide-error]').css('display',noError?'none':'block');/**\r\n         * Fires when the form is finished validating. Event trigger is either `formvalid.zf.abide` or `forminvalid.zf.abide`.\r\n         * Trigger includes the element of the form.\r\n         * @event Abide#formvalid\r\n         * @event Abide#forminvalid\r\n         */this.$element.trigger((noError?'formvalid':'forminvalid')+'.zf.abide',[this.$element]);return noError;}/**\r\n       * Determines whether or a not a text input is valid based on the pattern specified in the attribute. If no matching pattern is found, returns true.\r\n       * @param {Object} $el - jQuery object to validate, should be a text input HTML element\r\n       * @param {String} pattern - string value of one of the RegEx patterns in Abide.options.patterns\r\n       * @returns {Boolean} Boolean value depends on whether or not the input value matches the pattern specified\r\n       */},{key:'validateText',value:function validateText($el,pattern){// pattern = pattern ? pattern : $el.attr('pattern') ? $el.attr('pattern') : $el.attr('type');\npattern=pattern||$el.attr('pattern')||$el.attr('type');var inputText=$el.val();// if text, check if the pattern exists, if so, test it, if no text or no pattern, return true.\nreturn inputText.length?this.options.patterns.hasOwnProperty(pattern)?this.options.patterns[pattern].test(inputText):pattern&&pattern!==$el.attr('type')?new RegExp(pattern).test(inputText):true:true;}/**\r\n       * Determines whether or a not a radio input is valid based on whether or not it is required and selected\r\n       * @param {String} groupName - A string that specifies the name of a radio button group\r\n       * @returns {Boolean} Boolean value depends on whether or not at least one radio input has been selected (if it's required)\r\n       */},{key:'validateRadio',value:function validateRadio(groupName){var $group=this.$element.find(':radio[name=\"'+groupName+'\"]'),counter=[],_this=this;$group.each(function(){var rdio=$(this),clear=_this.requiredCheck(rdio);counter.push(clear);if(clear)_this.removeErrorClasses(rdio);});return counter.indexOf(false)===-1;}/**\r\n       * Determines if a selected input passes a custom validation function. Multiple validations can be used, if passed to the element with `data-validator=\"foo bar baz\"` in a space separated listed.\r\n       * @param {Object} $el - jQuery input element.\r\n       * @param {String} validators - a string of function names matching functions in the Abide.options.validators object.\r\n       * @param {Boolean} required - self explanatory?\r\n       * @returns {Boolean} - true if validations passed.\r\n       */},{key:'matchValidation',value:function matchValidation($el,validators,required){var _this3=this;required=required?true:false;var clear=validators.split(' ').map(function(v){return _this3.options.validators[v]($el,required,$el.parent());});return clear.indexOf(false)===-1;}/**\r\n       * Resets form inputs and styles\r\n       * @fires Abide#formreset\r\n       */},{key:'resetForm',value:function resetForm(){var $form=this.$element,opts=this.options;$('.'+opts.labelErrorClass,$form).not('small').removeClass(opts.labelErrorClass);$('.'+opts.inputErrorClass,$form).not('small').removeClass(opts.inputErrorClass);$(opts.formErrorSelector+'.'+opts.formErrorClass).removeClass(opts.formErrorClass);$form.find('[data-abide-error]').css('display','none');$(':input',$form).not(':button, :submit, :reset, :hidden, [data-abide-ignore]').val('').removeAttr('data-invalid');/**\r\n         * Fires when the form has been reset.\r\n         * @event Abide#formreset\r\n         */$form.trigger('formreset.zf.abide',[$form]);}/**\r\n       * Destroys an instance of Abide.\r\n       * Removes error styles and classes from elements, without resetting their values.\r\n       */},{key:'destroy',value:function destroy(){var _this=this;this.$element.off('.abide').find('[data-abide-error]').css('display','none');this.$inputs.off('.abide').each(function(){_this.removeErrorClasses($(this));});Foundation.unregisterPlugin(this);}}]);return Abide;}();/**\r\n   * Default settings for plugin\r\n   */Abide.defaults={/**\r\n     * The default event to validate inputs. Checkboxes and radios validate immediately.\r\n     * Remove or change this value for manual validation.\r\n     * @option\r\n     * @example 'fieldChange'\r\n     */validateOn:'fieldChange',/**\r\n     * Class to be applied to input labels on failed validation.\r\n     * @option\r\n     * @example 'is-invalid-label'\r\n     */labelErrorClass:'is-invalid-label',/**\r\n     * Class to be applied to inputs on failed validation.\r\n     * @option\r\n     * @example 'is-invalid-input'\r\n     */inputErrorClass:'is-invalid-input',/**\r\n     * Class selector to use to target Form Errors for show/hide.\r\n     * @option\r\n     * @example '.form-error'\r\n     */formErrorSelector:'.form-error',/**\r\n     * Class added to Form Errors on failed validation.\r\n     * @option\r\n     * @example 'is-visible'\r\n     */formErrorClass:'is-visible',/**\r\n     * Set to true to validate text inputs on any value change.\r\n     * @option\r\n     * @example false\r\n     */liveValidate:false,patterns:{alpha:/^[a-zA-Z]+$/,alpha_numeric:/^[a-zA-Z0-9]+$/,integer:/^[-+]?\\d+$/,number:/^[-+]?\\d*(?:[\\.\\,]\\d+)?$/,// amex, visa, diners\ncard:/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,cvv:/^([0-9]){3,4}$/,// http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address\nemail:/^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/,url:/^(https?|ftp|file|ssh):\\/\\/(((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/,// abc.de\ndomain:/^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,8}$/,datetime:/^([0-2][0-9]{3})\\-([0-1][0-9])\\-([0-3][0-9])T([0-5][0-9])\\:([0-5][0-9])\\:([0-5][0-9])(Z|([\\-\\+]([0-1][0-9])\\:00))$/,// YYYY-MM-DD\ndate:/(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))$/,// HH:MM:SS\ntime:/^(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}$/,dateISO:/^\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}$/,// MM/DD/YYYY\nmonth_day_year:/^(0[1-9]|1[012])[- \\/.](0[1-9]|[12][0-9]|3[01])[- \\/.]\\d{4}$/,// DD/MM/YYYY\nday_month_year:/^(0[1-9]|[12][0-9]|3[01])[- \\/.](0[1-9]|1[012])[- \\/.]\\d{4}$/,// #FFF or #FFFFFF\ncolor:/^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/},/**\r\n     * Optional validation functions to be used. `equalTo` being the only default included function.\r\n     * Functions should return only a boolean if the input is valid or not. Functions are given the following arguments:\r\n     * el : The jQuery element to validate.\r\n     * required : Boolean value of the required attribute be present or not.\r\n     * parent : The direct parent of the input.\r\n     * @option\r\n     */validators:{equalTo:function equalTo(el,required,parent){return $('#'+el.attr('data-equalto')).val()===el.val();}}};// Window exports\nFoundation.plugin(Abide,'Abide');}(jQuery);'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}!function($){/**\r\n   * Accordion module.\r\n   * @module foundation.accordion\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.motion\r\n   */var Accordion=function(){/**\r\n     * Creates a new instance of an accordion.\r\n     * @class\r\n     * @fires Accordion#init\r\n     * @param {jQuery} element - jQuery object to make into an accordion.\r\n     * @param {Object} options - a plain object with settings to override the default options.\r\n     */function Accordion(element,options){_classCallCheck(this,Accordion);this.$element=element;this.options=$.extend({},Accordion.defaults,this.$element.data(),options);this._init();Foundation.registerPlugin(this,'Accordion');Foundation.Keyboard.register('Accordion',{'ENTER':'toggle','SPACE':'toggle','ARROW_DOWN':'next','ARROW_UP':'previous'});}/**\r\n     * Initializes the accordion by animating the preset active pane(s).\r\n     * @private\r\n     */_createClass(Accordion,[{key:'_init',value:function _init(){this.$element.attr('role','tablist');this.$tabs=this.$element.children('li');if(this.$tabs.length===0){this.$tabs=this.$element.children('[data-accordion-item]');}this.$tabs.each(function(idx,el){var $el=$(el),$content=$el.find('[data-tab-content]'),id=$content[0].id||Foundation.GetYoDigits(6,'accordion'),linkId=el.id||id+'-label';$el.find('a:first').attr({'aria-controls':id,'role':'tab','id':linkId,'aria-expanded':false,'aria-selected':false});$content.attr({'role':'tabpanel','aria-labelledby':linkId,'aria-hidden':true,'id':id});});var $initActive=this.$element.find('.is-active').children('[data-tab-content]');if($initActive.length){this.down($initActive,true);}this._events();}/**\r\n       * Adds event handlers for items within the accordion.\r\n       * @private\r\n       */},{key:'_events',value:function _events(){var _this=this;this.$tabs.each(function(){var $elem=$(this);var $tabContent=$elem.children('[data-tab-content]');if($tabContent.length){$elem.children('a').off('click.zf.accordion keydown.zf.accordion').on('click.zf.accordion',function(e){// $(this).children('a').on('click.zf.accordion', function(e) {\ne.preventDefault();if($elem.hasClass('is-active')){if(_this.options.allowAllClosed||$elem.siblings().hasClass('is-active')){_this.up($tabContent);}}else{_this.down($tabContent);}}).on('keydown.zf.accordion',function(e){Foundation.Keyboard.handleKey(e,'Accordion',{toggle:function toggle(){_this.toggle($tabContent);},next:function next(){$elem.next().find('a').focus().trigger('click.zf.accordion');},previous:function previous(){$elem.prev().find('a').focus().trigger('click.zf.accordion');},handled:function handled(){e.preventDefault();e.stopPropagation();}});});}});}/**\r\n       * Toggles the selected content pane's open/close state.\r\n       * @param {jQuery} $target - jQuery object of the pane to toggle.\r\n       * @function\r\n       */},{key:'toggle',value:function toggle($target){if($target.parent().hasClass('is-active')){if(this.options.allowAllClosed||$target.parent().siblings().hasClass('is-active')){this.up($target);}else{return;}}else{this.down($target);}}/**\r\n       * Opens the accordion tab defined by `$target`.\r\n       * @param {jQuery} $target - Accordion pane to open.\r\n       * @param {Boolean} firstTime - flag to determine if reflow should happen.\r\n       * @fires Accordion#down\r\n       * @function\r\n       */},{key:'down',value:function down($target,firstTime){var _this=this;if(!this.options.multiExpand&&!firstTime){var $currentActive=this.$element.find('.is-active').children('[data-tab-content]');if($currentActive.length){this.up($currentActive);}}$target.attr('aria-hidden',false).parent('[data-tab-content]').addBack().parent().addClass('is-active');// Foundation.Move(_this.options.slideSpeed, $target, function(){\n$target.slideDown(_this.options.slideSpeed,function(){/**\r\n           * Fires when the tab is done opening.\r\n           * @event Accordion#down\r\n           */_this.$element.trigger('down.zf.accordion',[$target]);});// });\n// if(!firstTime){\n//   Foundation._reflow(this.$element.attr('data-accordion'));\n// }\n$('#'+$target.attr('aria-labelledby')).attr({'aria-expanded':true,'aria-selected':true});}/**\r\n       * Closes the tab defined by `$target`.\r\n       * @param {jQuery} $target - Accordion tab to close.\r\n       * @fires Accordion#up\r\n       * @function\r\n       */},{key:'up',value:function up($target){var $aunts=$target.parent().siblings(),_this=this;var canClose=this.options.multiExpand?$aunts.hasClass('is-active'):$target.parent().hasClass('is-active');if(!this.options.allowAllClosed&&!canClose){return;}// Foundation.Move(this.options.slideSpeed, $target, function(){\n$target.slideUp(_this.options.slideSpeed,function(){/**\r\n           * Fires when the tab is done collapsing up.\r\n           * @event Accordion#up\r\n           */_this.$element.trigger('up.zf.accordion',[$target]);});// });\n$target.attr('aria-hidden',true).parent().removeClass('is-active');$('#'+$target.attr('aria-labelledby')).attr({'aria-expanded':false,'aria-selected':false});}/**\r\n       * Destroys an instance of an accordion.\r\n       * @fires Accordion#destroyed\r\n       * @function\r\n       */},{key:'destroy',value:function destroy(){this.$element.find('[data-tab-content]').slideUp(0).css('display','');this.$element.find('a').off('.zf.accordion');Foundation.unregisterPlugin(this);}}]);return Accordion;}();Accordion.defaults={/**\r\n     * Amount of time to animate the opening of an accordion pane.\r\n     * @option\r\n     * @example 250\r\n     */slideSpeed:250,/**\r\n     * Allow the accordion to have multiple open panes.\r\n     * @option\r\n     * @example false\r\n     */multiExpand:false,/**\r\n     * Allow the accordion to close all panes.\r\n     * @option\r\n     * @example false\r\n     */allowAllClosed:false};// Window exports\nFoundation.plugin(Accordion,'Accordion');}(jQuery);'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}!function($){/**\r\n   * AccordionMenu module.\r\n   * @module foundation.accordionMenu\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.motion\r\n   * @requires foundation.util.nest\r\n   */var AccordionMenu=function(){/**\r\n     * Creates a new instance of an accordion menu.\r\n     * @class\r\n     * @fires AccordionMenu#init\r\n     * @param {jQuery} element - jQuery object to make into an accordion menu.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */function AccordionMenu(element,options){_classCallCheck(this,AccordionMenu);this.$element=element;this.options=$.extend({},AccordionMenu.defaults,this.$element.data(),options);Foundation.Nest.Feather(this.$element,'accordion');this._init();Foundation.registerPlugin(this,'AccordionMenu');Foundation.Keyboard.register('AccordionMenu',{'ENTER':'toggle','SPACE':'toggle','ARROW_RIGHT':'open','ARROW_UP':'up','ARROW_DOWN':'down','ARROW_LEFT':'close','ESCAPE':'closeAll','TAB':'down','SHIFT_TAB':'up'});}/**\r\n     * Initializes the accordion menu by hiding all nested menus.\r\n     * @private\r\n     */_createClass(AccordionMenu,[{key:'_init',value:function _init(){this.$element.find('[data-submenu]').not('.is-active').slideUp(0);//.find('a').css('padding-left', '1rem');\nthis.$element.attr({'role':'tablist','aria-multiselectable':this.options.multiOpen});this.$menuLinks=this.$element.find('.is-accordion-submenu-parent');this.$menuLinks.each(function(){var linkId=this.id||Foundation.GetYoDigits(6,'acc-menu-link'),$elem=$(this),$sub=$elem.children('[data-submenu]'),subId=$sub[0].id||Foundation.GetYoDigits(6,'acc-menu'),isActive=$sub.hasClass('is-active');$elem.attr({'aria-controls':subId,'aria-expanded':isActive,'role':'tab','id':linkId});$sub.attr({'aria-labelledby':linkId,'aria-hidden':!isActive,'role':'tabpanel','id':subId});});var initPanes=this.$element.find('.is-active');if(initPanes.length){var _this=this;initPanes.each(function(){_this.down($(this));});}this._events();}/**\r\n       * Adds event handlers for items within the menu.\r\n       * @private\r\n       */},{key:'_events',value:function _events(){var _this=this;this.$element.find('li').each(function(){var $submenu=$(this).children('[data-submenu]');if($submenu.length){$(this).children('a').off('click.zf.accordionMenu').on('click.zf.accordionMenu',function(e){e.preventDefault();_this.toggle($submenu);});}}).on('keydown.zf.accordionmenu',function(e){var $element=$(this),$elements=$element.parent('ul').children('li'),$prevElement,$nextElement,$target=$element.children('[data-submenu]');$elements.each(function(i){if($(this).is($element)){$prevElement=$elements.eq(Math.max(0,i-1));$nextElement=$elements.eq(Math.min(i+1,$elements.length-1));if($(this).children('[data-submenu]:visible').length){// has open sub menu\n$nextElement=$element.find('li:first-child');}if($(this).is(':first-child')){// is first element of sub menu\n$prevElement=$element.parents('li').first();}else if($prevElement.children('[data-submenu]:visible').length){// if previous element has open sub menu\n$prevElement=$prevElement.find('li:last-child');}if($(this).is(':last-child')){// is last element of sub menu\n$nextElement=$element.parents('li').first().next('li');}return;}});Foundation.Keyboard.handleKey(e,'AccordionMenu',{open:function open(){if($target.is(':hidden')){_this.down($target);$target.find('li').first().focus();}},close:function close(){if($target.length&&!$target.is(':hidden')){// close active sub of this item\n_this.up($target);}else if($element.parent('[data-submenu]').length){// close currently open sub\n_this.up($element.parent('[data-submenu]'));$element.parents('li').first().focus();}},up:function up(){$prevElement.focus();},down:function down(){$nextElement.focus();},toggle:function toggle(){if($element.children('[data-submenu]').length){_this.toggle($element.children('[data-submenu]'));}},closeAll:function closeAll(){_this.hideAll();},handled:function handled(){e.preventDefault();e.stopImmediatePropagation();}});});//.attr('tabindex', 0);\n}/**\r\n       * Closes all panes of the menu.\r\n       * @function\r\n       */},{key:'hideAll',value:function hideAll(){this.$element.find('[data-submenu]').slideUp(this.options.slideSpeed);}/**\r\n       * Toggles the open/close state of a submenu.\r\n       * @function\r\n       * @param {jQuery} $target - the submenu to toggle\r\n       */},{key:'toggle',value:function toggle($target){if(!$target.is(':animated')){if(!$target.is(':hidden')){this.up($target);}else{this.down($target);}}}/**\r\n       * Opens the sub-menu defined by `$target`.\r\n       * @param {jQuery} $target - Sub-menu to open.\r\n       * @fires AccordionMenu#down\r\n       */},{key:'down',value:function down($target){var _this=this;if(!this.options.multiOpen){this.up(this.$element.find('.is-active').not($target.parentsUntil(this.$element).add($target)));}$target.addClass('is-active').attr({'aria-hidden':false}).parent('.is-accordion-submenu-parent').attr({'aria-expanded':true});Foundation.Move(this.options.slideSpeed,$target,function(){$target.slideDown(_this.options.slideSpeed,function(){/**\r\n             * Fires when the menu is done opening.\r\n             * @event AccordionMenu#down\r\n             */_this.$element.trigger('down.zf.accordionMenu',[$target]);});});}/**\r\n       * Closes the sub-menu defined by `$target`. All sub-menus inside the target will be closed as well.\r\n       * @param {jQuery} $target - Sub-menu to close.\r\n       * @fires AccordionMenu#up\r\n       */},{key:'up',value:function up($target){var _this=this;Foundation.Move(this.options.slideSpeed,$target,function(){$target.slideUp(_this.options.slideSpeed,function(){/**\r\n             * Fires when the menu is done collapsing up.\r\n             * @event AccordionMenu#up\r\n             */_this.$element.trigger('up.zf.accordionMenu',[$target]);});});var $menus=$target.find('[data-submenu]').slideUp(0).addBack().attr('aria-hidden',true);$menus.parent('.is-accordion-submenu-parent').attr('aria-expanded',false);}/**\r\n       * Destroys an instance of accordion menu.\r\n       * @fires AccordionMenu#destroyed\r\n       */},{key:'destroy',value:function destroy(){this.$element.find('[data-submenu]').slideDown(0).css('display','');this.$element.find('a').off('click.zf.accordionMenu');Foundation.Nest.Burn(this.$element,'accordion');Foundation.unregisterPlugin(this);}}]);return AccordionMenu;}();AccordionMenu.defaults={/**\r\n     * Amount of time to animate the opening of a submenu in ms.\r\n     * @option\r\n     * @example 250\r\n     */slideSpeed:250,/**\r\n     * Allow the menu to have multiple open panes.\r\n     * @option\r\n     * @example true\r\n     */multiOpen:true};// Window exports\nFoundation.plugin(AccordionMenu,'AccordionMenu');}(jQuery);'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}!function($){/**\r\n   * Drilldown module.\r\n   * @module foundation.drilldown\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.motion\r\n   * @requires foundation.util.nest\r\n   */var Drilldown=function(){/**\r\n     * Creates a new instance of a drilldown menu.\r\n     * @class\r\n     * @param {jQuery} element - jQuery object to make into an accordion menu.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */function Drilldown(element,options){_classCallCheck(this,Drilldown);this.$element=element;this.options=$.extend({},Drilldown.defaults,this.$element.data(),options);Foundation.Nest.Feather(this.$element,'drilldown');this._init();Foundation.registerPlugin(this,'Drilldown');Foundation.Keyboard.register('Drilldown',{'ENTER':'open','SPACE':'open','ARROW_RIGHT':'next','ARROW_UP':'up','ARROW_DOWN':'down','ARROW_LEFT':'previous','ESCAPE':'close','TAB':'down','SHIFT_TAB':'up'});}/**\r\n     * Initializes the drilldown by creating jQuery collections of elements\r\n     * @private\r\n     */_createClass(Drilldown,[{key:'_init',value:function _init(){this.$submenuAnchors=this.$element.find('li.is-drilldown-submenu-parent');this.$submenus=this.$submenuAnchors.children('[data-submenu]');this.$menuItems=this.$element.find('li').not('.js-drilldown-back').attr('role','menuitem');this._prepareMenu();this._keyboardEvents();}/**\r\n       * prepares drilldown menu by setting attributes to links and elements\r\n       * sets a min height to prevent content jumping\r\n       * wraps the element if not already wrapped\r\n       * @private\r\n       * @function\r\n       */},{key:'_prepareMenu',value:function _prepareMenu(){var _this=this;// if(!this.options.holdOpen){\n//   this._menuLinkEvents();\n// }\nthis.$submenuAnchors.each(function(){var $sub=$(this);var $link=$sub.find('a:first');if(_this.options.parentLink){$link.clone().prependTo($sub.children('[data-submenu]')).wrap('<li class=\"is-submenu-parent-item is-submenu-item is-drilldown-submenu-item\" role=\"menu-item\"></li>');}$link.data('savedHref',$link.attr('href')).removeAttr('href');$sub.children('[data-submenu]').attr({'aria-hidden':true,'tabindex':0,'role':'menu'});_this._events($sub);});this.$submenus.each(function(){var $menu=$(this),$back=$menu.find('.js-drilldown-back');if(!$back.length){$menu.prepend(_this.options.backButton);}_this._back($menu);});if(!this.$element.parent().hasClass('is-drilldown')){this.$wrapper=$(this.options.wrapper).addClass('is-drilldown').css(this._getMaxDims());this.$element.wrap(this.$wrapper);}}/**\r\n       * Adds event handlers to elements in the menu.\r\n       * @function\r\n       * @private\r\n       * @param {jQuery} $elem - the current menu item to add handlers to.\r\n       */},{key:'_events',value:function _events($elem){var _this=this;$elem.off('click.zf.drilldown').on('click.zf.drilldown',function(e){if($(e.target).parentsUntil('ul','li').hasClass('is-drilldown-submenu-parent')){e.stopImmediatePropagation();e.preventDefault();}// if(e.target !== e.currentTarget.firstElementChild){\n//   return false;\n// }\n_this._show($elem);if(_this.options.closeOnClick){var $body=$('body').not(_this.$wrapper);$body.off('.zf.drilldown').on('click.zf.drilldown',function(e){e.preventDefault();_this._hideAll();$body.off('.zf.drilldown');});}});}/**\r\n       * Adds keydown event listener to `li`'s in the menu.\r\n       * @private\r\n       */},{key:'_keyboardEvents',value:function _keyboardEvents(){var _this=this;this.$menuItems.add(this.$element.find('.js-drilldown-back')).on('keydown.zf.drilldown',function(e){var $element=$(this),$elements=$element.parent('ul').children('li'),$prevElement,$nextElement;$elements.each(function(i){if($(this).is($element)){$prevElement=$elements.eq(Math.max(0,i-1));$nextElement=$elements.eq(Math.min(i+1,$elements.length-1));return;}});Foundation.Keyboard.handleKey(e,'Drilldown',{next:function next(){if($element.is(_this.$submenuAnchors)){_this._show($element);$element.on(Foundation.transitionend($element),function(){$element.find('ul li').filter(_this.$menuItems).first().focus();});}},previous:function previous(){_this._hide($element.parent('ul'));$element.parent('ul').on(Foundation.transitionend($element),function(){setTimeout(function(){$element.parent('ul').parent('li').focus();},1);});},up:function up(){$prevElement.focus();},down:function down(){$nextElement.focus();},close:function close(){_this._back();//_this.$menuItems.first().focus(); // focus to first element\n},open:function open(){if(!$element.is(_this.$menuItems)){// not menu item means back button\n_this._hide($element.parent('ul'));setTimeout(function(){$element.parent('ul').parent('li').focus();},1);}else if($element.is(_this.$submenuAnchors)){_this._show($element);setTimeout(function(){$element.find('ul li').filter(_this.$menuItems).first().focus();},1);}},handled:function handled(){e.preventDefault();e.stopImmediatePropagation();}});});// end keyboardAccess\n}/**\r\n       * Closes all open elements, and returns to root menu.\r\n       * @function\r\n       * @fires Drilldown#closed\r\n       */},{key:'_hideAll',value:function _hideAll(){var $elem=this.$element.find('.is-drilldown-submenu.is-active').addClass('is-closing');$elem.one(Foundation.transitionend($elem),function(e){$elem.removeClass('is-active is-closing');});/**\r\n         * Fires when the menu is fully closed.\r\n         * @event Drilldown#closed\r\n         */this.$element.trigger('closed.zf.drilldown');}/**\r\n       * Adds event listener for each `back` button, and closes open menus.\r\n       * @function\r\n       * @fires Drilldown#back\r\n       * @param {jQuery} $elem - the current sub-menu to add `back` event.\r\n       */},{key:'_back',value:function _back($elem){var _this=this;$elem.off('click.zf.drilldown');$elem.children('.js-drilldown-back').on('click.zf.drilldown',function(e){e.stopImmediatePropagation();// console.log('mouseup on back');\n_this._hide($elem);});}/**\r\n       * Adds event listener to menu items w/o submenus to close open menus on click.\r\n       * @function\r\n       * @private\r\n       */},{key:'_menuLinkEvents',value:function _menuLinkEvents(){var _this=this;this.$menuItems.not('.is-drilldown-submenu-parent').off('click.zf.drilldown').on('click.zf.drilldown',function(e){// e.stopImmediatePropagation();\nsetTimeout(function(){_this._hideAll();},0);});}/**\r\n       * Opens a submenu.\r\n       * @function\r\n       * @fires Drilldown#open\r\n       * @param {jQuery} $elem - the current element with a submenu to open.\r\n       */},{key:'_show',value:function _show($elem){$elem.children('[data-submenu]').addClass('is-active');this.$element.trigger('open.zf.drilldown',[$elem]);}},{key:'_hide',/**\r\n       * Hides a submenu\r\n       * @function\r\n       * @fires Drilldown#hide\r\n       * @param {jQuery} $elem - the current sub-menu to hide.\r\n       */value:function _hide($elem){var _this=this;$elem.addClass('is-closing').one(Foundation.transitionend($elem),function(){$elem.removeClass('is-active is-closing');$elem.blur();});/**\r\n         * Fires when the submenu is has closed.\r\n         * @event Drilldown#hide\r\n         */$elem.trigger('hide.zf.drilldown',[$elem]);}/**\r\n       * Iterates through the nested menus to calculate the min-height, and max-width for the menu.\r\n       * Prevents content jumping.\r\n       * @function\r\n       * @private\r\n       */},{key:'_getMaxDims',value:function _getMaxDims(){var max=0,result={};this.$submenus.add(this.$element).each(function(){var numOfElems=$(this).children('li').length;max=numOfElems>max?numOfElems:max;});result['min-height']=max*this.$menuItems[0].getBoundingClientRect().height+'px';result['max-width']=this.$element[0].getBoundingClientRect().width+'px';return result;}/**\r\n       * Destroys the Drilldown Menu\r\n       * @function\r\n       */},{key:'destroy',value:function destroy(){this._hideAll();Foundation.Nest.Burn(this.$element,'drilldown');this.$element.unwrap().find('.js-drilldown-back, .is-submenu-parent-item').remove().end().find('.is-active, .is-closing, .is-drilldown-submenu').removeClass('is-active is-closing is-drilldown-submenu').end().find('[data-submenu]').removeAttr('aria-hidden tabindex role').off('.zf.drilldown').end().off('zf.drilldown');this.$element.find('a').each(function(){var $link=$(this);if($link.data('savedHref')){$link.attr('href',$link.data('savedHref')).removeData('savedHref');}else{return;}});Foundation.unregisterPlugin(this);}}]);return Drilldown;}();Drilldown.defaults={/**\r\n     * Markup used for JS generated back button. Prepended to submenu lists and deleted on `destroy` method, 'js-drilldown-back' class required. Remove the backslash (`\\`) if copy and pasting.\r\n     * @option\r\n     * @example '<\\li><\\a>Back<\\/a><\\/li>'\r\n     */backButton:'<li class=\"js-drilldown-back\"><a>Back</a></li>',/**\r\n     * Markup used to wrap drilldown menu. Use a class name for independent styling; the JS applied class: `is-drilldown` is required. Remove the backslash (`\\`) if copy and pasting.\r\n     * @option\r\n     * @example '<\\div class=\"is-drilldown\"><\\/div>'\r\n     */wrapper:'<div></div>',/**\r\n     * Adds the parent link to the submenu.\r\n     * @option\r\n     * @example false\r\n     */parentLink:false,/**\r\n     * Allow the menu to return to root list on body click.\r\n     * @option\r\n     * @example false\r\n     */closeOnClick:false// holdOpen: false\n};// Window exports\nFoundation.plugin(Drilldown,'Drilldown');}(jQuery);'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}!function($){/**\r\n   * Dropdown module.\r\n   * @module foundation.dropdown\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.box\r\n   * @requires foundation.util.triggers\r\n   */var Dropdown=function(){/**\r\n     * Creates a new instance of a dropdown.\r\n     * @class\r\n     * @param {jQuery} element - jQuery object to make into a dropdown.\r\n     *        Object should be of the dropdown panel, rather than its anchor.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */function Dropdown(element,options){_classCallCheck(this,Dropdown);this.$element=element;this.options=$.extend({},Dropdown.defaults,this.$element.data(),options);this._init();Foundation.registerPlugin(this,'Dropdown');Foundation.Keyboard.register('Dropdown',{'ENTER':'open','SPACE':'open','ESCAPE':'close','TAB':'tab_forward','SHIFT_TAB':'tab_backward'});}/**\r\n     * Initializes the plugin by setting/checking options and attributes, adding helper variables, and saving the anchor.\r\n     * @function\r\n     * @private\r\n     */_createClass(Dropdown,[{key:'_init',value:function _init(){var $id=this.$element.attr('id');this.$anchor=$('[data-toggle=\"'+$id+'\"]')||$('[data-open=\"'+$id+'\"]');this.$anchor.attr({'aria-controls':$id,'data-is-focus':false,'data-yeti-box':$id,'aria-haspopup':true,'aria-expanded':false});this.options.positionClass=this.getPositionClass();this.counter=4;this.usedPositions=[];this.$element.attr({'aria-hidden':'true','data-yeti-box':$id,'data-resize':$id,'aria-labelledby':this.$anchor[0].id||Foundation.GetYoDigits(6,'dd-anchor')});this._events();}/**\r\n       * Helper function to determine current orientation of dropdown pane.\r\n       * @function\r\n       * @returns {String} position - string value of a position class.\r\n       */},{key:'getPositionClass',value:function getPositionClass(){var position=this.$element[0].className.match(/\\b(top|left|right)\\b/g);position=position?position[0]:'';return position;}/**\r\n       * Adjusts the dropdown panes orientation by adding/removing positioning classes.\r\n       * @function\r\n       * @private\r\n       * @param {String} position - position class to remove.\r\n       */},{key:'_reposition',value:function _reposition(position){this.usedPositions.push(position?position:'bottom');//default, try switching to opposite side\nif(!position&&this.usedPositions.indexOf('top')<0){this.$element.addClass('top');}else if(position==='top'&&this.usedPositions.indexOf('bottom')<0){this.$element.removeClass(position);}else if(position==='left'&&this.usedPositions.indexOf('right')<0){this.$element.removeClass(position).addClass('right');}else if(position==='right'&&this.usedPositions.indexOf('left')<0){this.$element.removeClass(position).addClass('left');}//if default change didn't work, try bottom or left first\nelse if(!position&&this.usedPositions.indexOf('top')>-1&&this.usedPositions.indexOf('left')<0){this.$element.addClass('left');}else if(position==='top'&&this.usedPositions.indexOf('bottom')>-1&&this.usedPositions.indexOf('left')<0){this.$element.removeClass(position).addClass('left');}else if(position==='left'&&this.usedPositions.indexOf('right')>-1&&this.usedPositions.indexOf('bottom')<0){this.$element.removeClass(position);}else if(position==='right'&&this.usedPositions.indexOf('left')>-1&&this.usedPositions.indexOf('bottom')<0){this.$element.removeClass(position);}//if nothing cleared, set to bottom\nelse{this.$element.removeClass(position);}this.classChanged=true;this.counter--;}/**\r\n       * Sets the position and orientation of the dropdown pane, checks for collisions.\r\n       * Recursively calls itself if a collision is detected, with a new position class.\r\n       * @function\r\n       * @private\r\n       */},{key:'_setPosition',value:function _setPosition(){if(this.$anchor.attr('aria-expanded')==='false'){return false;}var position=this.getPositionClass(),$eleDims=Foundation.Box.GetDimensions(this.$element),$anchorDims=Foundation.Box.GetDimensions(this.$anchor),_this=this,direction=position==='left'?'left':position==='right'?'left':'top',param=direction==='top'?'height':'width',offset=param==='height'?this.options.vOffset:this.options.hOffset;if($eleDims.width>=$eleDims.windowDims.width||!this.counter&&!Foundation.Box.ImNotTouchingYou(this.$element)){this.$element.offset(Foundation.Box.GetOffsets(this.$element,this.$anchor,'center bottom',this.options.vOffset,this.options.hOffset,true)).css({'width':$eleDims.windowDims.width-this.options.hOffset*2,'height':'auto'});this.classChanged=true;return false;}this.$element.offset(Foundation.Box.GetOffsets(this.$element,this.$anchor,position,this.options.vOffset,this.options.hOffset));while(!Foundation.Box.ImNotTouchingYou(this.$element)&&this.counter){this._reposition(position);this._setPosition();}}/**\r\n       * Adds event listeners to the element utilizing the triggers utility library.\r\n       * @function\r\n       * @private\r\n       */},{key:'_events',value:function _events(){var _this=this;this.$element.on({'open.zf.trigger':this.open.bind(this),'close.zf.trigger':this.close.bind(this),'toggle.zf.trigger':this.toggle.bind(this),'resizeme.zf.trigger':this._setPosition.bind(this)});if(this.options.hover){this.$anchor.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown',function(){clearTimeout(_this.timeout);_this.timeout=setTimeout(function(){_this.open();_this.$anchor.data('hover',true);},_this.options.hoverDelay);}).on('mouseleave.zf.dropdown',function(){clearTimeout(_this.timeout);_this.timeout=setTimeout(function(){_this.close();_this.$anchor.data('hover',false);},_this.options.hoverDelay);});if(this.options.hoverPane){this.$element.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown',function(){clearTimeout(_this.timeout);}).on('mouseleave.zf.dropdown',function(){clearTimeout(_this.timeout);_this.timeout=setTimeout(function(){_this.close();_this.$anchor.data('hover',false);},_this.options.hoverDelay);});}}this.$anchor.add(this.$element).on('keydown.zf.dropdown',function(e){var $target=$(this),visibleFocusableElements=Foundation.Keyboard.findFocusable(_this.$element);Foundation.Keyboard.handleKey(e,'Dropdown',{tab_forward:function tab_forward(){if(_this.$element.find(':focus').is(visibleFocusableElements.eq(-1))){// left modal downwards, setting focus to first element\nif(_this.options.trapFocus){// if focus shall be trapped\nvisibleFocusableElements.eq(0).focus();e.preventDefault();}else{// if focus is not trapped, close dropdown on focus out\n_this.close();}}},tab_backward:function tab_backward(){if(_this.$element.find(':focus').is(visibleFocusableElements.eq(0))||_this.$element.is(':focus')){// left modal upwards, setting focus to last element\nif(_this.options.trapFocus){// if focus shall be trapped\nvisibleFocusableElements.eq(-1).focus();e.preventDefault();}else{// if focus is not trapped, close dropdown on focus out\n_this.close();}}},open:function open(){if($target.is(_this.$anchor)){_this.open();_this.$element.attr('tabindex',-1).focus();e.preventDefault();}},close:function close(){_this.close();_this.$anchor.focus();}});});}/**\r\n       * Adds an event handler to the body to close any dropdowns on a click.\r\n       * @function\r\n       * @private\r\n       */},{key:'_addBodyHandler',value:function _addBodyHandler(){var $body=$(document.body).not(this.$element),_this=this;$body.off('click.zf.dropdown').on('click.zf.dropdown',function(e){if(_this.$anchor.is(e.target)||_this.$anchor.find(e.target).length){return;}if(_this.$element.find(e.target).length){return;}_this.close();$body.off('click.zf.dropdown');});}/**\r\n       * Opens the dropdown pane, and fires a bubbling event to close other dropdowns.\r\n       * @function\r\n       * @fires Dropdown#closeme\r\n       * @fires Dropdown#show\r\n       */},{key:'open',value:function open(){// var _this = this;\n/**\r\n         * Fires to close other open dropdowns\r\n         * @event Dropdown#closeme\r\n         */this.$element.trigger('closeme.zf.dropdown',this.$element.attr('id'));this.$anchor.addClass('hover').attr({'aria-expanded':true});// this.$element/*.show()*/;\nthis._setPosition();this.$element.addClass('is-open').attr({'aria-hidden':false});if(this.options.autoFocus){var $focusable=Foundation.Keyboard.findFocusable(this.$element);if($focusable.length){$focusable.eq(0).focus();}}if(this.options.closeOnClick){this._addBodyHandler();}/**\r\n         * Fires once the dropdown is visible.\r\n         * @event Dropdown#show\r\n         */this.$element.trigger('show.zf.dropdown',[this.$element]);}/**\r\n       * Closes the open dropdown pane.\r\n       * @function\r\n       * @fires Dropdown#hide\r\n       */},{key:'close',value:function close(){if(!this.$element.hasClass('is-open')){return false;}this.$element.removeClass('is-open').attr({'aria-hidden':true});this.$anchor.removeClass('hover').attr('aria-expanded',false);if(this.classChanged){var curPositionClass=this.getPositionClass();if(curPositionClass){this.$element.removeClass(curPositionClass);}this.$element.addClass(this.options.positionClass)/*.hide()*/.css({height:'',width:''});this.classChanged=false;this.counter=4;this.usedPositions.length=0;}this.$element.trigger('hide.zf.dropdown',[this.$element]);}/**\r\n       * Toggles the dropdown pane's visibility.\r\n       * @function\r\n       */},{key:'toggle',value:function toggle(){if(this.$element.hasClass('is-open')){if(this.$anchor.data('hover'))return;this.close();}else{this.open();}}/**\r\n       * Destroys the dropdown.\r\n       * @function\r\n       */},{key:'destroy',value:function destroy(){this.$element.off('.zf.trigger').hide();this.$anchor.off('.zf.dropdown');Foundation.unregisterPlugin(this);}}]);return Dropdown;}();Dropdown.defaults={/**\r\n     * Amount of time to delay opening a submenu on hover event.\r\n     * @option\r\n     * @example 250\r\n     */hoverDelay:250,/**\r\n     * Allow submenus to open on hover events\r\n     * @option\r\n     * @example false\r\n     */hover:false,/**\r\n     * Don't close dropdown when hovering over dropdown pane\r\n     * @option\r\n     * @example true\r\n     */hoverPane:false,/**\r\n     * Number of pixels between the dropdown pane and the triggering element on open.\r\n     * @option\r\n     * @example 1\r\n     */vOffset:1,/**\r\n     * Number of pixels between the dropdown pane and the triggering element on open.\r\n     * @option\r\n     * @example 1\r\n     */hOffset:1,/**\r\n     * Class applied to adjust open position. JS will test and fill this in.\r\n     * @option\r\n     * @example 'top'\r\n     */positionClass:'',/**\r\n     * Allow the plugin to trap focus to the dropdown pane if opened with keyboard commands.\r\n     * @option\r\n     * @example false\r\n     */trapFocus:false,/**\r\n     * Allow the plugin to set focus to the first focusable element within the pane, regardless of method of opening.\r\n     * @option\r\n     * @example true\r\n     */autoFocus:false,/**\r\n     * Allows a click on the body to close the dropdown.\r\n     * @option\r\n     * @example false\r\n     */closeOnClick:false};// Window exports\nFoundation.plugin(Dropdown,'Dropdown');}(jQuery);'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}!function($){/**\r\n   * DropdownMenu module.\r\n   * @module foundation.dropdown-menu\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.box\r\n   * @requires foundation.util.nest\r\n   */var DropdownMenu=function(){/**\r\n     * Creates a new instance of DropdownMenu.\r\n     * @class\r\n     * @fires DropdownMenu#init\r\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */function DropdownMenu(element,options){_classCallCheck(this,DropdownMenu);this.$element=element;this.options=$.extend({},DropdownMenu.defaults,this.$element.data(),options);Foundation.Nest.Feather(this.$element,'dropdown');this._init();Foundation.registerPlugin(this,'DropdownMenu');Foundation.Keyboard.register('DropdownMenu',{'ENTER':'open','SPACE':'open','ARROW_RIGHT':'next','ARROW_UP':'up','ARROW_DOWN':'down','ARROW_LEFT':'previous','ESCAPE':'close'});}/**\r\n     * Initializes the plugin, and calls _prepareMenu\r\n     * @private\r\n     * @function\r\n     */_createClass(DropdownMenu,[{key:'_init',value:function _init(){var subs=this.$element.find('li.is-dropdown-submenu-parent');this.$element.children('.is-dropdown-submenu-parent').children('.is-dropdown-submenu').addClass('first-sub');this.$menuItems=this.$element.find('[role=\"menuitem\"]');this.$tabs=this.$element.children('[role=\"menuitem\"]');this.$tabs.find('ul.is-dropdown-submenu').addClass(this.options.verticalClass);if(this.$element.hasClass(this.options.rightClass)||this.options.alignment==='right'||Foundation.rtl()){this.options.alignment='right';subs.addClass('opens-left');}else{subs.addClass('opens-right');}this.changed=false;this._events();}},{key:'_events',/**\r\n       * Adds event listeners to elements within the menu\r\n       * @private\r\n       * @function\r\n       */value:function _events(){var _this=this,hasTouch='ontouchstart'in window||typeof window.ontouchstart!=='undefined',parClass='is-dropdown-submenu-parent';if(this.options.clickOpen||hasTouch){this.$menuItems.on('click.zf.dropdownmenu touchstart.zf.dropdownmenu',function(e){var $elem=$(e.target).parentsUntil('ul','.'+parClass),hasSub=$elem.hasClass(parClass),hasClicked=$elem.attr('data-is-click')==='true',$sub=$elem.children('.is-dropdown-submenu');if(hasSub){if(hasClicked){if(!_this.options.closeOnClick||!_this.options.clickOpen&&!hasTouch||_this.options.forceFollow&&hasTouch){return;}else{e.stopImmediatePropagation();e.preventDefault();_this._hide($elem);}}else{e.preventDefault();e.stopImmediatePropagation();_this._show($elem.children('.is-dropdown-submenu'));$elem.add($elem.parentsUntil(_this.$element,'.'+parClass)).attr('data-is-click',true);}}else{return;}});}if(!this.options.disableHover){this.$menuItems.on('mouseenter.zf.dropdownmenu',function(e){e.stopImmediatePropagation();var $elem=$(this),hasSub=$elem.hasClass(parClass);if(hasSub){clearTimeout(_this.delay);_this.delay=setTimeout(function(){_this._show($elem.children('.is-dropdown-submenu'));},_this.options.hoverDelay);}}).on('mouseleave.zf.dropdownmenu',function(e){var $elem=$(this),hasSub=$elem.hasClass(parClass);if(hasSub&&_this.options.autoclose){if($elem.attr('data-is-click')==='true'&&_this.options.clickOpen){return false;}clearTimeout(_this.delay);_this.delay=setTimeout(function(){_this._hide($elem);},_this.options.closingTime);}});}this.$menuItems.on('keydown.zf.dropdownmenu',function(e){var $element=$(e.target).parentsUntil('ul','[role=\"menuitem\"]'),isTab=_this.$tabs.index($element)>-1,$elements=isTab?_this.$tabs:$element.siblings('li').add($element),$prevElement,$nextElement;$elements.each(function(i){if($(this).is($element)){$prevElement=$elements.eq(i-1);$nextElement=$elements.eq(i+1);return;}});var nextSibling=function nextSibling(){if(!$element.is(':last-child'))$nextElement.children('a:first').focus();},prevSibling=function prevSibling(){$prevElement.children('a:first').focus();},openSub=function openSub(){var $sub=$element.children('ul.is-dropdown-submenu');if($sub.length){_this._show($sub);$element.find('li > a:first').focus();}else{return;}},closeSub=function closeSub(){//if ($element.is(':first-child')) {\nvar close=$element.parent('ul').parent('li');close.children('a:first').focus();_this._hide(close);//}\n};var functions={open:openSub,close:function close(){_this._hide(_this.$element);_this.$menuItems.find('a:first').focus();// focus to first element\n},handled:function handled(){e.preventDefault();e.stopImmediatePropagation();}};if(isTab){if(_this.vertical){// vertical menu\nif(_this.options.alignment==='left'){// left aligned\n$.extend(functions,{down:nextSibling,up:prevSibling,next:openSub,previous:closeSub});}else{// right aligned\n$.extend(functions,{down:nextSibling,up:prevSibling,next:closeSub,previous:openSub});}}else{// horizontal menu\n$.extend(functions,{next:nextSibling,previous:prevSibling,down:openSub,up:closeSub});}}else{// not tabs -> one sub\nif(_this.options.alignment==='left'){// left aligned\n$.extend(functions,{next:openSub,previous:closeSub,down:nextSibling,up:prevSibling});}else{// right aligned\n$.extend(functions,{next:closeSub,previous:openSub,down:nextSibling,up:prevSibling});}}Foundation.Keyboard.handleKey(e,'DropdownMenu',functions);});}/**\r\n       * Adds an event handler to the body to close any dropdowns on a click.\r\n       * @function\r\n       * @private\r\n       */},{key:'_addBodyHandler',value:function _addBodyHandler(){var $body=$(document.body),_this=this;$body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu').on('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu',function(e){var $link=_this.$element.find(e.target);if($link.length){return;}_this._hide();$body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu');});}/**\r\n       * Opens a dropdown pane, and checks for collisions first.\r\n       * @param {jQuery} $sub - ul element that is a submenu to show\r\n       * @function\r\n       * @private\r\n       * @fires DropdownMenu#show\r\n       */},{key:'_show',value:function _show($sub){var idx=this.$tabs.index(this.$tabs.filter(function(i,el){return $(el).find($sub).length>0;}));var $sibs=$sub.parent('li.is-dropdown-submenu-parent').siblings('li.is-dropdown-submenu-parent');this._hide($sibs,idx);$sub.css('visibility','hidden').addClass('js-dropdown-active').attr({'aria-hidden':false}).parent('li.is-dropdown-submenu-parent').addClass('is-active').attr({'aria-expanded':true});var clear=Foundation.Box.ImNotTouchingYou($sub,null,true);if(!clear){var oldClass=this.options.alignment==='left'?'-right':'-left',$parentLi=$sub.parent('.is-dropdown-submenu-parent');$parentLi.removeClass('opens'+oldClass).addClass('opens-'+this.options.alignment);clear=Foundation.Box.ImNotTouchingYou($sub,null,true);if(!clear){$parentLi.removeClass('opens-'+this.options.alignment).addClass('opens-inner');}this.changed=true;}$sub.css('visibility','');if(this.options.closeOnClick){this._addBodyHandler();}/**\r\n         * Fires when the new dropdown pane is visible.\r\n         * @event DropdownMenu#show\r\n         */this.$element.trigger('show.zf.dropdownmenu',[$sub]);}/**\r\n       * Hides a single, currently open dropdown pane, if passed a parameter, otherwise, hides everything.\r\n       * @function\r\n       * @param {jQuery} $elem - element with a submenu to hide\r\n       * @param {Number} idx - index of the $tabs collection to hide\r\n       * @private\r\n       */},{key:'_hide',value:function _hide($elem,idx){var $toClose;if($elem&&$elem.length){$toClose=$elem;}else if(idx!==undefined){$toClose=this.$tabs.not(function(i,el){return i===idx;});}else{$toClose=this.$element;}var somethingToClose=$toClose.hasClass('is-active')||$toClose.find('.is-active').length>0;if(somethingToClose){$toClose.find('li.is-active').add($toClose).attr({'aria-expanded':false,'data-is-click':false}).removeClass('is-active');$toClose.find('ul.js-dropdown-active').attr({'aria-hidden':true}).removeClass('js-dropdown-active');if(this.changed||$toClose.find('opens-inner').length){var oldClass=this.options.alignment==='left'?'right':'left';$toClose.find('li.is-dropdown-submenu-parent').add($toClose).removeClass('opens-inner opens-'+this.options.alignment).addClass('opens-'+oldClass);this.changed=false;}/**\r\n           * Fires when the open menus are closed.\r\n           * @event DropdownMenu#hide\r\n           */this.$element.trigger('hide.zf.dropdownmenu',[$toClose]);}}/**\r\n       * Destroys the plugin.\r\n       * @function\r\n       */},{key:'destroy',value:function destroy(){this.$menuItems.off('.zf.dropdownmenu').removeAttr('data-is-click').removeClass('is-right-arrow is-left-arrow is-down-arrow opens-right opens-left opens-inner');$(document.body).off('.zf.dropdownmenu');Foundation.Nest.Burn(this.$element,'dropdown');Foundation.unregisterPlugin(this);}}]);return DropdownMenu;}();/**\r\n   * Default settings for plugin\r\n   */DropdownMenu.defaults={/**\r\n     * Disallows hover events from opening submenus\r\n     * @option\r\n     * @example false\r\n     */disableHover:false,/**\r\n     * Allow a submenu to automatically close on a mouseleave event, if not clicked open.\r\n     * @option\r\n     * @example true\r\n     */autoclose:true,/**\r\n     * Amount of time to delay opening a submenu on hover event.\r\n     * @option\r\n     * @example 50\r\n     */hoverDelay:50,/**\r\n     * Allow a submenu to open/remain open on parent click event. Allows cursor to move away from menu.\r\n     * @option\r\n     * @example true\r\n     */clickOpen:false,/**\r\n     * Amount of time to delay closing a submenu on a mouseleave event.\r\n     * @option\r\n     * @example 500\r\n     */closingTime:500,/**\r\n     * Position of the menu relative to what direction the submenus should open. Handled by JS.\r\n     * @option\r\n     * @example 'left'\r\n     */alignment:'left',/**\r\n     * Allow clicks on the body to close any open submenus.\r\n     * @option\r\n     * @example true\r\n     */closeOnClick:true,/**\r\n     * Class applied to vertical oriented menus, Foundation default is `vertical`. Update this if using your own class.\r\n     * @option\r\n     * @example 'vertical'\r\n     */verticalClass:'vertical',/**\r\n     * Class applied to right-side oriented menus, Foundation default is `align-right`. Update this if using your own class.\r\n     * @option\r\n     * @example 'align-right'\r\n     */rightClass:'align-right',/**\r\n     * Boolean to force overide the clicking of links to perform default action, on second touch event for mobile.\r\n     * @option\r\n     * @example false\r\n     */forceFollow:true};// Window exports\nFoundation.plugin(DropdownMenu,'DropdownMenu');}(jQuery);'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}!function($){/**\r\n   * Equalizer module.\r\n   * @module foundation.equalizer\r\n   */var Equalizer=function(){/**\r\n     * Creates a new instance of Equalizer.\r\n     * @class\r\n     * @fires Equalizer#init\r\n     * @param {Object} element - jQuery object to add the trigger to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */function Equalizer(element,options){_classCallCheck(this,Equalizer);this.$element=element;this.options=$.extend({},Equalizer.defaults,this.$element.data(),options);this._init();Foundation.registerPlugin(this,'Equalizer');}/**\r\n     * Initializes the Equalizer plugin and calls functions to get equalizer functioning on load.\r\n     * @private\r\n     */_createClass(Equalizer,[{key:'_init',value:function _init(){var eqId=this.$element.attr('data-equalizer')||'';var $watched=this.$element.find('[data-equalizer-watch=\"'+eqId+'\"]');this.$watched=$watched.length?$watched:this.$element.find('[data-equalizer-watch]');this.$element.attr('data-resize',eqId||Foundation.GetYoDigits(6,'eq'));this.hasNested=this.$element.find('[data-equalizer]').length>0;this.isNested=this.$element.parentsUntil(document.body,'[data-equalizer]').length>0;this.isOn=false;var imgs=this.$element.find('img');var tooSmall;if(this.options.equalizeOn){tooSmall=this._checkMQ();$(window).on('changed.zf.mediaquery',this._checkMQ.bind(this));}else{this._events();}if(tooSmall!==undefined&&tooSmall===false||tooSmall===undefined){if(imgs.length){Foundation.onImagesLoaded(imgs,this._reflow.bind(this));}else{this._reflow();}}}/**\r\n       * Removes event listeners if the breakpoint is too small.\r\n       * @private\r\n       */},{key:'_pauseEvents',value:function _pauseEvents(){this.isOn=false;this.$element.off('.zf.equalizer resizeme.zf.trigger');}/**\r\n       * Initializes events for Equalizer.\r\n       * @private\r\n       */},{key:'_events',value:function _events(){var _this=this;this._pauseEvents();if(this.hasNested){this.$element.on('postequalized.zf.equalizer',function(e){if(e.target!==_this.$element[0]){_this._reflow();}});}else{this.$element.on('resizeme.zf.trigger',this._reflow.bind(this));}this.isOn=true;}/**\r\n       * Checks the current breakpoint to the minimum required size.\r\n       * @private\r\n       */},{key:'_checkMQ',value:function _checkMQ(){var tooSmall=!Foundation.MediaQuery.atLeast(this.options.equalizeOn);if(tooSmall){if(this.isOn){this._pauseEvents();this.$watched.css('height','auto');}}else{if(!this.isOn){this._events();}}return tooSmall;}/**\r\n       * A noop version for the plugin\r\n       * @private\r\n       */},{key:'_killswitch',value:function _killswitch(){return;}/**\r\n       * Calls necessary functions to update Equalizer upon DOM change\r\n       * @private\r\n       */},{key:'_reflow',value:function _reflow(){if(!this.options.equalizeOnStack){if(this._isStacked()){this.$watched.css('height','auto');return false;}}if(this.options.equalizeByRow){this.getHeightsByRow(this.applyHeightByRow.bind(this));}else{this.getHeights(this.applyHeight.bind(this));}}/**\r\n       * Manually determines if the first 2 elements are *NOT* stacked.\r\n       * @private\r\n       */},{key:'_isStacked',value:function _isStacked(){return this.$watched[0].offsetTop!==this.$watched[1].offsetTop;}/**\r\n       * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\r\n       * @param {Function} cb - A non-optional callback to return the heights array to.\r\n       * @returns {Array} heights - An array of heights of children within Equalizer container\r\n       */},{key:'getHeights',value:function getHeights(cb){var heights=[];for(var i=0,len=this.$watched.length;i<len;i++){this.$watched[i].style.height='auto';heights.push(this.$watched[i].offsetHeight);}cb(heights);}/**\r\n       * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\r\n       * @param {Function} cb - A non-optional callback to return the heights array to.\r\n       * @returns {Array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\r\n       */},{key:'getHeightsByRow',value:function getHeightsByRow(cb){var lastElTopOffset=this.$watched.first().offset().top,groups=[],group=0;//group by Row\ngroups[group]=[];for(var i=0,len=this.$watched.length;i<len;i++){this.$watched[i].style.height='auto';//maybe could use this.$watched[i].offsetTop\nvar elOffsetTop=$(this.$watched[i]).offset().top;if(elOffsetTop!=lastElTopOffset){group++;groups[group]=[];lastElTopOffset=elOffsetTop;}groups[group].push([this.$watched[i],this.$watched[i].offsetHeight]);}for(var j=0,ln=groups.length;j<ln;j++){var heights=$(groups[j]).map(function(){return this[1];}).get();var max=Math.max.apply(null,heights);groups[j].push(max);}cb(groups);}/**\r\n       * Changes the CSS height property of each child in an Equalizer parent to match the tallest\r\n       * @param {array} heights - An array of heights of children within Equalizer container\r\n       * @fires Equalizer#preequalized\r\n       * @fires Equalizer#postequalized\r\n       */},{key:'applyHeight',value:function applyHeight(heights){var max=Math.max.apply(null,heights);/**\r\n         * Fires before the heights are applied\r\n         * @event Equalizer#preequalized\r\n         */this.$element.trigger('preequalized.zf.equalizer');this.$watched.css('height',max);/**\r\n         * Fires when the heights have been applied\r\n         * @event Equalizer#postequalized\r\n         */this.$element.trigger('postequalized.zf.equalizer');}/**\r\n       * Changes the CSS height property of each child in an Equalizer parent to match the tallest by row\r\n       * @param {array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\r\n       * @fires Equalizer#preequalized\r\n       * @fires Equalizer#preequalizedRow\r\n       * @fires Equalizer#postequalizedRow\r\n       * @fires Equalizer#postequalized\r\n       */},{key:'applyHeightByRow',value:function applyHeightByRow(groups){/**\r\n         * Fires before the heights are applied\r\n         */this.$element.trigger('preequalized.zf.equalizer');for(var i=0,len=groups.length;i<len;i++){var groupsILength=groups[i].length,max=groups[i][groupsILength-1];if(groupsILength<=2){$(groups[i][0][0]).css({'height':'auto'});continue;}/**\r\n            * Fires before the heights per row are applied\r\n            * @event Equalizer#preequalizedRow\r\n            */this.$element.trigger('preequalizedrow.zf.equalizer');for(var j=0,lenJ=groupsILength-1;j<lenJ;j++){$(groups[i][j][0]).css({'height':max});}/**\r\n            * Fires when the heights per row have been applied\r\n            * @event Equalizer#postequalizedRow\r\n            */this.$element.trigger('postequalizedrow.zf.equalizer');}/**\r\n         * Fires when the heights have been applied\r\n         */this.$element.trigger('postequalized.zf.equalizer');}/**\r\n       * Destroys an instance of Equalizer.\r\n       * @function\r\n       */},{key:'destroy',value:function destroy(){this._pauseEvents();this.$watched.css('height','auto');Foundation.unregisterPlugin(this);}}]);return Equalizer;}();/**\r\n   * Default settings for plugin\r\n   */Equalizer.defaults={/**\r\n     * Enable height equalization when stacked on smaller screens.\r\n     * @option\r\n     * @example true\r\n     */equalizeOnStack:true,/**\r\n     * Enable height equalization row by row.\r\n     * @option\r\n     * @example false\r\n     */equalizeByRow:false,/**\r\n     * String representing the minimum breakpoint size the plugin should equalize heights on.\r\n     * @option\r\n     * @example 'medium'\r\n     */equalizeOn:''};// Window exports\nFoundation.plugin(Equalizer,'Equalizer');}(jQuery);'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}!function($){/**\r\n   * Interchange module.\r\n   * @module foundation.interchange\r\n   * @requires foundation.util.mediaQuery\r\n   * @requires foundation.util.timerAndImageLoader\r\n   */var Interchange=function(){/**\r\n     * Creates a new instance of Interchange.\r\n     * @class\r\n     * @fires Interchange#init\r\n     * @param {Object} element - jQuery object to add the trigger to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */function Interchange(element,options){_classCallCheck(this,Interchange);this.$element=element;this.options=$.extend({},Interchange.defaults,options);this.rules=[];this.currentPath='';this._init();this._events();Foundation.registerPlugin(this,'Interchange');}/**\r\n     * Initializes the Interchange plugin and calls functions to get interchange functioning on load.\r\n     * @function\r\n     * @private\r\n     */_createClass(Interchange,[{key:'_init',value:function _init(){this._addBreakpoints();this._generateRules();this._reflow();}/**\r\n       * Initializes events for Interchange.\r\n       * @function\r\n       * @private\r\n       */},{key:'_events',value:function _events(){$(window).on('resize.zf.interchange',Foundation.util.throttle(this._reflow.bind(this),50));}/**\r\n       * Calls necessary functions to update Interchange upon DOM change\r\n       * @function\r\n       * @private\r\n       */},{key:'_reflow',value:function _reflow(){var match;// Iterate through each rule, but only save the last match\nfor(var i in this.rules){var rule=this.rules[i];if(window.matchMedia(rule.query).matches){match=rule;}}if(match){this.replace(match.path);}}/**\r\n       * Gets the Foundation breakpoints and adds them to the Interchange.SPECIAL_QUERIES object.\r\n       * @function\r\n       * @private\r\n       */},{key:'_addBreakpoints',value:function _addBreakpoints(){for(var i in Foundation.MediaQuery.queries){var query=Foundation.MediaQuery.queries[i];Interchange.SPECIAL_QUERIES[query.name]=query.value;}}/**\r\n       * Checks the Interchange element for the provided media query + content pairings\r\n       * @function\r\n       * @private\r\n       * @param {Object} element - jQuery object that is an Interchange instance\r\n       * @returns {Array} scenarios - Array of objects that have 'mq' and 'path' keys with corresponding keys\r\n       */},{key:'_generateRules',value:function _generateRules(element){var rulesList=[];var rules;if(this.options.rules){rules=this.options.rules;}else{rules=this.$element.data('interchange').match(/\\[.*?\\]/g);}for(var i in rules){var rule=rules[i].slice(1,-1).split(', ');var path=rule.slice(0,-1).join('');var query=rule[rule.length-1];if(Interchange.SPECIAL_QUERIES[query]){query=Interchange.SPECIAL_QUERIES[query];}rulesList.push({path:path,query:query});}this.rules=rulesList;}/**\r\n       * Update the `src` property of an image, or change the HTML of a container, to the specified path.\r\n       * @function\r\n       * @param {String} path - Path to the image or HTML partial.\r\n       * @fires Interchange#replaced\r\n       */},{key:'replace',value:function replace(path){if(this.currentPath===path)return;var _this=this,trigger='replaced.zf.interchange';// Replacing images\nif(this.$element[0].nodeName==='IMG'){this.$element.attr('src',path).load(function(){_this.currentPath=path;}).trigger(trigger);}// Replacing background images\nelse if(path.match(/\\.(gif|jpg|jpeg|tiff|png)([?#].*)?/i)){this.$element.css({'background-image':'url('+path+')'}).trigger(trigger);}// Replacing HTML\nelse{$.get(path,function(response){_this.$element.html(response).trigger(trigger);$(response).foundation();_this.currentPath=path;});}/**\r\n         * Fires when content in an Interchange element is done being loaded.\r\n         * @event Interchange#replaced\r\n         */// this.$element.trigger('replaced.zf.interchange');\n}/**\r\n       * Destroys an instance of interchange.\r\n       * @function\r\n       */},{key:'destroy',value:function destroy(){//TODO this.\n}}]);return Interchange;}();/**\r\n   * Default settings for plugin\r\n   */Interchange.defaults={/**\r\n     * Rules to be applied to Interchange elements. Set with the `data-interchange` array notation.\r\n     * @option\r\n     */rules:null};Interchange.SPECIAL_QUERIES={'landscape':'screen and (orientation: landscape)','portrait':'screen and (orientation: portrait)','retina':'only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)'};// Window exports\nFoundation.plugin(Interchange,'Interchange');}(jQuery);'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}!function($){/**\r\n   * Magellan module.\r\n   * @module foundation.magellan\r\n   */var Magellan=function(){/**\r\n     * Creates a new instance of Magellan.\r\n     * @class\r\n     * @fires Magellan#init\r\n     * @param {Object} element - jQuery object to add the trigger to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */function Magellan(element,options){_classCallCheck(this,Magellan);this.$element=element;this.options=$.extend({},Magellan.defaults,this.$element.data(),options);this._init();Foundation.registerPlugin(this,'Magellan');}/**\r\n     * Initializes the Magellan plugin and calls functions to get equalizer functioning on load.\r\n     * @private\r\n     */_createClass(Magellan,[{key:'_init',value:function _init(){var id=this.$element[0].id||Foundation.GetYoDigits(6,'magellan');var _this=this;this.$targets=$('[data-magellan-target]');this.$links=this.$element.find('a');this.$element.attr({'data-resize':id,'data-scroll':id,'id':id});this.$active=$();this.scrollPos=parseInt(window.pageYOffset,10);this._events();}/**\r\n       * Calculates an array of pixel values that are the demarcation lines between locations on the page.\r\n       * Can be invoked if new elements are added or the size of a location changes.\r\n       * @function\r\n       */},{key:'calcPoints',value:function calcPoints(){var _this=this,body=document.body,html=document.documentElement;this.points=[];this.winHeight=Math.round(Math.max(window.innerHeight,html.clientHeight));this.docHeight=Math.round(Math.max(body.scrollHeight,body.offsetHeight,html.clientHeight,html.scrollHeight,html.offsetHeight));this.$targets.each(function(){var $tar=$(this),pt=Math.round($tar.offset().top-_this.options.threshold);$tar.targetPoint=pt;_this.points.push(pt);});}/**\r\n       * Initializes events for Magellan.\r\n       * @private\r\n       */},{key:'_events',value:function _events(){var _this=this,$body=$('html, body'),opts={duration:_this.options.animationDuration,easing:_this.options.animationEasing};$(window).one('load',function(){if(_this.options.deepLinking){if(location.hash){_this.scrollToLoc(location.hash);}}_this.calcPoints();_this._updateActive();});this.$element.on({'resizeme.zf.trigger':this.reflow.bind(this),'scrollme.zf.trigger':this._updateActive.bind(this)}).on('click.zf.magellan','a[href^=\"#\"]',function(e){e.preventDefault();var arrival=this.getAttribute('href');_this.scrollToLoc(arrival);});}/**\r\n       * Function to scroll to a given location on the page.\r\n       * @param {String} loc - a properly formatted jQuery id selector. Example: '#foo'\r\n       * @function\r\n       */},{key:'scrollToLoc',value:function scrollToLoc(loc){var scrollPos=Math.round($(loc).offset().top-this.options.threshold/2-this.options.barOffset);$('html, body').stop(true).animate({scrollTop:scrollPos},this.options.animationDuration,this.options.animationEasing);}/**\r\n       * Calls necessary functions to update Magellan upon DOM change\r\n       * @function\r\n       */},{key:'reflow',value:function reflow(){this.calcPoints();this._updateActive();}/**\r\n       * Updates the visibility of an active location link, and updates the url hash for the page, if deepLinking enabled.\r\n       * @private\r\n       * @function\r\n       * @fires Magellan#update\r\n       */},{key:'_updateActive',value:function _updateActive()/*evt, elem, scrollPos*/{var winPos=/*scrollPos ||*/parseInt(window.pageYOffset,10),curIdx;if(winPos+this.winHeight===this.docHeight){curIdx=this.points.length-1;}else if(winPos<this.points[0]){curIdx=0;}else{var isDown=this.scrollPos<winPos,_this=this,curVisible=this.points.filter(function(p,i){return isDown?p<=winPos:p-_this.options.threshold<=winPos;//&& winPos >= _this.points[i -1] - _this.options.threshold;\n});curIdx=curVisible.length?curVisible.length-1:0;}this.$active.removeClass(this.options.activeClass);this.$active=this.$links.eq(curIdx).addClass(this.options.activeClass);if(this.options.deepLinking){var hash=this.$active[0].getAttribute('href');if(window.history.pushState){window.history.pushState(null,null,hash);}else{window.location.hash=hash;}}this.scrollPos=winPos;/**\r\n         * Fires when magellan is finished updating to the new active element.\r\n         * @event Magellan#update\r\n         */this.$element.trigger('update.zf.magellan',[this.$active]);}/**\r\n       * Destroys an instance of Magellan and resets the url of the window.\r\n       * @function\r\n       */},{key:'destroy',value:function destroy(){this.$element.off('.zf.trigger .zf.magellan').find('.'+this.options.activeClass).removeClass(this.options.activeClass);if(this.options.deepLinking){var hash=this.$active[0].getAttribute('href');window.location.hash.replace(hash,'');}Foundation.unregisterPlugin(this);}}]);return Magellan;}();/**\r\n   * Default settings for plugin\r\n   */Magellan.defaults={/**\r\n     * Amount of time, in ms, the animated scrolling should take between locations.\r\n     * @option\r\n     * @example 500\r\n     */animationDuration:500,/**\r\n     * Animation style to use when scrolling between locations.\r\n     * @option\r\n     * @example 'ease-in-out'\r\n     */animationEasing:'linear',/**\r\n     * Number of pixels to use as a marker for location changes.\r\n     * @option\r\n     * @example 50\r\n     */threshold:50,/**\r\n     * Class applied to the active locations link on the magellan container.\r\n     * @option\r\n     * @example 'active'\r\n     */activeClass:'active',/**\r\n     * Allows the script to manipulate the url of the current page, and if supported, alter the history.\r\n     * @option\r\n     * @example true\r\n     */deepLinking:false,/**\r\n     * Number of pixels to offset the scroll of the page on item click if using a sticky nav bar.\r\n     * @option\r\n     * @example 25\r\n     */barOffset:0};// Window exports\nFoundation.plugin(Magellan,'Magellan');}(jQuery);'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}!function($){/**\r\n   * OffCanvas module.\r\n   * @module foundation.offcanvas\r\n   * @requires foundation.util.mediaQuery\r\n   * @requires foundation.util.triggers\r\n   * @requires foundation.util.motion\r\n   */var OffCanvas=function(){/**\r\n     * Creates a new instance of an off-canvas wrapper.\r\n     * @class\r\n     * @fires OffCanvas#init\r\n     * @param {Object} element - jQuery object to initialize.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */function OffCanvas(element,options){_classCallCheck(this,OffCanvas);this.$element=element;this.options=$.extend({},OffCanvas.defaults,this.$element.data(),options);this.$lastTrigger=$();this._init();this._events();Foundation.registerPlugin(this,'OffCanvas');}/**\r\n     * Initializes the off-canvas wrapper by adding the exit overlay (if needed).\r\n     * @function\r\n     * @private\r\n     */_createClass(OffCanvas,[{key:'_init',value:function _init(){var id=this.$element.attr('id');this.$element.attr('aria-hidden','true');// Find triggers that affect this element and add aria-expanded to them\n$(document).find('[data-open=\"'+id+'\"], [data-close=\"'+id+'\"], [data-toggle=\"'+id+'\"]').attr('aria-expanded','false').attr('aria-controls',id);// Add a close trigger over the body if necessary\nif(this.options.closeOnClick){if($('.js-off-canvas-exit').length){this.$exiter=$('.js-off-canvas-exit');}else{var exiter=document.createElement('div');exiter.setAttribute('class','js-off-canvas-exit');$('[data-off-canvas-content]').append(exiter);this.$exiter=$(exiter);}}this.options.isRevealed=this.options.isRevealed||new RegExp(this.options.revealClass,'g').test(this.$element[0].className);if(this.options.isRevealed){this.options.revealOn=this.options.revealOn||this.$element[0].className.match(/(reveal-for-medium|reveal-for-large)/g)[0].split('-')[2];this._setMQChecker();}if(!this.options.transitionTime){this.options.transitionTime=parseFloat(window.getComputedStyle($('[data-off-canvas-wrapper]')[0]).transitionDuration)*1000;}}/**\r\n       * Adds event handlers to the off-canvas wrapper and the exit overlay.\r\n       * @function\r\n       * @private\r\n       */},{key:'_events',value:function _events(){this.$element.off('.zf.trigger .zf.offcanvas').on({'open.zf.trigger':this.open.bind(this),'close.zf.trigger':this.close.bind(this),'toggle.zf.trigger':this.toggle.bind(this),'keydown.zf.offcanvas':this._handleKeyboard.bind(this)});if(this.options.closeOnClick&&this.$exiter.length){this.$exiter.on({'click.zf.offcanvas':this.close.bind(this)});}}/**\r\n       * Applies event listener for elements that will reveal at certain breakpoints.\r\n       * @private\r\n       */},{key:'_setMQChecker',value:function _setMQChecker(){var _this=this;$(window).on('changed.zf.mediaquery',function(){if(Foundation.MediaQuery.atLeast(_this.options.revealOn)){_this.reveal(true);}else{_this.reveal(false);}}).one('load.zf.offcanvas',function(){if(Foundation.MediaQuery.atLeast(_this.options.revealOn)){_this.reveal(true);}});}/**\r\n       * Handles the revealing/hiding the off-canvas at breakpoints, not the same as open.\r\n       * @param {Boolean} isRevealed - true if element should be revealed.\r\n       * @function\r\n       */},{key:'reveal',value:function reveal(isRevealed){var $closer=this.$element.find('[data-close]');if(isRevealed){this.close();this.isRevealed=true;// if (!this.options.forceTop) {\n//   var scrollPos = parseInt(window.pageYOffset);\n//   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n// }\n// if (this.options.isSticky) { this._stick(); }\nthis.$element.off('open.zf.trigger toggle.zf.trigger');if($closer.length){$closer.hide();}}else{this.isRevealed=false;// if (this.options.isSticky || !this.options.forceTop) {\n//   this.$element[0].style.transform = '';\n//   $(window).off('scroll.zf.offcanvas');\n// }\nthis.$element.on({'open.zf.trigger':this.open.bind(this),'toggle.zf.trigger':this.toggle.bind(this)});if($closer.length){$closer.show();}}}/**\r\n       * Opens the off-canvas menu.\r\n       * @function\r\n       * @param {Object} event - Event object passed from listener.\r\n       * @param {jQuery} trigger - element that triggered the off-canvas to open.\r\n       * @fires OffCanvas#opened\r\n       */},{key:'open',value:function open(event,trigger){if(this.$element.hasClass('is-open')||this.isRevealed){return;}var _this=this,$body=$(document.body);if(this.options.forceTop){$('body').scrollTop(0);}// window.pageYOffset = 0;\n// if (!this.options.forceTop) {\n//   var scrollPos = parseInt(window.pageYOffset);\n//   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n//   if (this.$exiter.length) {\n//     this.$exiter[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n//   }\n// }\n/**\r\n         * Fires when the off-canvas menu opens.\r\n         * @event OffCanvas#opened\r\n         */Foundation.Move(this.options.transitionTime,this.$element,function(){$('[data-off-canvas-wrapper]').addClass('is-off-canvas-open is-open-'+_this.options.position);_this.$element.addClass('is-open');// if (_this.options.isSticky) {\n//   _this._stick();\n// }\n});this.$element.attr('aria-hidden','false').trigger('opened.zf.offcanvas');if(this.options.closeOnClick){this.$exiter.addClass('is-visible');}if(trigger){this.$lastTrigger=trigger.attr('aria-expanded','true');}if(this.options.autoFocus){this.$element.one(Foundation.transitionend(this.$element),function(){_this.$element.find('a, button').eq(0).focus();});}if(this.options.trapFocus){$('[data-off-canvas-content]').attr('tabindex','-1');this._trapFocus();}}/**\r\n       * Traps focus within the offcanvas on open.\r\n       * @private\r\n       */},{key:'_trapFocus',value:function _trapFocus(){var focusable=Foundation.Keyboard.findFocusable(this.$element),first=focusable.eq(0),last=focusable.eq(-1);focusable.off('.zf.offcanvas').on('keydown.zf.offcanvas',function(e){if(e.which===9||e.keycode===9){if(e.target===last[0]&&!e.shiftKey){e.preventDefault();first.focus();}if(e.target===first[0]&&e.shiftKey){e.preventDefault();last.focus();}}});}/**\r\n       * Allows the offcanvas to appear sticky utilizing translate properties.\r\n       * @private\r\n       */// OffCanvas.prototype._stick = function() {\n//   var elStyle = this.$element[0].style;\n//\n//   if (this.options.closeOnClick) {\n//     var exitStyle = this.$exiter[0].style;\n//   }\n//\n//   $(window).on('scroll.zf.offcanvas', function(e) {\n//     console.log(e);\n//     var pageY = window.pageYOffset;\n//     elStyle.transform = 'translate(0,' + pageY + 'px)';\n//     if (exitStyle !== undefined) { exitStyle.transform = 'translate(0,' + pageY + 'px)'; }\n//   });\n//   // this.$element.trigger('stuck.zf.offcanvas');\n// };\n/**\r\n       * Closes the off-canvas menu.\r\n       * @function\r\n       * @param {Function} cb - optional cb to fire after closure.\r\n       * @fires OffCanvas#closed\r\n       */},{key:'close',value:function close(cb){if(!this.$element.hasClass('is-open')||this.isRevealed){return;}var _this=this;//  Foundation.Move(this.options.transitionTime, this.$element, function() {\n$('[data-off-canvas-wrapper]').removeClass('is-off-canvas-open is-open-'+_this.options.position);_this.$element.removeClass('is-open');// Foundation._reflow();\n// });\nthis.$element.attr('aria-hidden','true')/**\r\n         * Fires when the off-canvas menu opens.\r\n         * @event OffCanvas#closed\r\n         */.trigger('closed.zf.offcanvas');// if (_this.options.isSticky || !_this.options.forceTop) {\n//   setTimeout(function() {\n//     _this.$element[0].style.transform = '';\n//     $(window).off('scroll.zf.offcanvas');\n//   }, this.options.transitionTime);\n// }\nif(this.options.closeOnClick){this.$exiter.removeClass('is-visible');}this.$lastTrigger.attr('aria-expanded','false');if(this.options.trapFocus){$('[data-off-canvas-content]').removeAttr('tabindex');}}/**\r\n       * Toggles the off-canvas menu open or closed.\r\n       * @function\r\n       * @param {Object} event - Event object passed from listener.\r\n       * @param {jQuery} trigger - element that triggered the off-canvas to open.\r\n       */},{key:'toggle',value:function toggle(event,trigger){if(this.$element.hasClass('is-open')){this.close(event,trigger);}else{this.open(event,trigger);}}/**\r\n       * Handles keyboard input when detected. When the escape key is pressed, the off-canvas menu closes, and focus is restored to the element that opened the menu.\r\n       * @function\r\n       * @private\r\n       */},{key:'_handleKeyboard',value:function _handleKeyboard(event){if(event.which!==27)return;event.stopPropagation();event.preventDefault();this.close();this.$lastTrigger.focus();}/**\r\n       * Destroys the offcanvas plugin.\r\n       * @function\r\n       */},{key:'destroy',value:function destroy(){this.close();this.$element.off('.zf.trigger .zf.offcanvas');this.$exiter.off('.zf.offcanvas');Foundation.unregisterPlugin(this);}}]);return OffCanvas;}();OffCanvas.defaults={/**\r\n     * Allow the user to click outside of the menu to close it.\r\n     * @option\r\n     * @example true\r\n     */closeOnClick:true,/**\r\n     * Amount of time in ms the open and close transition requires. If none selected, pulls from body style.\r\n     * @option\r\n     * @example 500\r\n     */transitionTime:0,/**\r\n     * Direction the offcanvas opens from. Determines class applied to body.\r\n     * @option\r\n     * @example left\r\n     */position:'left',/**\r\n     * Force the page to scroll to top on open.\r\n     * @option\r\n     * @example true\r\n     */forceTop:true,/**\r\n     * Allow the offcanvas to remain open for certain breakpoints.\r\n     * @option\r\n     * @example false\r\n     */isRevealed:false,/**\r\n     * Breakpoint at which to reveal. JS will use a RegExp to target standard classes, if changing classnames, pass your class with the `revealClass` option.\r\n     * @option\r\n     * @example reveal-for-large\r\n     */revealOn:null,/**\r\n     * Force focus to the offcanvas on open. If true, will focus the opening trigger on close.\r\n     * @option\r\n     * @example true\r\n     */autoFocus:true,/**\r\n     * Class used to force an offcanvas to remain open. Foundation defaults for this are `reveal-for-large` & `reveal-for-medium`.\r\n     * @option\r\n     * TODO improve the regex testing for this.\r\n     * @example reveal-for-large\r\n     */revealClass:'reveal-for-',/**\r\n     * Triggers optional focus trapping when opening an offcanvas. Sets tabindex of [data-off-canvas-content] to -1 for accessibility purposes.\r\n     * @option\r\n     * @example true\r\n     */trapFocus:false};// Window exports\nFoundation.plugin(OffCanvas,'OffCanvas');}(jQuery);'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}!function($){/**\r\n   * Orbit module.\r\n   * @module foundation.orbit\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.motion\r\n   * @requires foundation.util.timerAndImageLoader\r\n   * @requires foundation.util.touch\r\n   */var Orbit=function(){/**\r\n    * Creates a new instance of an orbit carousel.\r\n    * @class\r\n    * @param {jQuery} element - jQuery object to make into an Orbit Carousel.\r\n    * @param {Object} options - Overrides to the default plugin settings.\r\n    */function Orbit(element,options){_classCallCheck(this,Orbit);this.$element=element;this.options=$.extend({},Orbit.defaults,this.$element.data(),options);this._init();Foundation.registerPlugin(this,'Orbit');Foundation.Keyboard.register('Orbit',{'ltr':{'ARROW_RIGHT':'next','ARROW_LEFT':'previous'},'rtl':{'ARROW_LEFT':'next','ARROW_RIGHT':'previous'}});}/**\r\n    * Initializes the plugin by creating jQuery collections, setting attributes, and starting the animation.\r\n    * @function\r\n    * @private\r\n    */_createClass(Orbit,[{key:'_init',value:function _init(){this.$wrapper=this.$element.find('.'+this.options.containerClass);this.$slides=this.$element.find('.'+this.options.slideClass);var $images=this.$element.find('img'),initActive=this.$slides.filter('.is-active');if(!initActive.length){this.$slides.eq(0).addClass('is-active');}if(!this.options.useMUI){this.$slides.addClass('no-motionui');}if($images.length){Foundation.onImagesLoaded($images,this._prepareForOrbit.bind(this));}else{this._prepareForOrbit();//hehe\n}if(this.options.bullets){this._loadBullets();}this._events();if(this.options.autoPlay&&this.$slides.length>1){this.geoSync();}if(this.options.accessible){// allow wrapper to be focusable to enable arrow navigation\nthis.$wrapper.attr('tabindex',0);}}/**\r\n      * Creates a jQuery collection of bullets, if they are being used.\r\n      * @function\r\n      * @private\r\n      */},{key:'_loadBullets',value:function _loadBullets(){this.$bullets=this.$element.find('.'+this.options.boxOfBullets).find('button');}/**\r\n      * Sets a `timer` object on the orbit, and starts the counter for the next slide.\r\n      * @function\r\n      */},{key:'geoSync',value:function geoSync(){var _this=this;this.timer=new Foundation.Timer(this.$element,{duration:this.options.timerDelay,infinite:false},function(){_this.changeSlide(true);});this.timer.start();}/**\r\n      * Sets wrapper and slide heights for the orbit.\r\n      * @function\r\n      * @private\r\n      */},{key:'_prepareForOrbit',value:function _prepareForOrbit(){var _this=this;this._setWrapperHeight(function(max){_this._setSlideHeight(max);});}/**\r\n      * Calulates the height of each slide in the collection, and uses the tallest one for the wrapper height.\r\n      * @function\r\n      * @private\r\n      * @param {Function} cb - a callback function to fire when complete.\r\n      */},{key:'_setWrapperHeight',value:function _setWrapperHeight(cb){//rewrite this to `for` loop\nvar max=0,temp,counter=0;this.$slides.each(function(){temp=this.getBoundingClientRect().height;$(this).attr('data-slide',counter);if(counter){//if not the first slide, set css position and display property\n$(this).css({'position':'relative','display':'none'});}max=temp>max?temp:max;counter++;});if(counter===this.$slides.length){this.$wrapper.css({'height':max});//only change the wrapper height property once.\ncb(max);//fire callback with max height dimension.\n}}/**\r\n      * Sets the max-height of each slide.\r\n      * @function\r\n      * @private\r\n      */},{key:'_setSlideHeight',value:function _setSlideHeight(height){this.$slides.each(function(){$(this).css('max-height',height);});}/**\r\n      * Adds event listeners to basically everything within the element.\r\n      * @function\r\n      * @private\r\n      */},{key:'_events',value:function _events(){var _this=this;//***************************************\n//**Now using custom event - thanks to:**\n//**      Yohai Ararat of Toronto      **\n//***************************************\nif(this.$slides.length>1){if(this.options.swipe){this.$slides.off('swipeleft.zf.orbit swiperight.zf.orbit').on('swipeleft.zf.orbit',function(e){e.preventDefault();_this.changeSlide(true);}).on('swiperight.zf.orbit',function(e){e.preventDefault();_this.changeSlide(false);});}//***************************************\nif(this.options.autoPlay){this.$slides.on('click.zf.orbit',function(){_this.$element.data('clickedOn',_this.$element.data('clickedOn')?false:true);_this.timer[_this.$element.data('clickedOn')?'pause':'start']();});if(this.options.pauseOnHover){this.$element.on('mouseenter.zf.orbit',function(){_this.timer.pause();}).on('mouseleave.zf.orbit',function(){if(!_this.$element.data('clickedOn')){_this.timer.start();}});}}if(this.options.navButtons){var $controls=this.$element.find('.'+this.options.nextClass+', .'+this.options.prevClass);$controls.attr('tabindex',0)//also need to handle enter/return and spacebar key presses\n.on('click.zf.orbit touchend.zf.orbit',function(){_this.changeSlide($(this).hasClass(_this.options.nextClass));});}if(this.options.bullets){this.$bullets.on('click.zf.orbit touchend.zf.orbit',function(){if(/is-active/g.test(this.className)){return false;}//if this is active, kick out of function.\nvar idx=$(this).data('slide'),ltr=idx>_this.$slides.filter('.is-active').data('slide'),$slide=_this.$slides.eq(idx);_this.changeSlide(ltr,$slide,idx);});}this.$wrapper.add(this.$bullets).on('keydown.zf.orbit',function(e){// handle keyboard event with keyboard util\nFoundation.Keyboard.handleKey(e,'Orbit',{next:function next(){_this.changeSlide(true);},previous:function previous(){_this.changeSlide(false);},handled:function handled(){// if bullet is focused, make sure focus moves\nif($(e.target).is(_this.$bullets)){_this.$bullets.filter('.is-active').focus();}}});});}}/**\r\n      * Changes the current slide to a new one.\r\n      * @function\r\n      * @param {Boolean} isLTR - flag if the slide should move left to right.\r\n      * @param {jQuery} chosenSlide - the jQuery element of the slide to show next, if one is selected.\r\n      * @param {Number} idx - the index of the new slide in its collection, if one chosen.\r\n      * @fires Orbit#slidechange\r\n      */},{key:'changeSlide',value:function changeSlide(isLTR,chosenSlide,idx){var $curSlide=this.$slides.filter('.is-active').eq(0);if(/mui/g.test($curSlide[0].className)){return false;}//if the slide is currently animating, kick out of the function\nvar $firstSlide=this.$slides.first(),$lastSlide=this.$slides.last(),dirIn=isLTR?'Right':'Left',dirOut=isLTR?'Left':'Right',_this=this,$newSlide;if(!chosenSlide){//most of the time, this will be auto played or clicked from the navButtons.\n$newSlide=isLTR?//if wrapping enabled, check to see if there is a `next` or `prev` sibling, if not, select the first or last slide to fill in. if wrapping not enabled, attempt to select `next` or `prev`, if there's nothing there, the function will kick out on next step. CRAZY NESTED TERNARIES!!!!!\nthis.options.infiniteWrap?$curSlide.next('.'+this.options.slideClass).length?$curSlide.next('.'+this.options.slideClass):$firstSlide:$curSlide.next('.'+this.options.slideClass)://pick next slide if moving left to right\nthis.options.infiniteWrap?$curSlide.prev('.'+this.options.slideClass).length?$curSlide.prev('.'+this.options.slideClass):$lastSlide:$curSlide.prev('.'+this.options.slideClass);//pick prev slide if moving right to left\n}else{$newSlide=chosenSlide;}if($newSlide.length){if(this.options.bullets){idx=idx||this.$slides.index($newSlide);//grab index to update bullets\nthis._updateBullets(idx);}if(this.options.useMUI){Foundation.Motion.animateIn($newSlide.addClass('is-active').css({'position':'absolute','top':0}),this.options['animInFrom'+dirIn],function(){$newSlide.css({'position':'relative','display':'block'}).attr('aria-live','polite');});Foundation.Motion.animateOut($curSlide.removeClass('is-active'),this.options['animOutTo'+dirOut],function(){$curSlide.removeAttr('aria-live');if(_this.options.autoPlay&&!_this.timer.isPaused){_this.timer.restart();}//do stuff?\n});}else{$curSlide.removeClass('is-active is-in').removeAttr('aria-live').hide();$newSlide.addClass('is-active is-in').attr('aria-live','polite').show();if(this.options.autoPlay&&!this.timer.isPaused){this.timer.restart();}}/**\r\n          * Triggers when the slide has finished animating in.\r\n          * @event Orbit#slidechange\r\n          */this.$element.trigger('slidechange.zf.orbit',[$newSlide]);}}/**\r\n      * Updates the active state of the bullets, if displayed.\r\n      * @function\r\n      * @private\r\n      * @param {Number} idx - the index of the current slide.\r\n      */},{key:'_updateBullets',value:function _updateBullets(idx){var $oldBullet=this.$element.find('.'+this.options.boxOfBullets).find('.is-active').removeClass('is-active').blur(),span=$oldBullet.find('span:last').detach(),$newBullet=this.$bullets.eq(idx).addClass('is-active').append(span);}/**\r\n      * Destroys the carousel and hides the element.\r\n      * @function\r\n      */},{key:'destroy',value:function destroy(){this.$element.off('.zf.orbit').find('*').off('.zf.orbit').end().hide();Foundation.unregisterPlugin(this);}}]);return Orbit;}();Orbit.defaults={/**\r\n    * Tells the JS to look for and loadBullets.\r\n    * @option\r\n    * @example true\r\n    */bullets:true,/**\r\n    * Tells the JS to apply event listeners to nav buttons\r\n    * @option\r\n    * @example true\r\n    */navButtons:true,/**\r\n    * motion-ui animation class to apply\r\n    * @option\r\n    * @example 'slide-in-right'\r\n    */animInFromRight:'slide-in-right',/**\r\n    * motion-ui animation class to apply\r\n    * @option\r\n    * @example 'slide-out-right'\r\n    */animOutToRight:'slide-out-right',/**\r\n    * motion-ui animation class to apply\r\n    * @option\r\n    * @example 'slide-in-left'\r\n    *\r\n    */animInFromLeft:'slide-in-left',/**\r\n    * motion-ui animation class to apply\r\n    * @option\r\n    * @example 'slide-out-left'\r\n    */animOutToLeft:'slide-out-left',/**\r\n    * Allows Orbit to automatically animate on page load.\r\n    * @option\r\n    * @example true\r\n    */autoPlay:true,/**\r\n    * Amount of time, in ms, between slide transitions\r\n    * @option\r\n    * @example 5000\r\n    */timerDelay:5000,/**\r\n    * Allows Orbit to infinitely loop through the slides\r\n    * @option\r\n    * @example true\r\n    */infiniteWrap:true,/**\r\n    * Allows the Orbit slides to bind to swipe events for mobile, requires an additional util library\r\n    * @option\r\n    * @example true\r\n    */swipe:true,/**\r\n    * Allows the timing function to pause animation on hover.\r\n    * @option\r\n    * @example true\r\n    */pauseOnHover:true,/**\r\n    * Allows Orbit to bind keyboard events to the slider, to animate frames with arrow keys\r\n    * @option\r\n    * @example true\r\n    */accessible:true,/**\r\n    * Class applied to the container of Orbit\r\n    * @option\r\n    * @example 'orbit-container'\r\n    */containerClass:'orbit-container',/**\r\n    * Class applied to individual slides.\r\n    * @option\r\n    * @example 'orbit-slide'\r\n    */slideClass:'orbit-slide',/**\r\n    * Class applied to the bullet container. You're welcome.\r\n    * @option\r\n    * @example 'orbit-bullets'\r\n    */boxOfBullets:'orbit-bullets',/**\r\n    * Class applied to the `next` navigation button.\r\n    * @option\r\n    * @example 'orbit-next'\r\n    */nextClass:'orbit-next',/**\r\n    * Class applied to the `previous` navigation button.\r\n    * @option\r\n    * @example 'orbit-previous'\r\n    */prevClass:'orbit-previous',/**\r\n    * Boolean to flag the js to use motion ui classes or not. Default to true for backwards compatability.\r\n    * @option\r\n    * @example true\r\n    */useMUI:true};// Window exports\nFoundation.plugin(Orbit,'Orbit');}(jQuery);'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}!function($){/**\r\n   * ResponsiveMenu module.\r\n   * @module foundation.responsiveMenu\r\n   * @requires foundation.util.triggers\r\n   * @requires foundation.util.mediaQuery\r\n   * @requires foundation.util.accordionMenu\r\n   * @requires foundation.util.drilldown\r\n   * @requires foundation.util.dropdown-menu\r\n   */var ResponsiveMenu=function(){/**\r\n     * Creates a new instance of a responsive menu.\r\n     * @class\r\n     * @fires ResponsiveMenu#init\r\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */function ResponsiveMenu(element,options){_classCallCheck(this,ResponsiveMenu);this.$element=$(element);this.rules=this.$element.data('responsive-menu');this.currentMq=null;this.currentPlugin=null;this._init();this._events();Foundation.registerPlugin(this,'ResponsiveMenu');}/**\r\n     * Initializes the Menu by parsing the classes from the 'data-ResponsiveMenu' attribute on the element.\r\n     * @function\r\n     * @private\r\n     */_createClass(ResponsiveMenu,[{key:'_init',value:function _init(){var rulesTree={};// Parse rules from \"classes\" in data attribute\nvar rules=this.rules.split(' ');// Iterate through every rule found\nfor(var i=0;i<rules.length;i++){var rule=rules[i].split('-');var ruleSize=rule.length>1?rule[0]:'small';var rulePlugin=rule.length>1?rule[1]:rule[0];if(MenuPlugins[rulePlugin]!==null){rulesTree[ruleSize]=MenuPlugins[rulePlugin];}}this.rules=rulesTree;if(!$.isEmptyObject(rulesTree)){this._checkMediaQueries();}}/**\r\n       * Initializes events for the Menu.\r\n       * @function\r\n       * @private\r\n       */},{key:'_events',value:function _events(){var _this=this;$(window).on('changed.zf.mediaquery',function(){_this._checkMediaQueries();});// $(window).on('resize.zf.ResponsiveMenu', function() {\n//   _this._checkMediaQueries();\n// });\n}/**\r\n       * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\r\n       * @function\r\n       * @private\r\n       */},{key:'_checkMediaQueries',value:function _checkMediaQueries(){var matchedMq,_this=this;// Iterate through each rule and find the last matching rule\n$.each(this.rules,function(key){if(Foundation.MediaQuery.atLeast(key)){matchedMq=key;}});// No match? No dice\nif(!matchedMq)return;// Plugin already initialized? We good\nif(this.currentPlugin instanceof this.rules[matchedMq].plugin)return;// Remove existing plugin-specific CSS classes\n$.each(MenuPlugins,function(key,value){_this.$element.removeClass(value.cssClass);});// Add the CSS class for the new plugin\nthis.$element.addClass(this.rules[matchedMq].cssClass);// Create an instance of the new plugin\nif(this.currentPlugin)this.currentPlugin.destroy();this.currentPlugin=new this.rules[matchedMq].plugin(this.$element,{});}/**\r\n       * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\r\n       * @function\r\n       */},{key:'destroy',value:function destroy(){this.currentPlugin.destroy();$(window).off('.zf.ResponsiveMenu');Foundation.unregisterPlugin(this);}}]);return ResponsiveMenu;}();ResponsiveMenu.defaults={};// The plugin matches the plugin classes with these plugin instances.\nvar MenuPlugins={dropdown:{cssClass:'dropdown',plugin:Foundation._plugins['dropdown-menu']||null},drilldown:{cssClass:'drilldown',plugin:Foundation._plugins['drilldown']||null},accordion:{cssClass:'accordion-menu',plugin:Foundation._plugins['accordion-menu']||null}};// Window exports\nFoundation.plugin(ResponsiveMenu,'ResponsiveMenu');}(jQuery);'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}!function($){/**\r\n   * ResponsiveToggle module.\r\n   * @module foundation.responsiveToggle\r\n   * @requires foundation.util.mediaQuery\r\n   */var ResponsiveToggle=function(){/**\r\n     * Creates a new instance of Tab Bar.\r\n     * @class\r\n     * @fires ResponsiveToggle#init\r\n     * @param {jQuery} element - jQuery object to attach tab bar functionality to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */function ResponsiveToggle(element,options){_classCallCheck(this,ResponsiveToggle);this.$element=$(element);this.options=$.extend({},ResponsiveToggle.defaults,this.$element.data(),options);this._init();this._events();Foundation.registerPlugin(this,'ResponsiveToggle');}/**\r\n     * Initializes the tab bar by finding the target element, toggling element, and running update().\r\n     * @function\r\n     * @private\r\n     */_createClass(ResponsiveToggle,[{key:'_init',value:function _init(){var targetID=this.$element.data('responsive-toggle');if(!targetID){console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');}this.$targetMenu=$('#'+targetID);this.$toggler=this.$element.find('[data-toggle]');this._update();}/**\r\n       * Adds necessary event handlers for the tab bar to work.\r\n       * @function\r\n       * @private\r\n       */},{key:'_events',value:function _events(){var _this=this;$(window).on('changed.zf.mediaquery',this._update.bind(this));this.$toggler.on('click.zf.responsiveToggle',this.toggleMenu.bind(this));}/**\r\n       * Checks the current media query to determine if the tab bar should be visible or hidden.\r\n       * @function\r\n       * @private\r\n       */},{key:'_update',value:function _update(){// Mobile\nif(!Foundation.MediaQuery.atLeast(this.options.hideFor)){this.$element.show();this.$targetMenu.hide();}// Desktop\nelse{this.$element.hide();this.$targetMenu.show();}}/**\r\n       * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\r\n       * @function\r\n       * @fires ResponsiveToggle#toggled\r\n       */},{key:'toggleMenu',value:function toggleMenu(){if(!Foundation.MediaQuery.atLeast(this.options.hideFor)){this.$targetMenu.toggle(0);/**\r\n           * Fires when the element attached to the tab bar toggles.\r\n           * @event ResponsiveToggle#toggled\r\n           */this.$element.trigger('toggled.zf.responsiveToggle');}}},{key:'destroy',value:function destroy(){//TODO this...\n}}]);return ResponsiveToggle;}();ResponsiveToggle.defaults={/**\r\n     * The breakpoint after which the menu is always shown, and the tab bar is hidden.\r\n     * @option\r\n     * @example 'medium'\r\n     */hideFor:'medium'};// Window exports\nFoundation.plugin(ResponsiveToggle,'ResponsiveToggle');}(jQuery);'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}!function($){/**\r\n   * Reveal module.\r\n   * @module foundation.reveal\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.box\r\n   * @requires foundation.util.triggers\r\n   * @requires foundation.util.mediaQuery\r\n   * @requires foundation.util.motion if using animations\r\n   */var Reveal=function(){/**\r\n     * Creates a new instance of Reveal.\r\n     * @class\r\n     * @param {jQuery} element - jQuery object to use for the modal.\r\n     * @param {Object} options - optional parameters.\r\n     */function Reveal(element,options){_classCallCheck(this,Reveal);this.$element=element;this.options=$.extend({},Reveal.defaults,this.$element.data(),options);this._init();Foundation.registerPlugin(this,'Reveal');Foundation.Keyboard.register('Reveal',{'ENTER':'open','SPACE':'open','ESCAPE':'close','TAB':'tab_forward','SHIFT_TAB':'tab_backward'});}/**\r\n     * Initializes the modal by adding the overlay and close buttons, (if selected).\r\n     * @private\r\n     */_createClass(Reveal,[{key:'_init',value:function _init(){this.id=this.$element.attr('id');this.isActive=false;this.cached={mq:Foundation.MediaQuery.current};this.isiOS=iPhoneSniff();if(this.isiOS){this.$element.addClass('is-ios');}this.$anchor=$('[data-open=\"'+this.id+'\"]').length?$('[data-open=\"'+this.id+'\"]'):$('[data-toggle=\"'+this.id+'\"]');if(this.$anchor.length){var anchorId=this.$anchor[0].id||Foundation.GetYoDigits(6,'reveal');this.$anchor.attr({'aria-controls':this.id,'id':anchorId,'aria-haspopup':true,'tabindex':0});this.$element.attr({'aria-labelledby':anchorId});}if(this.options.fullScreen||this.$element.hasClass('full')){this.options.fullScreen=true;this.options.overlay=false;}if(this.options.overlay&&!this.$overlay){this.$overlay=this._makeOverlay(this.id);}this.$element.attr({'role':'dialog','aria-hidden':true,'data-yeti-box':this.id,'data-resize':this.id});if(this.$overlay){this.$element.detach().appendTo(this.$overlay);}else{this.$element.detach().appendTo($('body'));this.$element.addClass('without-overlay');}this._events();if(this.options.deepLink&&window.location.hash==='#'+this.id){$(window).one('load.zf.reveal',this.open.bind(this));}}/**\r\n       * Creates an overlay div to display behind the modal.\r\n       * @private\r\n       */},{key:'_makeOverlay',value:function _makeOverlay(id){var $overlay=$('<div></div>').addClass('reveal-overlay').attr({'tabindex':-1,'aria-hidden':true}).appendTo('body');return $overlay;}/**\r\n       * Updates position of modal\r\n       * TODO:  Figure out if we actually need to cache these values or if it doesn't matter\r\n       * @private\r\n       */},{key:'_updatePosition',value:function _updatePosition(){var width=this.$element.outerWidth();var outerWidth=$(window).width();var height=this.$element.outerHeight();var outerHeight=$(window).height();var left=parseInt((outerWidth-width)/2,10);var top;if(height>outerHeight){top=parseInt(Math.min(100,outerHeight/10),10);}else{top=parseInt((outerHeight-height)/4,10);}this.$element.css({top:top+'px'});// only worry about left if we don't have an overlay, otherwise we're perfectly in the middle\nif(!this.$overlay){this.$element.css({left:left+'px'});}}/**\r\n       * Adds event handlers for the modal.\r\n       * @private\r\n       */},{key:'_events',value:function _events(){var _this=this;this.$element.on({'open.zf.trigger':this.open.bind(this),'close.zf.trigger':this.close.bind(this),'toggle.zf.trigger':this.toggle.bind(this),'resizeme.zf.trigger':function resizemeZfTrigger(){_this._updatePosition();}});if(this.$anchor.length){this.$anchor.on('keydown.zf.reveal',function(e){if(e.which===13||e.which===32){e.stopPropagation();e.preventDefault();_this.open();}});}if(this.options.closeOnClick&&this.options.overlay){this.$overlay.off('.zf.reveal').on('click.zf.reveal',function(e){if(e.target===_this.$element[0]||$.contains(_this.$element[0],e.target)){return;}_this.close();});}if(this.options.deepLink){$(window).on('popstate.zf.reveal:'+this.id,this._handleState.bind(this));}}/**\r\n       * Handles modal methods on back/forward button clicks or any other event that triggers popstate.\r\n       * @private\r\n       */},{key:'_handleState',value:function _handleState(e){if(window.location.hash==='#'+this.id&&!this.isActive){this.open();}else{this.close();}}/**\r\n       * Opens the modal controlled by `this.$anchor`, and closes all others by default.\r\n       * @function\r\n       * @fires Reveal#closeme\r\n       * @fires Reveal#open\r\n       */},{key:'open',value:function open(){var _this2=this;if(this.options.deepLink){var hash='#'+this.id;if(window.history.pushState){window.history.pushState(null,null,hash);}else{window.location.hash=hash;}}this.isActive=true;// Make elements invisible, but remove display: none so we can get size and positioning\nthis.$element.css({'visibility':'hidden'}).show().scrollTop(0);if(this.options.overlay){this.$overlay.css({'visibility':'hidden'}).show();}this._updatePosition();this.$element.hide().css({'visibility':''});if(this.$overlay){this.$overlay.css({'visibility':''}).hide();}if(!this.options.multipleOpened){/**\r\n           * Fires immediately before the modal opens.\r\n           * Closes any other modals that are currently open\r\n           * @event Reveal#closeme\r\n           */this.$element.trigger('closeme.zf.reveal',this.id);}// Motion UI method of reveal\nif(this.options.animationIn){if(this.options.overlay){Foundation.Motion.animateIn(this.$overlay,'fade-in');}Foundation.Motion.animateIn(this.$element,this.options.animationIn,function(){this.focusableElements=Foundation.Keyboard.findFocusable(this.$element);});}// jQuery method of reveal\nelse{if(this.options.overlay){this.$overlay.show(0);}this.$element.show(this.options.showDelay);}// handle accessibility\nthis.$element.attr({'aria-hidden':false,'tabindex':-1}).focus();/**\r\n         * Fires when the modal has successfully opened.\r\n         * @event Reveal#open\r\n         */this.$element.trigger('open.zf.reveal');if(this.isiOS){var scrollPos=window.pageYOffset;$('html, body').addClass('is-reveal-open').scrollTop(scrollPos);}else{$('body').addClass('is-reveal-open');}$('body').addClass('is-reveal-open').attr('aria-hidden',this.options.overlay||this.options.fullScreen?true:false);setTimeout(function(){_this2._extraHandlers();},0);}/**\r\n       * Adds extra event handlers for the body and window if necessary.\r\n       * @private\r\n       */},{key:'_extraHandlers',value:function _extraHandlers(){var _this=this;this.focusableElements=Foundation.Keyboard.findFocusable(this.$element);if(!this.options.overlay&&this.options.closeOnClick&&!this.options.fullScreen){$('body').on('click.zf.reveal',function(e){if(e.target===_this.$element[0]||$.contains(_this.$element[0],e.target)){return;}_this.close();});}if(this.options.closeOnEsc){$(window).on('keydown.zf.reveal',function(e){Foundation.Keyboard.handleKey(e,'Reveal',{close:function close(){if(_this.options.closeOnEsc){_this.close();_this.$anchor.focus();}}});if(_this.focusableElements.length===0){// no focusable elements inside the modal at all, prevent tabbing in general\ne.preventDefault();}});}// lock focus within modal while tabbing\nthis.$element.on('keydown.zf.reveal',function(e){var $target=$(this);// handle keyboard event with keyboard util\nFoundation.Keyboard.handleKey(e,'Reveal',{tab_forward:function tab_forward(){if(_this.$element.find(':focus').is(_this.focusableElements.eq(-1))){// left modal downwards, setting focus to first element\n_this.focusableElements.eq(0).focus();e.preventDefault();}},tab_backward:function tab_backward(){if(_this.$element.find(':focus').is(_this.focusableElements.eq(0))||_this.$element.is(':focus')){// left modal upwards, setting focus to last element\n_this.focusableElements.eq(-1).focus();e.preventDefault();}},open:function open(){if(_this.$element.find(':focus').is(_this.$element.find('[data-close]'))){setTimeout(function(){// set focus back to anchor if close button has been activated\n_this.$anchor.focus();},1);}else if($target.is(_this.focusableElements)){// dont't trigger if acual element has focus (i.e. inputs, links, ...)\n_this.open();}},close:function close(){if(_this.options.closeOnEsc){_this.close();_this.$anchor.focus();}}});});}/**\r\n       * Closes the modal.\r\n       * @function\r\n       * @fires Reveal#closed\r\n       */},{key:'close',value:function close(){if(!this.isActive||!this.$element.is(':visible')){return false;}var _this=this;// Motion UI method of hiding\nif(this.options.animationOut){if(this.options.overlay){Foundation.Motion.animateOut(this.$overlay,'fade-out',finishUp);}else{finishUp();}Foundation.Motion.animateOut(this.$element,this.options.animationOut);}// jQuery method of hiding\nelse{if(this.options.overlay){this.$overlay.hide(0,finishUp);}else{finishUp();}this.$element.hide(this.options.hideDelay);}// Conditionals to remove extra event listeners added on open\nif(this.options.closeOnEsc){$(window).off('keydown.zf.reveal');}if(!this.options.overlay&&this.options.closeOnClick){$('body').off('click.zf.reveal');}this.$element.off('keydown.zf.reveal');function finishUp(){if(_this.isiOS){$('html, body').removeClass('is-reveal-open');}else{$('body').removeClass('is-reveal-open');}$('body').attr({'aria-hidden':false,'tabindex':''});_this.$element.attr('aria-hidden',true);/**\r\n          * Fires when the modal is done closing.\r\n          * @event Reveal#closed\r\n          */_this.$element.trigger('closed.zf.reveal');}/**\r\n        * Resets the modal content\r\n        * This prevents a running video to keep going in the background\r\n        */if(this.options.resetOnClose){this.$element.html(this.$element.html());}this.isActive=false;if(_this.options.deepLink){if(window.history.replaceState){window.history.replaceState(\"\",document.title,window.location.pathname);}else{window.location.hash='';}}}/**\r\n       * Toggles the open/closed state of a modal.\r\n       * @function\r\n       */},{key:'toggle',value:function toggle(){if(this.isActive){this.close();}else{this.open();}}},{key:'destroy',/**\r\n       * Destroys an instance of a modal.\r\n       * @function\r\n       */value:function destroy(){if(this.options.overlay){this.$overlay.hide().off().remove();}this.$element.hide().off();this.$anchor.off('.zf');$(window).off('.zf.reveal:'+this.id);Foundation.unregisterPlugin(this);}}]);return Reveal;}();Reveal.defaults={/**\r\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\r\n     * @option\r\n     * @example 'slide-in-left'\r\n     */animationIn:'',/**\r\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\r\n     * @option\r\n     * @example 'slide-out-right'\r\n     */animationOut:'',/**\r\n     * Time, in ms, to delay the opening of a modal after a click if no animation used.\r\n     * @option\r\n     * @example 10\r\n     */showDelay:0,/**\r\n     * Time, in ms, to delay the closing of a modal after a click if no animation used.\r\n     * @option\r\n     * @example 10\r\n     */hideDelay:0,/**\r\n     * Allows a click on the body/overlay to close the modal.\r\n     * @option\r\n     * @example true\r\n     */closeOnClick:true,/**\r\n     * Allows the modal to close if the user presses the `ESCAPE` key.\r\n     * @option\r\n     * @example true\r\n     */closeOnEsc:true,/**\r\n     * If true, allows multiple modals to be displayed at once.\r\n     * @option\r\n     * @example false\r\n     */multipleOpened:false,/**\r\n     * Distance, in pixels, the modal should push down from the top of the screen.\r\n     * @option\r\n     * @example 100\r\n     */vOffset:100,/**\r\n     * Distance, in pixels, the modal should push in from the side of the screen.\r\n     * @option\r\n     * @example 0\r\n     */hOffset:0,/**\r\n     * Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.\r\n     * @option\r\n     * @example false\r\n     */fullScreen:false,/**\r\n     * Percentage of screen height the modal should push up from the bottom of the view.\r\n     * @option\r\n     * @example 10\r\n     */btmOffsetPct:10,/**\r\n     * Allows the modal to generate an overlay div, which will cover the view when modal opens.\r\n     * @option\r\n     * @example true\r\n     */overlay:true,/**\r\n     * Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider's api, otherwise, videos will continue to play in the background.\r\n     * @option\r\n     * @example false\r\n     */resetOnClose:false,/**\r\n     * Allows the modal to alter the url on open/close, and allows the use of the `back` button to close modals. ALSO, allows a modal to auto-maniacally open on page load IF the hash === the modal's user-set id.\r\n     * @option\r\n     * @example false\r\n     */deepLink:false};// Window exports\nFoundation.plugin(Reveal,'Reveal');function iPhoneSniff(){return /iP(ad|hone|od).*OS/.test(window.navigator.userAgent);}}(jQuery);'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}!function($){/**\r\n   * Slider module.\r\n   * @module foundation.slider\r\n   * @requires foundation.util.motion\r\n   * @requires foundation.util.triggers\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.touch\r\n   */var Slider=function(){/**\r\n     * Creates a new instance of a drilldown menu.\r\n     * @class\r\n     * @param {jQuery} element - jQuery object to make into an accordion menu.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */function Slider(element,options){_classCallCheck(this,Slider);this.$element=element;this.options=$.extend({},Slider.defaults,this.$element.data(),options);this._init();Foundation.registerPlugin(this,'Slider');Foundation.Keyboard.register('Slider',{'ltr':{'ARROW_RIGHT':'increase','ARROW_UP':'increase','ARROW_DOWN':'decrease','ARROW_LEFT':'decrease','SHIFT_ARROW_RIGHT':'increase_fast','SHIFT_ARROW_UP':'increase_fast','SHIFT_ARROW_DOWN':'decrease_fast','SHIFT_ARROW_LEFT':'decrease_fast'},'rtl':{'ARROW_LEFT':'increase','ARROW_RIGHT':'decrease','SHIFT_ARROW_LEFT':'increase_fast','SHIFT_ARROW_RIGHT':'decrease_fast'}});}/**\r\n     * Initilizes the plugin by reading/setting attributes, creating collections and setting the initial position of the handle(s).\r\n     * @function\r\n     * @private\r\n     */_createClass(Slider,[{key:'_init',value:function _init(){this.inputs=this.$element.find('input');this.handles=this.$element.find('[data-slider-handle]');this.$handle=this.handles.eq(0);this.$input=this.inputs.length?this.inputs.eq(0):$('#'+this.$handle.attr('aria-controls'));this.$fill=this.$element.find('[data-slider-fill]').css(this.options.vertical?'height':'width',0);var isDbl=false,_this=this;if(this.options.disabled||this.$element.hasClass(this.options.disabledClass)){this.options.disabled=true;this.$element.addClass(this.options.disabledClass);}if(!this.inputs.length){this.inputs=$().add(this.$input);this.options.binding=true;}this._setInitAttr(0);this._events(this.$handle);if(this.handles[1]){this.options.doubleSided=true;this.$handle2=this.handles.eq(1);this.$input2=this.inputs.length>1?this.inputs.eq(1):$('#'+this.$handle2.attr('aria-controls'));if(!this.inputs[1]){this.inputs=this.inputs.add(this.$input2);}isDbl=true;this._setHandlePos(this.$handle,this.options.initialStart,true,function(){_this._setHandlePos(_this.$handle2,_this.options.initialEnd,true);});// this.$handle.triggerHandler('click.zf.slider');\nthis._setInitAttr(1);this._events(this.$handle2);}if(!isDbl){this._setHandlePos(this.$handle,this.options.initialStart,true);}}/**\r\n       * Sets the position of the selected handle and fill bar.\r\n       * @function\r\n       * @private\r\n       * @param {jQuery} $hndl - the selected handle to move.\r\n       * @param {Number} location - floating point between the start and end values of the slider bar.\r\n       * @param {Function} cb - callback function to fire on completion.\r\n       * @fires Slider#moved\r\n       */},{key:'_setHandlePos',value:function _setHandlePos($hndl,location,noInvert,cb){//might need to alter that slightly for bars that will have odd number selections.\nlocation=parseFloat(location);//on input change events, convert string to number...grumble.\n// prevent slider from running out of bounds, if value exceeds the limits set through options, override the value to min/max\nif(location<this.options.start){location=this.options.start;}else if(location>this.options.end){location=this.options.end;}var isDbl=this.options.doubleSided;if(isDbl){//this block is to prevent 2 handles from crossing eachother. Could/should be improved.\nif(this.handles.index($hndl)===0){var h2Val=parseFloat(this.$handle2.attr('aria-valuenow'));location=location>=h2Val?h2Val-this.options.step:location;}else{var h1Val=parseFloat(this.$handle.attr('aria-valuenow'));location=location<=h1Val?h1Val+this.options.step:location;}}//this is for single-handled vertical sliders, it adjusts the value to account for the slider being \"upside-down\"\n//for click and drag events, it's weird due to the scale(-1, 1) css property\nif(this.options.vertical&&!noInvert){location=this.options.end-location;}var _this=this,vert=this.options.vertical,hOrW=vert?'height':'width',lOrT=vert?'top':'left',handleDim=$hndl[0].getBoundingClientRect()[hOrW],elemDim=this.$element[0].getBoundingClientRect()[hOrW],//percentage of bar min/max value based on click or drag point\npctOfBar=percent(location,this.options.end).toFixed(2),//number of actual pixels to shift the handle, based on the percentage obtained above\npxToMove=(elemDim-handleDim)*pctOfBar,//percentage of bar to shift the handle\nmovement=(percent(pxToMove,elemDim)*100).toFixed(this.options.decimal);//fixing the decimal value for the location number, is passed to other methods as a fixed floating-point value\nlocation=parseFloat(location.toFixed(this.options.decimal));// declare empty object for css adjustments, only used with 2 handled-sliders\nvar css={};this._setValues($hndl,location);// TODO update to calculate based on values set to respective inputs??\nif(isDbl){var isLeftHndl=this.handles.index($hndl)===0,//empty variable, will be used for min-height/width for fill bar\ndim,//percentage w/h of the handle compared to the slider bar\nhandlePct=~~(percent(handleDim,elemDim)*100);//if left handle, the math is slightly different than if it's the right handle, and the left/top property needs to be changed for the fill bar\nif(isLeftHndl){//left or top percentage value to apply to the fill bar.\ncss[lOrT]=movement+'%';//calculate the new min-height/width for the fill bar.\ndim=parseFloat(this.$handle2[0].style[lOrT])-movement+handlePct;//this callback is necessary to prevent errors and allow the proper placement and initialization of a 2-handled slider\n//plus, it means we don't care if 'dim' isNaN on init, it won't be in the future.\nif(cb&&typeof cb==='function'){cb();}//this is only needed for the initialization of 2 handled sliders\n}else{//just caching the value of the left/bottom handle's left/top property\nvar handlePos=parseFloat(this.$handle[0].style[lOrT]);//calculate the new min-height/width for the fill bar. Use isNaN to prevent false positives for numbers <= 0\n//based on the percentage of movement of the handle being manipulated, less the opposing handle's left/top position, plus the percentage w/h of the handle itself\ndim=movement-(isNaN(handlePos)?this.options.initialStart/((this.options.end-this.options.start)/100):handlePos)+handlePct;}// assign the min-height/width to our css object\ncss['min-'+hOrW]=dim+'%';}this.$element.one('finished.zf.animate',function(){/**\r\n           * Fires when the handle is done moving.\r\n           * @event Slider#moved\r\n           */_this.$element.trigger('moved.zf.slider',[$hndl]);});//because we don't know exactly how the handle will be moved, check the amount of time it should take to move.\nvar moveTime=this.$element.data('dragging')?1000/60:this.options.moveTime;Foundation.Move(moveTime,$hndl,function(){//adjusting the left/top property of the handle, based on the percentage calculated above\n$hndl.css(lOrT,movement+'%');if(!_this.options.doubleSided){//if single-handled, a simple method to expand the fill bar\n_this.$fill.css(hOrW,pctOfBar*100+'%');}else{//otherwise, use the css object we created above\n_this.$fill.css(css);}});}/**\r\n       * Sets the initial attribute for the slider element.\r\n       * @function\r\n       * @private\r\n       * @param {Number} idx - index of the current handle/input to use.\r\n       */},{key:'_setInitAttr',value:function _setInitAttr(idx){var id=this.inputs.eq(idx).attr('id')||Foundation.GetYoDigits(6,'slider');this.inputs.eq(idx).attr({'id':id,'max':this.options.end,'min':this.options.start,'step':this.options.step});this.handles.eq(idx).attr({'role':'slider','aria-controls':id,'aria-valuemax':this.options.end,'aria-valuemin':this.options.start,'aria-valuenow':idx===0?this.options.initialStart:this.options.initialEnd,'aria-orientation':this.options.vertical?'vertical':'horizontal','tabindex':0});}/**\r\n       * Sets the input and `aria-valuenow` values for the slider element.\r\n       * @function\r\n       * @private\r\n       * @param {jQuery} $handle - the currently selected handle.\r\n       * @param {Number} val - floating point of the new value.\r\n       */},{key:'_setValues',value:function _setValues($handle,val){var idx=this.options.doubleSided?this.handles.index($handle):0;this.inputs.eq(idx).val(val);$handle.attr('aria-valuenow',val);}/**\r\n       * Handles events on the slider element.\r\n       * Calculates the new location of the current handle.\r\n       * If there are two handles and the bar was clicked, it determines which handle to move.\r\n       * @function\r\n       * @private\r\n       * @param {Object} e - the `event` object passed from the listener.\r\n       * @param {jQuery} $handle - the current handle to calculate for, if selected.\r\n       * @param {Number} val - floating point number for the new value of the slider.\r\n       * TODO clean this up, there's a lot of repeated code between this and the _setHandlePos fn.\r\n       */},{key:'_handleEvent',value:function _handleEvent(e,$handle,val){var value,hasVal;if(!val){//click or drag events\ne.preventDefault();var _this=this,vertical=this.options.vertical,param=vertical?'height':'width',direction=vertical?'top':'left',pageXY=vertical?e.pageY:e.pageX,halfOfHandle=this.$handle[0].getBoundingClientRect()[param]/2,barDim=this.$element[0].getBoundingClientRect()[param],barOffset=this.$element.offset()[direction]-pageXY,//if the cursor position is less than or greater than the elements bounding coordinates, set coordinates within those bounds\nbarXY=barOffset>0?-halfOfHandle:barOffset-halfOfHandle<-barDim?barDim:Math.abs(barOffset),offsetPct=percent(barXY,barDim);value=(this.options.end-this.options.start)*offsetPct;// turn everything around for RTL, yay math!\nif(Foundation.rtl()&&!this.options.vertical){value=this.options.end-value;}value=_this._adjustValue(null,value);//boolean flag for the setHandlePos fn, specifically for vertical sliders\nhasVal=false;if(!$handle){//figure out which handle it is, pass it to the next function.\nvar firstHndlPos=absPosition(this.$handle,direction,barXY,param),secndHndlPos=absPosition(this.$handle2,direction,barXY,param);$handle=firstHndlPos<=secndHndlPos?this.$handle:this.$handle2;}}else{//change event on input\nvalue=this._adjustValue(null,val);hasVal=true;}this._setHandlePos($handle,value,hasVal);}/**\r\n       * Adjustes value for handle in regard to step value. returns adjusted value\r\n       * @function\r\n       * @private\r\n       * @param {jQuery} $handle - the selected handle.\r\n       * @param {Number} value - value to adjust. used if $handle is falsy\r\n       */},{key:'_adjustValue',value:function _adjustValue($handle,value){var val,step=this.options.step,div=parseFloat(step/2),left,prev_val,next_val;if(!!$handle){val=parseFloat($handle.attr('aria-valuenow'));}else{val=value;}left=val%step;prev_val=val-left;next_val=prev_val+step;if(left===0){return val;}val=val>=prev_val+div?next_val:prev_val;return val;}/**\r\n       * Adds event listeners to the slider elements.\r\n       * @function\r\n       * @private\r\n       * @param {jQuery} $handle - the current handle to apply listeners to.\r\n       */},{key:'_events',value:function _events($handle){if(this.options.disabled){return false;}var _this=this,curHandle,timer;this.inputs.off('change.zf.slider').on('change.zf.slider',function(e){var idx=_this.inputs.index($(this));_this._handleEvent(e,_this.handles.eq(idx),$(this).val());});if(this.options.clickSelect){this.$element.off('click.zf.slider').on('click.zf.slider',function(e){if(_this.$element.data('dragging')){return false;}if(!$(e.target).is('[data-slider-handle]')){if(_this.options.doubleSided){_this._handleEvent(e);}else{_this._handleEvent(e,_this.$handle);}}});}if(this.options.draggable){this.handles.addTouch();var $body=$('body');$handle.off('mousedown.zf.slider').on('mousedown.zf.slider',function(e){$handle.addClass('is-dragging');_this.$fill.addClass('is-dragging');//\n_this.$element.data('dragging',true);curHandle=$(e.currentTarget);$body.on('mousemove.zf.slider',function(e){e.preventDefault();_this._handleEvent(e,curHandle);}).on('mouseup.zf.slider',function(e){_this._handleEvent(e,curHandle);$handle.removeClass('is-dragging');_this.$fill.removeClass('is-dragging');_this.$element.data('dragging',false);$body.off('mousemove.zf.slider mouseup.zf.slider');});});}$handle.off('keydown.zf.slider').on('keydown.zf.slider',function(e){var _$handle=$(this),idx=_this.options.doubleSided?_this.handles.index(_$handle):0,oldValue=parseFloat(_this.inputs.eq(idx).val()),newValue;// handle keyboard event with keyboard util\nFoundation.Keyboard.handleKey(e,'Slider',{decrease:function decrease(){newValue=oldValue-_this.options.step;},increase:function increase(){newValue=oldValue+_this.options.step;},decrease_fast:function decrease_fast(){newValue=oldValue-_this.options.step*10;},increase_fast:function increase_fast(){newValue=oldValue+_this.options.step*10;},handled:function handled(){// only set handle pos when event was handled specially\ne.preventDefault();_this._setHandlePos(_$handle,newValue,true);}});/*if (newValue) { // if pressed key has special function, update value\r\n            e.preventDefault();\r\n            _this._setHandlePos(_$handle, newValue);\r\n          }*/});}/**\r\n       * Destroys the slider plugin.\r\n       */},{key:'destroy',value:function destroy(){this.handles.off('.zf.slider');this.inputs.off('.zf.slider');this.$element.off('.zf.slider');Foundation.unregisterPlugin(this);}}]);return Slider;}();Slider.defaults={/**\r\n     * Minimum value for the slider scale.\r\n     * @option\r\n     * @example 0\r\n     */start:0,/**\r\n     * Maximum value for the slider scale.\r\n     * @option\r\n     * @example 100\r\n     */end:100,/**\r\n     * Minimum value change per change event.\r\n     * @option\r\n     * @example 1\r\n     */step:1,/**\r\n     * Value at which the handle/input *(left handle/first input)* should be set to on initialization.\r\n     * @option\r\n     * @example 0\r\n     */initialStart:0,/**\r\n     * Value at which the right handle/second input should be set to on initialization.\r\n     * @option\r\n     * @example 100\r\n     */initialEnd:100,/**\r\n     * Allows the input to be located outside the container and visible. Set to by the JS\r\n     * @option\r\n     * @example false\r\n     */binding:false,/**\r\n     * Allows the user to click/tap on the slider bar to select a value.\r\n     * @option\r\n     * @example true\r\n     */clickSelect:true,/**\r\n     * Set to true and use the `vertical` class to change alignment to vertical.\r\n     * @option\r\n     * @example false\r\n     */vertical:false,/**\r\n     * Allows the user to drag the slider handle(s) to select a value.\r\n     * @option\r\n     * @example true\r\n     */draggable:true,/**\r\n     * Disables the slider and prevents event listeners from being applied. Double checked by JS with `disabledClass`.\r\n     * @option\r\n     * @example false\r\n     */disabled:false,/**\r\n     * Allows the use of two handles. Double checked by the JS. Changes some logic handling.\r\n     * @option\r\n     * @example false\r\n     */doubleSided:false,/**\r\n     * Potential future feature.\r\n     */// steps: 100,\n/**\r\n     * Number of decimal places the plugin should go to for floating point precision.\r\n     * @option\r\n     * @example 2\r\n     */decimal:2,/**\r\n     * Time delay for dragged elements.\r\n     */// dragDelay: 0,\n/**\r\n     * Time, in ms, to animate the movement of a slider handle if user clicks/taps on the bar. Needs to be manually set if updating the transition time in the Sass settings.\r\n     * @option\r\n     * @example 200\r\n     */moveTime:200,//update this if changing the transition time in the sass\n/**\r\n     * Class applied to disabled sliders.\r\n     * @option\r\n     * @example 'disabled'\r\n     */disabledClass:'disabled',/**\r\n     * Will invert the default layout for a vertical<span data-tooltip title=\"who would do this???\"> </span>slider.\r\n     * @option\r\n     * @example false\r\n     */invertVertical:false};function percent(frac,num){return frac/num;}function absPosition($handle,dir,clickPos,param){return Math.abs($handle.position()[dir]+$handle[param]()/2-clickPos);}// Window exports\nFoundation.plugin(Slider,'Slider');}(jQuery);//*********this is in case we go to static, absolute positions instead of dynamic positioning********\n// this.setSteps(function() {\n//   _this._events();\n//   var initStart = _this.options.positions[_this.options.initialStart - 1] || null;\n//   var initEnd = _this.options.initialEnd ? _this.options.position[_this.options.initialEnd - 1] : null;\n//   if (initStart || initEnd) {\n//     _this._handleEvent(initStart, initEnd);\n//   }\n// });\n//***********the other part of absolute positions*************\n// Slider.prototype.setSteps = function(cb) {\n//   var posChange = this.$element.outerWidth() / this.options.steps;\n//   var counter = 0\n//   while(counter < this.options.steps) {\n//     if (counter) {\n//       this.options.positions.push(this.options.positions[counter - 1] + posChange);\n//     } else {\n//       this.options.positions.push(posChange);\n//     }\n//     counter++;\n//   }\n//   cb();\n// };\n'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}!function($){/**\r\n   * Sticky module.\r\n   * @module foundation.sticky\r\n   * @requires foundation.util.triggers\r\n   * @requires foundation.util.mediaQuery\r\n   */var Sticky=function(){/**\r\n     * Creates a new instance of a sticky thing.\r\n     * @class\r\n     * @param {jQuery} element - jQuery object to make sticky.\r\n     * @param {Object} options - options object passed when creating the element programmatically.\r\n     */function Sticky(element,options){_classCallCheck(this,Sticky);this.$element=element;this.options=$.extend({},Sticky.defaults,this.$element.data(),options);this._init();Foundation.registerPlugin(this,'Sticky');}/**\r\n     * Initializes the sticky element by adding classes, getting/setting dimensions, breakpoints and attributes\r\n     * @function\r\n     * @private\r\n     */_createClass(Sticky,[{key:'_init',value:function _init(){var $parent=this.$element.parent('[data-sticky-container]'),id=this.$element[0].id||Foundation.GetYoDigits(6,'sticky'),_this=this;if(!$parent.length){this.wasWrapped=true;}this.$container=$parent.length?$parent:$(this.options.container).wrapInner(this.$element);this.$container.addClass(this.options.containerClass);this.$element.addClass(this.options.stickyClass).attr({'data-resize':id});this.scrollCount=this.options.checkEvery;this.isStuck=false;$(window).one('load.zf.sticky',function(){if(_this.options.anchor!==''){_this.$anchor=$('#'+_this.options.anchor);}else{_this._parsePoints();}_this._setSizes(function(){_this._calc(false);});_this._events(id.split('-').reverse().join('-'));});}/**\r\n       * If using multiple elements as anchors, calculates the top and bottom pixel values the sticky thing should stick and unstick on.\r\n       * @function\r\n       * @private\r\n       */},{key:'_parsePoints',value:function _parsePoints(){var top=this.options.topAnchor,btm=this.options.btmAnchor,pts=[top,btm],breaks={};if(top&&btm){for(var i=0,len=pts.length;i<len&&pts[i];i++){var pt;if(typeof pts[i]==='number'){pt=pts[i];}else{var place=pts[i].split(':'),anchor=$('#'+place[0]);pt=anchor.offset().top;if(place[1]&&place[1].toLowerCase()==='bottom'){pt+=anchor[0].getBoundingClientRect().height;}}breaks[i]=pt;}}else{breaks={0:1,1:document.documentElement.scrollHeight};}this.points=breaks;return;}/**\r\n       * Adds event handlers for the scrolling element.\r\n       * @private\r\n       * @param {String} id - psuedo-random id for unique scroll event listener.\r\n       */},{key:'_events',value:function _events(id){var _this=this,scrollListener=this.scrollListener='scroll.zf.'+id;if(this.isOn){return;}if(this.canStick){this.isOn=true;$(window).off(scrollListener).on(scrollListener,function(e){if(_this.scrollCount===0){_this.scrollCount=_this.options.checkEvery;_this._setSizes(function(){_this._calc(false,window.pageYOffset);});}else{_this.scrollCount--;_this._calc(false,window.pageYOffset);}});}this.$element.off('resizeme.zf.trigger').on('resizeme.zf.trigger',function(e,el){_this._setSizes(function(){_this._calc(false);if(_this.canStick){if(!_this.isOn){_this._events(id);}}else if(_this.isOn){_this._pauseListeners(scrollListener);}});});}/**\r\n       * Removes event handlers for scroll and change events on anchor.\r\n       * @fires Sticky#pause\r\n       * @param {String} scrollListener - unique, namespaced scroll listener attached to `window`\r\n       */},{key:'_pauseListeners',value:function _pauseListeners(scrollListener){this.isOn=false;$(window).off(scrollListener);/**\r\n         * Fires when the plugin is paused due to resize event shrinking the view.\r\n         * @event Sticky#pause\r\n         * @private\r\n         */this.$element.trigger('pause.zf.sticky');}/**\r\n       * Called on every `scroll` event and on `_init`\r\n       * fires functions based on booleans and cached values\r\n       * @param {Boolean} checkSizes - true if plugin should recalculate sizes and breakpoints.\r\n       * @param {Number} scroll - current scroll position passed from scroll event cb function. If not passed, defaults to `window.pageYOffset`.\r\n       */},{key:'_calc',value:function _calc(checkSizes,scroll){if(checkSizes){this._setSizes();}if(!this.canStick){if(this.isStuck){this._removeSticky(true);}return false;}if(!scroll){scroll=window.pageYOffset;}if(scroll>=this.topPoint){if(scroll<=this.bottomPoint){if(!this.isStuck){this._setSticky();}}else{if(this.isStuck){this._removeSticky(false);}}}else{if(this.isStuck){this._removeSticky(true);}}}/**\r\n       * Causes the $element to become stuck.\r\n       * Adds `position: fixed;`, and helper classes.\r\n       * @fires Sticky#stuckto\r\n       * @function\r\n       * @private\r\n       */},{key:'_setSticky',value:function _setSticky(){var stickTo=this.options.stickTo,mrgn=stickTo==='top'?'marginTop':'marginBottom',notStuckTo=stickTo==='top'?'bottom':'top',css={};css[mrgn]=this.options[mrgn]+'em';css[stickTo]=0;css[notStuckTo]='auto';css['left']=this.$container.offset().left+parseInt(window.getComputedStyle(this.$container[0])[\"padding-left\"],10);this.isStuck=true;this.$element.removeClass('is-anchored is-at-'+notStuckTo).addClass('is-stuck is-at-'+stickTo).css(css)/**\r\n         * Fires when the $element has become `position: fixed;`\r\n         * Namespaced to `top` or `bottom`, e.g. `sticky.zf.stuckto:top`\r\n         * @event Sticky#stuckto\r\n         */.trigger('sticky.zf.stuckto:'+stickTo);}/**\r\n       * Causes the $element to become unstuck.\r\n       * Removes `position: fixed;`, and helper classes.\r\n       * Adds other helper classes.\r\n       * @param {Boolean} isTop - tells the function if the $element should anchor to the top or bottom of its $anchor element.\r\n       * @fires Sticky#unstuckfrom\r\n       * @private\r\n       */},{key:'_removeSticky',value:function _removeSticky(isTop){var stickTo=this.options.stickTo,stickToTop=stickTo==='top',css={},anchorPt=(this.points?this.points[1]-this.points[0]:this.anchorHeight)-this.elemHeight,mrgn=stickToTop?'marginTop':'marginBottom',notStuckTo=stickToTop?'bottom':'top',topOrBottom=isTop?'top':'bottom';css[mrgn]=0;if(isTop&&!stickToTop||stickToTop&&!isTop){css[stickTo]=anchorPt;css[notStuckTo]=0;}else{css[stickTo]=0;css[notStuckTo]=anchorPt;}css['left']='';this.isStuck=false;this.$element.removeClass('is-stuck is-at-'+stickTo).addClass('is-anchored is-at-'+topOrBottom).css(css)/**\r\n         * Fires when the $element has become anchored.\r\n         * Namespaced to `top` or `bottom`, e.g. `sticky.zf.unstuckfrom:bottom`\r\n         * @event Sticky#unstuckfrom\r\n         */.trigger('sticky.zf.unstuckfrom:'+topOrBottom);}/**\r\n       * Sets the $element and $container sizes for plugin.\r\n       * Calls `_setBreakPoints`.\r\n       * @param {Function} cb - optional callback function to fire on completion of `_setBreakPoints`.\r\n       * @private\r\n       */},{key:'_setSizes',value:function _setSizes(cb){this.canStick=Foundation.MediaQuery.atLeast(this.options.stickyOn);if(!this.canStick){cb();}var _this=this,newElemWidth=this.$container[0].getBoundingClientRect().width,comp=window.getComputedStyle(this.$container[0]),pdng=parseInt(comp['padding-right'],10);if(this.$anchor&&this.$anchor.length){this.anchorHeight=this.$anchor[0].getBoundingClientRect().height;}else{this._parsePoints();}this.$element.css({'max-width':newElemWidth-pdng+'px'});var newContainerHeight=this.$element[0].getBoundingClientRect().height||this.containerHeight;this.containerHeight=newContainerHeight;this.$container.css({height:newContainerHeight});this.elemHeight=newContainerHeight;if(this.isStuck){this.$element.css({\"left\":this.$container.offset().left+parseInt(comp['padding-left'],10)});}this._setBreakPoints(newContainerHeight,function(){if(cb){cb();}});}/**\r\n       * Sets the upper and lower breakpoints for the element to become sticky/unsticky.\r\n       * @param {Number} elemHeight - px value for sticky.$element height, calculated by `_setSizes`.\r\n       * @param {Function} cb - optional callback function to be called on completion.\r\n       * @private\r\n       */},{key:'_setBreakPoints',value:function _setBreakPoints(elemHeight,cb){if(!this.canStick){if(cb){cb();}else{return false;}}var mTop=emCalc(this.options.marginTop),mBtm=emCalc(this.options.marginBottom),topPoint=this.points?this.points[0]:this.$anchor.offset().top,bottomPoint=this.points?this.points[1]:topPoint+this.anchorHeight,// topPoint = this.$anchor.offset().top || this.points[0],\n// bottomPoint = topPoint + this.anchorHeight || this.points[1],\nwinHeight=window.innerHeight;if(this.options.stickTo==='top'){topPoint-=mTop;bottomPoint-=elemHeight+mTop;}else if(this.options.stickTo==='bottom'){topPoint-=winHeight-(elemHeight+mBtm);bottomPoint-=winHeight-mBtm;}else{//this would be the stickTo: both option... tricky\n}this.topPoint=topPoint;this.bottomPoint=bottomPoint;if(cb){cb();}}/**\r\n       * Destroys the current sticky element.\r\n       * Resets the element to the top position first.\r\n       * Removes event listeners, JS-added css properties and classes, and unwraps the $element if the JS added the $container.\r\n       * @function\r\n       */},{key:'destroy',value:function destroy(){this._removeSticky(true);this.$element.removeClass(this.options.stickyClass+' is-anchored is-at-top').css({height:'',top:'',bottom:'','max-width':''}).off('resizeme.zf.trigger');this.$anchor.off('change.zf.sticky');$(window).off(this.scrollListener);if(this.wasWrapped){this.$element.unwrap();}else{this.$container.removeClass(this.options.containerClass).css({height:''});}Foundation.unregisterPlugin(this);}}]);return Sticky;}();Sticky.defaults={/**\r\n     * Customizable container template. Add your own classes for styling and sizing.\r\n     * @option\r\n     * @example '&lt;div data-sticky-container class=\"small-6 columns\"&gt;&lt;/div&gt;'\r\n     */container:'<div data-sticky-container></div>',/**\r\n     * Location in the view the element sticks to.\r\n     * @option\r\n     * @example 'top'\r\n     */stickTo:'top',/**\r\n     * If anchored to a single element, the id of that element.\r\n     * @option\r\n     * @example 'exampleId'\r\n     */anchor:'',/**\r\n     * If using more than one element as anchor points, the id of the top anchor.\r\n     * @option\r\n     * @example 'exampleId:top'\r\n     */topAnchor:'',/**\r\n     * If using more than one element as anchor points, the id of the bottom anchor.\r\n     * @option\r\n     * @example 'exampleId:bottom'\r\n     */btmAnchor:'',/**\r\n     * Margin, in `em`'s to apply to the top of the element when it becomes sticky.\r\n     * @option\r\n     * @example 1\r\n     */marginTop:1,/**\r\n     * Margin, in `em`'s to apply to the bottom of the element when it becomes sticky.\r\n     * @option\r\n     * @example 1\r\n     */marginBottom:1,/**\r\n     * Breakpoint string that is the minimum screen size an element should become sticky.\r\n     * @option\r\n     * @example 'medium'\r\n     */stickyOn:'medium',/**\r\n     * Class applied to sticky element, and removed on destruction. Foundation defaults to `sticky`.\r\n     * @option\r\n     * @example 'sticky'\r\n     */stickyClass:'sticky',/**\r\n     * Class applied to sticky container. Foundation defaults to `sticky-container`.\r\n     * @option\r\n     * @example 'sticky-container'\r\n     */containerClass:'sticky-container',/**\r\n     * Number of scroll events between the plugin's recalculating sticky points. Setting it to `0` will cause it to recalc every scroll event, setting it to `-1` will prevent recalc on scroll.\r\n     * @option\r\n     * @example 50\r\n     */checkEvery:-1};/**\r\n   * Helper function to calculate em values\r\n   * @param Number {em} - number of em's to calculate into pixels\r\n   */function emCalc(em){return parseInt(window.getComputedStyle(document.body,null).fontSize,10)*em;}// Window exports\nFoundation.plugin(Sticky,'Sticky');}(jQuery);'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}!function($){/**\r\n   * Tabs module.\r\n   * @module foundation.tabs\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.timerAndImageLoader if tabs contain images\r\n   */var Tabs=function(){/**\r\n     * Creates a new instance of tabs.\r\n     * @class\r\n     * @fires Tabs#init\r\n     * @param {jQuery} element - jQuery object to make into tabs.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */function Tabs(element,options){_classCallCheck(this,Tabs);this.$element=element;this.options=$.extend({},Tabs.defaults,this.$element.data(),options);this._init();Foundation.registerPlugin(this,'Tabs');Foundation.Keyboard.register('Tabs',{'ENTER':'open','SPACE':'open','ARROW_RIGHT':'next','ARROW_UP':'previous','ARROW_DOWN':'next','ARROW_LEFT':'previous'// 'TAB': 'next',\n// 'SHIFT_TAB': 'previous'\n});}/**\r\n     * Initializes the tabs by showing and focusing (if autoFocus=true) the preset active tab.\r\n     * @private\r\n     */_createClass(Tabs,[{key:'_init',value:function _init(){var _this=this;this.$tabTitles=this.$element.find('.'+this.options.linkClass);this.$tabContent=$('[data-tabs-content=\"'+this.$element[0].id+'\"]');this.$tabTitles.each(function(){var $elem=$(this),$link=$elem.find('a'),isActive=$elem.hasClass('is-active'),hash=$link[0].hash.slice(1),linkId=$link[0].id?$link[0].id:hash+'-label',$tabContent=$('#'+hash);$elem.attr({'role':'presentation'});$link.attr({'role':'tab','aria-controls':hash,'aria-selected':isActive,'id':linkId});$tabContent.attr({'role':'tabpanel','aria-hidden':!isActive,'aria-labelledby':linkId});if(isActive&&_this.options.autoFocus){$link.focus();}});if(this.options.matchHeight){var $images=this.$tabContent.find('img');if($images.length){Foundation.onImagesLoaded($images,this._setHeight.bind(this));}else{this._setHeight();}}this._events();}/**\r\n       * Adds event handlers for items within the tabs.\r\n       * @private\r\n       */},{key:'_events',value:function _events(){this._addKeyHandler();this._addClickHandler();if(this.options.matchHeight){$(window).on('changed.zf.mediaquery',this._setHeight.bind(this));}}/**\r\n       * Adds click handlers for items within the tabs.\r\n       * @private\r\n       */},{key:'_addClickHandler',value:function _addClickHandler(){var _this=this;this.$element.off('click.zf.tabs').on('click.zf.tabs','.'+this.options.linkClass,function(e){e.preventDefault();e.stopPropagation();if($(this).hasClass('is-active')){return;}_this._handleTabChange($(this));});}/**\r\n       * Adds keyboard event handlers for items within the tabs.\r\n       * @private\r\n       */},{key:'_addKeyHandler',value:function _addKeyHandler(){var _this=this;var $firstTab=_this.$element.find('li:first-of-type');var $lastTab=_this.$element.find('li:last-of-type');this.$tabTitles.off('keydown.zf.tabs').on('keydown.zf.tabs',function(e){if(e.which===9)return;e.stopPropagation();e.preventDefault();var $element=$(this),$elements=$element.parent('ul').children('li'),$prevElement,$nextElement;$elements.each(function(i){if($(this).is($element)){if(_this.options.wrapOnKeys){$prevElement=i===0?$elements.last():$elements.eq(i-1);$nextElement=i===$elements.length-1?$elements.first():$elements.eq(i+1);}else{$prevElement=$elements.eq(Math.max(0,i-1));$nextElement=$elements.eq(Math.min(i+1,$elements.length-1));}return;}});// handle keyboard event with keyboard util\nFoundation.Keyboard.handleKey(e,'Tabs',{open:function open(){$element.find('[role=\"tab\"]').focus();_this._handleTabChange($element);},previous:function previous(){$prevElement.find('[role=\"tab\"]').focus();_this._handleTabChange($prevElement);},next:function next(){$nextElement.find('[role=\"tab\"]').focus();_this._handleTabChange($nextElement);}});});}/**\r\n       * Opens the tab `$targetContent` defined by `$target`.\r\n       * @param {jQuery} $target - Tab to open.\r\n       * @fires Tabs#change\r\n       * @function\r\n       */},{key:'_handleTabChange',value:function _handleTabChange($target){var $tabLink=$target.find('[role=\"tab\"]'),hash=$tabLink[0].hash,$targetContent=this.$tabContent.find(hash),$oldTab=this.$element.find('.'+this.options.linkClass+'.is-active').removeClass('is-active').find('[role=\"tab\"]').attr({'aria-selected':'false'});$('#'+$oldTab.attr('aria-controls')).removeClass('is-active').attr({'aria-hidden':'true'});$target.addClass('is-active');$tabLink.attr({'aria-selected':'true'});$targetContent.addClass('is-active').attr({'aria-hidden':'false'});/**\r\n         * Fires when the plugin has successfully changed tabs.\r\n         * @event Tabs#change\r\n         */this.$element.trigger('change.zf.tabs',[$target]);}/**\r\n       * Public method for selecting a content pane to display.\r\n       * @param {jQuery | String} elem - jQuery object or string of the id of the pane to display.\r\n       * @function\r\n       */},{key:'selectTab',value:function selectTab(elem){var idStr;if((typeof elem==='undefined'?'undefined':_typeof(elem))==='object'){idStr=elem[0].id;}else{idStr=elem;}if(idStr.indexOf('#')<0){idStr='#'+idStr;}var $target=this.$tabTitles.find('[href=\"'+idStr+'\"]').parent('.'+this.options.linkClass);this._handleTabChange($target);}},{key:'_setHeight',/**\r\n       * Sets the height of each panel to the height of the tallest panel.\r\n       * If enabled in options, gets called on media query change.\r\n       * If loading content via external source, can be called directly or with _reflow.\r\n       * @function\r\n       * @private\r\n       */value:function _setHeight(){var max=0;this.$tabContent.find('.'+this.options.panelClass).css('height','').each(function(){var panel=$(this),isActive=panel.hasClass('is-active');if(!isActive){panel.css({'visibility':'hidden','display':'block'});}var temp=this.getBoundingClientRect().height;if(!isActive){panel.css({'visibility':'','display':''});}max=temp>max?temp:max;}).css('height',max+'px');}/**\r\n       * Destroys an instance of an tabs.\r\n       * @fires Tabs#destroyed\r\n       */},{key:'destroy',value:function destroy(){this.$element.find('.'+this.options.linkClass).off('.zf.tabs').hide().end().find('.'+this.options.panelClass).hide();if(this.options.matchHeight){$(window).off('changed.zf.mediaquery');}Foundation.unregisterPlugin(this);}}]);return Tabs;}();Tabs.defaults={/**\r\n     * Allows the window to scroll to content of active pane on load if set to true.\r\n     * @option\r\n     * @example false\r\n     */autoFocus:false,/**\r\n     * Allows keyboard input to 'wrap' around the tab links.\r\n     * @option\r\n     * @example true\r\n     */wrapOnKeys:true,/**\r\n     * Allows the tab content panes to match heights if set to true.\r\n     * @option\r\n     * @example false\r\n     */matchHeight:false,/**\r\n     * Class applied to `li`'s in tab link list.\r\n     * @option\r\n     * @example 'tabs-title'\r\n     */linkClass:'tabs-title',/**\r\n     * Class applied to the content containers.\r\n     * @option\r\n     * @example 'tabs-panel'\r\n     */panelClass:'tabs-panel'};function checkClass($elem){return $elem.hasClass('is-active');}// Window exports\nFoundation.plugin(Tabs,'Tabs');}(jQuery);'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}!function($){/**\r\n   * Toggler module.\r\n   * @module foundation.toggler\r\n   * @requires foundation.util.motion\r\n   * @requires foundation.util.triggers\r\n   */var Toggler=function(){/**\r\n     * Creates a new instance of Toggler.\r\n     * @class\r\n     * @fires Toggler#init\r\n     * @param {Object} element - jQuery object to add the trigger to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */function Toggler(element,options){_classCallCheck(this,Toggler);this.$element=element;this.options=$.extend({},Toggler.defaults,element.data(),options);this.className='';this._init();this._events();Foundation.registerPlugin(this,'Toggler');}/**\r\n     * Initializes the Toggler plugin by parsing the toggle class from data-toggler, or animation classes from data-animate.\r\n     * @function\r\n     * @private\r\n     */_createClass(Toggler,[{key:'_init',value:function _init(){var input;// Parse animation classes if they were set\nif(this.options.animate){input=this.options.animate.split(' ');this.animationIn=input[0];this.animationOut=input[1]||null;}// Otherwise, parse toggle class\nelse{input=this.$element.data('toggler');// Allow for a . at the beginning of the string\nthis.className=input[0]==='.'?input.slice(1):input;}// Add ARIA attributes to triggers\nvar id=this.$element[0].id;$('[data-open=\"'+id+'\"], [data-close=\"'+id+'\"], [data-toggle=\"'+id+'\"]').attr('aria-controls',id);// If the target is hidden, add aria-hidden\nthis.$element.attr('aria-expanded',this.$element.is(':hidden')?false:true);}/**\r\n       * Initializes events for the toggle trigger.\r\n       * @function\r\n       * @private\r\n       */},{key:'_events',value:function _events(){this.$element.off('toggle.zf.trigger').on('toggle.zf.trigger',this.toggle.bind(this));}/**\r\n       * Toggles the target class on the target element. An event is fired from the original trigger depending on if the resultant state was \"on\" or \"off\".\r\n       * @function\r\n       * @fires Toggler#on\r\n       * @fires Toggler#off\r\n       */},{key:'toggle',value:function toggle(){this[this.options.animate?'_toggleAnimate':'_toggleClass']();}},{key:'_toggleClass',value:function _toggleClass(){this.$element.toggleClass(this.className);var isOn=this.$element.hasClass(this.className);if(isOn){/**\r\n           * Fires if the target element has the class after a toggle.\r\n           * @event Toggler#on\r\n           */this.$element.trigger('on.zf.toggler');}else{/**\r\n           * Fires if the target element does not have the class after a toggle.\r\n           * @event Toggler#off\r\n           */this.$element.trigger('off.zf.toggler');}this._updateARIA(isOn);}},{key:'_toggleAnimate',value:function _toggleAnimate(){var _this=this;if(this.$element.is(':hidden')){Foundation.Motion.animateIn(this.$element,this.animationIn,function(){this.trigger('on.zf.toggler');_this._updateARIA(true);});}else{Foundation.Motion.animateOut(this.$element,this.animationOut,function(){this.trigger('off.zf.toggler');_this._updateARIA(false);});}}},{key:'_updateARIA',value:function _updateARIA(isOn){this.$element.attr('aria-expanded',isOn?true:false);}/**\r\n       * Destroys the instance of Toggler on the element.\r\n       * @function\r\n       */},{key:'destroy',value:function destroy(){this.$element.off('.zf.toggler');Foundation.unregisterPlugin(this);}}]);return Toggler;}();Toggler.defaults={/**\r\n     * Tells the plugin if the element should animated when toggled.\r\n     * @option\r\n     * @example false\r\n     */animate:false};// Window exports\nFoundation.plugin(Toggler,'Toggler');}(jQuery);'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}!function($){/**\r\n   * Tooltip module.\r\n   * @module foundation.tooltip\r\n   * @requires foundation.util.box\r\n   * @requires foundation.util.triggers\r\n   */var Tooltip=function(){/**\r\n     * Creates a new instance of a Tooltip.\r\n     * @class\r\n     * @fires Tooltip#init\r\n     * @param {jQuery} element - jQuery object to attach a tooltip to.\r\n     * @param {Object} options - object to extend the default configuration.\r\n     */function Tooltip(element,options){_classCallCheck(this,Tooltip);this.$element=element;this.options=$.extend({},Tooltip.defaults,this.$element.data(),options);this.isActive=false;this.isClick=false;this._init();Foundation.registerPlugin(this,'Tooltip');}/**\r\n     * Initializes the tooltip by setting the creating the tip element, adding it's text, setting private variables and setting attributes on the anchor.\r\n     * @private\r\n     */_createClass(Tooltip,[{key:'_init',value:function _init(){var elemId=this.$element.attr('aria-describedby')||Foundation.GetYoDigits(6,'tooltip');this.options.positionClass=this._getPositionClass(this.$element);this.options.tipText=this.options.tipText||this.$element.attr('title');this.template=this.options.template?$(this.options.template):this._buildTemplate(elemId);this.template.appendTo(document.body).text(this.options.tipText).hide();this.$element.attr({'title':'','aria-describedby':elemId,'data-yeti-box':elemId,'data-toggle':elemId,'data-resize':elemId}).addClass(this.triggerClass);//helper variables to track movement on collisions\nthis.usedPositions=[];this.counter=4;this.classChanged=false;this._events();}/**\r\n       * Grabs the current positioning class, if present, and returns the value or an empty string.\r\n       * @private\r\n       */},{key:'_getPositionClass',value:function _getPositionClass(element){if(!element){return'';}// var position = element.attr('class').match(/top|left|right/g);\nvar position=element[0].className.match(/\\b(top|left|right)\\b/g);position=position?position[0]:'';return position;}},{key:'_buildTemplate',/**\r\n       * builds the tooltip element, adds attributes, and returns the template.\r\n       * @private\r\n       */value:function _buildTemplate(id){var templateClasses=(this.options.tooltipClass+' '+this.options.positionClass+' '+this.options.templateClasses).trim();var $template=$('<div></div>').addClass(templateClasses).attr({'role':'tooltip','aria-hidden':true,'data-is-active':false,'data-is-focus':false,'id':id});return $template;}/**\r\n       * Function that gets called if a collision event is detected.\r\n       * @param {String} position - positioning class to try\r\n       * @private\r\n       */},{key:'_reposition',value:function _reposition(position){this.usedPositions.push(position?position:'bottom');//default, try switching to opposite side\nif(!position&&this.usedPositions.indexOf('top')<0){this.template.addClass('top');}else if(position==='top'&&this.usedPositions.indexOf('bottom')<0){this.template.removeClass(position);}else if(position==='left'&&this.usedPositions.indexOf('right')<0){this.template.removeClass(position).addClass('right');}else if(position==='right'&&this.usedPositions.indexOf('left')<0){this.template.removeClass(position).addClass('left');}//if default change didn't work, try bottom or left first\nelse if(!position&&this.usedPositions.indexOf('top')>-1&&this.usedPositions.indexOf('left')<0){this.template.addClass('left');}else if(position==='top'&&this.usedPositions.indexOf('bottom')>-1&&this.usedPositions.indexOf('left')<0){this.template.removeClass(position).addClass('left');}else if(position==='left'&&this.usedPositions.indexOf('right')>-1&&this.usedPositions.indexOf('bottom')<0){this.template.removeClass(position);}else if(position==='right'&&this.usedPositions.indexOf('left')>-1&&this.usedPositions.indexOf('bottom')<0){this.template.removeClass(position);}//if nothing cleared, set to bottom\nelse{this.template.removeClass(position);}this.classChanged=true;this.counter--;}/**\r\n       * sets the position class of an element and recursively calls itself until there are no more possible positions to attempt, or the tooltip element is no longer colliding.\r\n       * if the tooltip is larger than the screen width, default to full width - any user selected margin\r\n       * @private\r\n       */},{key:'_setPosition',value:function _setPosition(){var position=this._getPositionClass(this.template),$tipDims=Foundation.Box.GetDimensions(this.template),$anchorDims=Foundation.Box.GetDimensions(this.$element),direction=position==='left'?'left':position==='right'?'left':'top',param=direction==='top'?'height':'width',offset=param==='height'?this.options.vOffset:this.options.hOffset,_this=this;if($tipDims.width>=$tipDims.windowDims.width||!this.counter&&!Foundation.Box.ImNotTouchingYou(this.template)){this.template.offset(Foundation.Box.GetOffsets(this.template,this.$element,'center bottom',this.options.vOffset,this.options.hOffset,true)).css({// this.$element.offset(Foundation.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n'width':$anchorDims.windowDims.width-this.options.hOffset*2,'height':'auto'});return false;}this.template.offset(Foundation.Box.GetOffsets(this.template,this.$element,'center '+(position||'bottom'),this.options.vOffset,this.options.hOffset));while(!Foundation.Box.ImNotTouchingYou(this.template)&&this.counter){this._reposition(position);this._setPosition();}}/**\r\n       * reveals the tooltip, and fires an event to close any other open tooltips on the page\r\n       * @fires Tooltip#closeme\r\n       * @fires Tooltip#show\r\n       * @function\r\n       */},{key:'show',value:function show(){if(this.options.showOn!=='all'&&!Foundation.MediaQuery.atLeast(this.options.showOn)){// console.error('The screen is too small to display this tooltip');\nreturn false;}var _this=this;this.template.css('visibility','hidden').show();this._setPosition();/**\r\n         * Fires to close all other open tooltips on the page\r\n         * @event Closeme#tooltip\r\n         */this.$element.trigger('closeme.zf.tooltip',this.template.attr('id'));this.template.attr({'data-is-active':true,'aria-hidden':false});_this.isActive=true;// console.log(this.template);\nthis.template.stop().hide().css('visibility','').fadeIn(this.options.fadeInDuration,function(){//maybe do stuff?\n});/**\r\n         * Fires when the tooltip is shown\r\n         * @event Tooltip#show\r\n         */this.$element.trigger('show.zf.tooltip');}/**\r\n       * Hides the current tooltip, and resets the positioning class if it was changed due to collision\r\n       * @fires Tooltip#hide\r\n       * @function\r\n       */},{key:'hide',value:function hide(){// console.log('hiding', this.$element.data('yeti-box'));\nvar _this=this;this.template.stop().attr({'aria-hidden':true,'data-is-active':false}).fadeOut(this.options.fadeOutDuration,function(){_this.isActive=false;_this.isClick=false;if(_this.classChanged){_this.template.removeClass(_this._getPositionClass(_this.template)).addClass(_this.options.positionClass);_this.usedPositions=[];_this.counter=4;_this.classChanged=false;}});/**\r\n         * fires when the tooltip is hidden\r\n         * @event Tooltip#hide\r\n         */this.$element.trigger('hide.zf.tooltip');}/**\r\n       * adds event listeners for the tooltip and its anchor\r\n       * TODO combine some of the listeners like focus and mouseenter, etc.\r\n       * @private\r\n       */},{key:'_events',value:function _events(){var _this=this;var $template=this.template;var isFocus=false;if(!this.options.disableHover){this.$element.on('mouseenter.zf.tooltip',function(e){if(!_this.isActive){_this.timeout=setTimeout(function(){_this.show();},_this.options.hoverDelay);}}).on('mouseleave.zf.tooltip',function(e){clearTimeout(_this.timeout);if(!isFocus||!_this.isClick&&_this.options.clickOpen){_this.hide();}});}if(this.options.clickOpen){this.$element.on('mousedown.zf.tooltip',function(e){e.stopImmediatePropagation();if(_this.isClick){_this.hide();// _this.isClick = false;\n}else{_this.isClick=true;if((_this.options.disableHover||!_this.$element.attr('tabindex'))&&!_this.isActive){_this.show();}}});}if(!this.options.disableForTouch){this.$element.on('tap.zf.tooltip touchend.zf.tooltip',function(e){_this.isActive?_this.hide():_this.show();});}this.$element.on({// 'toggle.zf.trigger': this.toggle.bind(this),\n// 'close.zf.trigger': this.hide.bind(this)\n'close.zf.trigger':this.hide.bind(this)});this.$element.on('focus.zf.tooltip',function(e){isFocus=true;// console.log(_this.isClick);\nif(_this.isClick){return false;}else{// $(window)\n_this.show();}}).on('focusout.zf.tooltip',function(e){isFocus=false;_this.isClick=false;_this.hide();}).on('resizeme.zf.trigger',function(){if(_this.isActive){_this._setPosition();}});}/**\r\n       * adds a toggle method, in addition to the static show() & hide() functions\r\n       * @function\r\n       */},{key:'toggle',value:function toggle(){if(this.isActive){this.hide();}else{this.show();}}/**\r\n       * Destroys an instance of tooltip, removes template element from the view.\r\n       * @function\r\n       */},{key:'destroy',value:function destroy(){this.$element.attr('title',this.template.text()).off('.zf.trigger .zf.tootip')//  .removeClass('has-tip')\n.removeAttr('aria-describedby').removeAttr('data-yeti-box').removeAttr('data-toggle').removeAttr('data-resize');this.template.remove();Foundation.unregisterPlugin(this);}}]);return Tooltip;}();Tooltip.defaults={disableForTouch:false,/**\r\n     * Time, in ms, before a tooltip should open on hover.\r\n     * @option\r\n     * @example 200\r\n     */hoverDelay:200,/**\r\n     * Time, in ms, a tooltip should take to fade into view.\r\n     * @option\r\n     * @example 150\r\n     */fadeInDuration:150,/**\r\n     * Time, in ms, a tooltip should take to fade out of view.\r\n     * @option\r\n     * @example 150\r\n     */fadeOutDuration:150,/**\r\n     * Disables hover events from opening the tooltip if set to true\r\n     * @option\r\n     * @example false\r\n     */disableHover:false,/**\r\n     * Optional addtional classes to apply to the tooltip template on init.\r\n     * @option\r\n     * @example 'my-cool-tip-class'\r\n     */templateClasses:'',/**\r\n     * Non-optional class added to tooltip templates. Foundation default is 'tooltip'.\r\n     * @option\r\n     * @example 'tooltip'\r\n     */tooltipClass:'tooltip',/**\r\n     * Class applied to the tooltip anchor element.\r\n     * @option\r\n     * @example 'has-tip'\r\n     */triggerClass:'has-tip',/**\r\n     * Minimum breakpoint size at which to open the tooltip.\r\n     * @option\r\n     * @example 'small'\r\n     */showOn:'small',/**\r\n     * Custom template to be used to generate markup for tooltip.\r\n     * @option\r\n     * @example '&lt;div class=\"tooltip\"&gt;&lt;/div&gt;'\r\n     */template:'',/**\r\n     * Text displayed in the tooltip template on open.\r\n     * @option\r\n     * @example 'Some cool space fact here.'\r\n     */tipText:'',touchCloseText:'Tap to close.',/**\r\n     * Allows the tooltip to remain open if triggered with a click or touch event.\r\n     * @option\r\n     * @example true\r\n     */clickOpen:true,/**\r\n     * Additional positioning classes, set by the JS\r\n     * @option\r\n     * @example 'top'\r\n     */positionClass:'',/**\r\n     * Distance, in pixels, the template should push away from the anchor on the Y axis.\r\n     * @option\r\n     * @example 10\r\n     */vOffset:10,/**\r\n     * Distance, in pixels, the template should push away from the anchor on the X axis, if aligned to a side.\r\n     * @option\r\n     * @example 12\r\n     */hOffset:12};/**\r\n   * TODO utilize resize event trigger\r\n   */// Window exports\nFoundation.plugin(Tooltip,'Tooltip');}(jQuery);\n\n},{}],16:[function(require,module,exports){\n'use strict';\n\n// Copyright (c) 2013 Keith Perhac @ DelfiNet (http://delfi-net.com)\n//\n// Based on the AutoRuby library created by:\n// Copyright (c) 2005-2008 spinelz.org (http://script.spinelz.org/)\n// \n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/*\r\n * Uncaught ReferenceError: baseKana is not defined.\r\n * となるのを修正\r\n */\n!function ($) {\n\t$.fn.autoKana = function (element1, element2, passedOptions) {\n\t\tvar options = $.extend({\n\t\t\t'katakana': false\n\t\t}, passedOptions),\n\t\t    kana_extraction_pattern = new RegExp('[^ 　ぁあ-んー]', 'g'),\n\t\t    kana_compacting_pattern = new RegExp('[ぁぃぅぇぉっゃゅょ]', 'g'),\n\t\t    elName = void 0,\n\t\t    elKana = void 0,\n\t\t    active = void 0,\n\t\t    timer = void 0,\n\t\t    flagConvert = void 0,\n\t\t    values = void 0,\n\t\t    baseKana = void 0,\n\t\t    ignoreString = void 0,\n\t\t    input = void 0;\n\n\t\telName = $(element1);\n\t\telKana = $(element2);\n\t\tactive = true;\n\t\t_stateClear();\n\n\t\telName.blur(_eventBlur);\n\t\telName.focus(_eventFocus);\n\t\telName.keydown(_eventKeyDown);\n\n\t\t/*\t\tfunction start() {\r\n  \t\t\tactive = true;\r\n  \t\t};\r\n  \r\n  \t\tfunction stop() {\r\n  \t\t\tactive = false;\r\n  \t\t};\r\n  \r\n  \t\tfunction toggle(event) {\r\n  \t\t\tvar ev = event || window.event;\r\n  \t\t\tif (event) {\r\n  \t\t\t\tvar el = Event.element(event);\r\n  \t\t\t\tif (el.checked) {\r\n  \t\t\t\t\tactive = true;\r\n  \t\t\t\t} else {\r\n  \t\t\t\t\tactive = false;\r\n  \t\t\t\t}\r\n  \t\t\t} else {\r\n  \t\t\t\tactive = !active;\r\n  \t\t\t}\r\n  \t\t};\r\n  */\n\t\tfunction _checkConvert(new_values) {\n\t\t\tif (!flagConvert) {\n\t\t\t\tif (Math.abs(values.length - new_values.length) > 1) {\n\t\t\t\t\tvar tmp_values = new_values.join('').replace(kana_compacting_pattern, '').split('');\n\t\t\t\t\tif (Math.abs(values.length - tmp_values.length) > 1) {\n\t\t\t\t\t\t_stateConvert();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (values.length == input.length && values.join('') != input) {\n\t\t\t\t\t\t_stateConvert();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction _checkValue() {\n\t\t\tvar new_input, new_values;\n\t\t\tnew_input = elName.val();\n\t\t\tif (new_input === '') {\n\t\t\t\t_stateClear();\n\t\t\t\t_setKana();\n\t\t\t} else {\n\t\t\t\tnew_input = _removeString(new_input);\n\t\t\t\tif (input == new_input) {\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tinput = new_input;\n\t\t\t\t\tif (!flagConvert) {\n\t\t\t\t\t\tnew_values = new_input.replace(kana_extraction_pattern, '').split('');\n\t\t\t\t\t\t_checkConvert(new_values);\n\t\t\t\t\t\t_setKana(new_values);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction _clearInterval() {\n\t\t\tclearInterval(timer);\n\t\t}\n\n\t\tfunction _eventBlur() {\n\t\t\t_clearInterval();\n\t\t}\n\n\t\tfunction _eventFocus() {\n\t\t\t_stateInput();\n\t\t\t_setInterval();\n\t\t}\n\n\t\tfunction _eventKeyDown() {\n\t\t\tif (flagConvert) {\n\t\t\t\t_stateInput();\n\t\t\t}\n\t\t}\n\n\t\tfunction _isHiragana(chara) {\n\t\t\treturn chara >= 12353 && chara <= 12435 || chara == 12445 || chara == 12446;\n\t\t}\n\n\t\tfunction _removeString(new_input) {\n\t\t\tvar ignoreString = void 0;\n\t\t\tif (new_input.match(ignoreString)) {\n\t\t\t\treturn new_input.replace(ignoreString, '');\n\t\t\t} else {\n\t\t\t\tvar i, ignoreArray, inputArray;\n\t\t\t\tignoreArray = ignoreString.split('');\n\t\t\t\tinputArray = new_input.split('');\n\t\t\t\tfor (i = 0; i < ignoreArray.length; i++) {\n\t\t\t\t\tif (ignoreArray[i] == inputArray[i]) {\n\t\t\t\t\t\tinputArray[i] = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn inputArray.join('');\n\t\t\t}\n\t\t}\n\n\t\tfunction _setInterval() {\n\t\t\ttimer = setInterval(_checkValue, 30);\n\t\t}\n\n\t\tfunction _setKana(new_values) {\n\t\t\tif (!flagConvert) {\n\t\t\t\tif (new_values) {\n\t\t\t\t\tvalues = new_values;\n\t\t\t\t}\n\t\t\t\tif (active) {\n\t\t\t\t\tvar _val = _toKatakana(baseKana + values.join(''));\n\t\t\t\t\telKana.val(_val);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction _stateClear() {\n\t\t\tbaseKana = '';\n\t\t\tflagConvert = false;\n\t\t\tignoreString = '';\n\t\t\tinput = '';\n\t\t\tvalues = [];\n\t\t}\n\n\t\tfunction _stateInput() {\n\t\t\tbaseKana = elKana.val();\n\t\t\tflagConvert = false;\n\t\t\tignoreString = elName.val();\n\t\t}\n\n\t\tfunction _stateConvert() {\n\t\t\tbaseKana = baseKana + values.join('');\n\t\t\tflagConvert = true;\n\t\t\tvalues = [];\n\t\t}\n\n\t\tfunction _toKatakana(src) {\n\t\t\tif (options.katakana) {\n\t\t\t\tvar c, i, str;\n\t\t\t\tstr = new String();\n\t\t\t\tfor (i = 0; i < src.length; i++) {\n\t\t\t\t\tc = src.charCodeAt(i);\n\t\t\t\t\tif (_isHiragana(c)) {\n\t\t\t\t\t\tstr += String.fromCharCode(c + 96);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstr += src.charAt(i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn str;\n\t\t\t} else {\n\t\t\t\treturn src;\n\t\t\t}\n\t\t}\n\t};\n}(jQuery);\n\n},{}],17:[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\n * @preserve\n * jquery.scrolldepth.js | v0.9.1\n * Copyright (c) 2016 Rob Flaherty (@robflaherty)\n * Licensed under the MIT and GPL licenses.\n */\n\n/* Universal module definition */\n\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['jquery'], factory);\n  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory((typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null));\n  } else {\n    // Browser globals\n    factory(jQuery);\n  }\n})(function ($) {\n\n  /* Scroll Depth */\n\n  \"use strict\";\n\n  var defaults = {\n    minHeight: 0,\n    elements: [],\n    percentage: true,\n    userTiming: true,\n    pixelDepth: true,\n    nonInteraction: true,\n    gaGlobal: false,\n    gtmOverride: false\n  };\n\n  var $window = $(window),\n      cache = [],\n      scrollEventBound = false,\n      lastPixelDepth = 0,\n      universalGA,\n      classicGA,\n      gaGlobal,\n      standardEventHandler;\n\n  /*\n   * Plugin\n   */\n\n  $.scrollDepth = function (options) {\n\n    var startTime = +new Date();\n\n    options = $.extend({}, defaults, options);\n\n    // Return early if document height is too small\n    if ($(document).height() < options.minHeight) {\n      return;\n    }\n\n    /*\n     * Determine which version of GA is being used\n     * \"ga\", \"__gaTracker\", _gaq\", and \"dataLayer\" are the possible globals\n     */\n\n    if (options.gaGlobal) {\n      universalGA = true;\n      gaGlobal = options.gaGlobal;\n    } else if (typeof ga === \"function\") {\n      universalGA = true;\n      gaGlobal = 'ga';\n    } else if (typeof __gaTracker === \"function\") {\n      universalGA = true;\n      gaGlobal = '__gaTracker';\n    }\n\n    if (typeof _gaq !== \"undefined\" && typeof _gaq.push === \"function\") {\n      classicGA = true;\n    }\n\n    if (typeof options.eventHandler === \"function\") {\n      standardEventHandler = options.eventHandler;\n    } else if (typeof dataLayer !== \"undefined\" && typeof dataLayer.push === \"function\" && !options.gtmOverride) {\n\n      standardEventHandler = function standardEventHandler(data) {\n        dataLayer.push(data);\n      };\n    }\n\n    /*\n     * Functions\n     */\n\n    function sendEvent(action, label, scrollDistance, timing) {\n\n      if (standardEventHandler) {\n\n        standardEventHandler({ 'event': 'ScrollDistance', 'eventCategory': 'Scroll Depth', 'eventAction': action, 'eventLabel': label, 'eventValue': 1, 'eventNonInteraction': options.nonInteraction });\n\n        if (options.pixelDepth && arguments.length > 2 && scrollDistance > lastPixelDepth) {\n          lastPixelDepth = scrollDistance;\n          standardEventHandler({ 'event': 'ScrollDistance', 'eventCategory': 'Scroll Depth', 'eventAction': 'Pixel Depth', 'eventLabel': rounded(scrollDistance), 'eventValue': 1, 'eventNonInteraction': options.nonInteraction });\n        }\n\n        if (options.userTiming && arguments.length > 3) {\n          standardEventHandler({ 'event': 'ScrollTiming', 'eventCategory': 'Scroll Depth', 'eventAction': action, 'eventLabel': label, 'eventTiming': timing });\n        }\n      } else {\n\n        if (universalGA) {\n\n          window[gaGlobal]('send', 'event', 'Scroll Depth', action, label, 1, { 'nonInteraction': options.nonInteraction });\n\n          if (options.pixelDepth && arguments.length > 2 && scrollDistance > lastPixelDepth) {\n            lastPixelDepth = scrollDistance;\n            window[gaGlobal]('send', 'event', 'Scroll Depth', 'Pixel Depth', rounded(scrollDistance), 1, { 'nonInteraction': options.nonInteraction });\n          }\n\n          if (options.userTiming && arguments.length > 3) {\n            window[gaGlobal]('send', 'timing', 'Scroll Depth', action, timing, label);\n          }\n        }\n\n        if (classicGA) {\n\n          _gaq.push(['_trackEvent', 'Scroll Depth', action, label, 1, options.nonInteraction]);\n\n          if (options.pixelDepth && arguments.length > 2 && scrollDistance > lastPixelDepth) {\n            lastPixelDepth = scrollDistance;\n            _gaq.push(['_trackEvent', 'Scroll Depth', 'Pixel Depth', rounded(scrollDistance), 1, options.nonInteraction]);\n          }\n\n          if (options.userTiming && arguments.length > 3) {\n            _gaq.push(['_trackTiming', 'Scroll Depth', action, timing, label, 100]);\n          }\n        }\n      }\n    }\n\n    function calculateMarks(docHeight) {\n      return {\n        '10%': parseInt(docHeight * .10, 10),\n        '20%': parseInt(docHeight * .20, 10),\n        '30%': parseInt(docHeight * .30, 10),\n        '40%': parseInt(docHeight * .40, 10),\n        '50%': parseInt(docHeight * .50, 10),\n        '60%': parseInt(docHeight * .60, 10),\n        '70%': parseInt(docHeight * .70, 10),\n        '80%': parseInt(docHeight * .80, 10),\n        '90%': parseInt(docHeight * .90, 10),\n        // Cushion to trigger 100% event in iOS\n        '100%': docHeight - 5\n      };\n    }\n\n    function checkMarks(marks, scrollDistance, timing) {\n      // Check each active mark\n      $.each(marks, function (key, val) {\n        if ($.inArray(key, cache) === -1 && scrollDistance >= val) {\n          sendEvent('Percentage', key, scrollDistance, timing);\n          cache.push(key);\n        }\n      });\n    }\n\n    function checkElements(elements, scrollDistance, timing) {\n      $.each(elements, function (index, elem) {\n        if ($.inArray(elem, cache) === -1 && $(elem).length) {\n          if (scrollDistance >= $(elem).offset().top) {\n            sendEvent('Elements', elem, scrollDistance, timing);\n            cache.push(elem);\n          }\n        }\n      });\n    }\n\n    function rounded(scrollDistance) {\n      // Returns String\n      return (Math.floor(scrollDistance / 250) * 250).toString();\n    }\n\n    function init() {\n      bindScrollDepth();\n    }\n\n    /*\n     * Public Methods\n     */\n\n    // Reset Scroll Depth with the originally initialized options\n    $.scrollDepth.reset = function () {\n      cache = [];\n      lastPixelDepth = 0;\n      $window.off('scroll.scrollDepth');\n      bindScrollDepth();\n    };\n\n    // Add DOM elements to be tracked\n    $.scrollDepth.addElements = function (elems) {\n\n      if (typeof elems == \"undefined\" || !$.isArray(elems)) {\n        return;\n      }\n\n      $.merge(options.elements, elems);\n\n      // If scroll event has been unbound from window, rebind\n      if (!scrollEventBound) {\n        bindScrollDepth();\n      }\n    };\n\n    // Remove DOM elements currently tracked\n    $.scrollDepth.removeElements = function (elems) {\n\n      if (typeof elems == \"undefined\" || !$.isArray(elems)) {\n        return;\n      }\n\n      $.each(elems, function (index, elem) {\n\n        var inElementsArray = $.inArray(elem, options.elements);\n        var inCacheArray = $.inArray(elem, cache);\n\n        if (inElementsArray != -1) {\n          options.elements.splice(inElementsArray, 1);\n        }\n\n        if (inCacheArray != -1) {\n          cache.splice(inCacheArray, 1);\n        }\n      });\n    };\n\n    /*\n     * Throttle function borrowed from:\n     * Underscore.js 1.5.2\n     * http://underscorejs.org\n     * (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n     * Underscore may be freely distributed under the MIT license.\n     */\n\n    function throttle(func, wait) {\n      var context, args, result;\n      var timeout = null;\n      var previous = 0;\n      var later = function later() {\n        previous = new Date();\n        timeout = null;\n        result = func.apply(context, args);\n      };\n      return function () {\n        var now = new Date();\n        if (!previous) previous = now;\n        var remaining = wait - (now - previous);\n        context = this;\n        args = arguments;\n        if (remaining <= 0) {\n          clearTimeout(timeout);\n          timeout = null;\n          previous = now;\n          result = func.apply(context, args);\n        } else if (!timeout) {\n          timeout = setTimeout(later, remaining);\n        }\n        return result;\n      };\n    }\n\n    /*\n     * Scroll Event\n     */\n\n    function bindScrollDepth() {\n\n      scrollEventBound = true;\n\n      $window.on('scroll.scrollDepth', throttle(function () {\n        /*\n         * We calculate document and window height on each scroll event to\n         * account for dynamic DOM changes.\n         */\n\n        var docHeight = $(document).height(),\n            winHeight = window.innerHeight ? window.innerHeight : $window.height(),\n            scrollDistance = $window.scrollTop() + winHeight,\n\n\n        // Recalculate percentage marks\n        marks = calculateMarks(docHeight),\n\n\n        // Timing\n        timing = +new Date() - startTime;\n\n        // If all marks already hit, unbind scroll event\n        if (cache.length >= options.elements.length + (options.percentage ? 10 : 0)) {\n          $window.off('scroll.scrollDepth');\n          scrollEventBound = false;\n          return;\n        }\n\n        // Check specified DOM elements\n        if (options.elements) {\n          checkElements(options.elements, scrollDistance, timing);\n        }\n\n        // Check standard marks\n        if (options.percentage) {\n          checkMarks(marks, scrollDistance, timing);\n        }\n      }, 500));\n    }\n\n    init();\n  };\n});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],18:[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n// Sticky Plugin v1.0.3 for jQuery\n// =============\n// Author: Anthony Garand\n// Improvements by German M. Bravo (Kronuz) and Ruud Kamphuis (ruudk)\n// Improvements by Leonardo C. Daronco (daronco)\n// Created: 02/14/2011\n// Date: 07/20/2015\n// Website: http://stickyjs.com/\n// Description: Makes an element on the page stick on the screen as you scroll\n//              It will only set the 'top' and 'position' of your element, you\n//              might need to adjust the width in some cases.\n\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['jquery'], factory);\n  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object' && module.exports) {\n    // Node/CommonJS\n    module.exports = factory((typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null));\n  } else {\n    // Browser globals\n    factory(jQuery);\n  }\n})(function ($) {\n  var slice = Array.prototype.slice; // save ref to original slice()\n  var splice = Array.prototype.splice; // save ref to original slice()\n\n  var defaults = {\n    topSpacing: 0,\n    bottomSpacing: 0,\n    className: 'is-sticky',\n    wrapperClassName: 'sticky-wrapper',\n    center: false,\n    getWidthFrom: '',\n    widthFromWrapper: true, // works only when .getWidthFrom is empty\n    responsiveWidth: false\n  },\n      $window = $(window),\n      $document = $(document),\n      sticked = [],\n      windowHeight = $window.height(),\n      scroller = function scroller() {\n    var scrollTop = $window.scrollTop(),\n        documentHeight = $document.height(),\n        dwh = documentHeight - windowHeight,\n        extra = scrollTop > dwh ? dwh - scrollTop : 0;\n\n    for (var i = 0, l = sticked.length; i < l; i++) {\n      var s = sticked[i],\n          elementTop = s.stickyWrapper.offset().top,\n          etse = elementTop - s.topSpacing - extra;\n\n      //update height in case of dynamic content\n      s.stickyWrapper.css('height', s.stickyElement.outerHeight());\n\n      if (scrollTop <= etse) {\n        if (s.currentTop !== null) {\n          s.stickyElement.css({\n            'width': '',\n            'position': '',\n            'top': ''\n          });\n          s.stickyElement.parent().removeClass(s.className);\n          s.stickyElement.trigger('sticky-end', [s]);\n          s.currentTop = null;\n        }\n      } else {\n        var newTop = documentHeight - s.stickyElement.outerHeight() - s.topSpacing - s.bottomSpacing - scrollTop - extra;\n        if (newTop < 0) {\n          newTop = newTop + s.topSpacing;\n        } else {\n          newTop = s.topSpacing;\n        }\n        if (s.currentTop !== newTop) {\n          var newWidth;\n          if (s.getWidthFrom) {\n            newWidth = $(s.getWidthFrom).width() || null;\n          } else if (s.widthFromWrapper) {\n            newWidth = s.stickyWrapper.width();\n          }\n          if (newWidth == null) {\n            newWidth = s.stickyElement.width();\n          }\n          s.stickyElement.css('width', newWidth).css('position', 'fixed').css('top', newTop);\n\n          s.stickyElement.parent().addClass(s.className);\n\n          if (s.currentTop === null) {\n            s.stickyElement.trigger('sticky-start', [s]);\n          } else {\n            // sticky is started but it have to be repositioned\n            s.stickyElement.trigger('sticky-update', [s]);\n          }\n\n          if (s.currentTop === s.topSpacing && s.currentTop > newTop || s.currentTop === null && newTop < s.topSpacing) {\n            // just reached bottom || just started to stick but bottom is already reached\n            s.stickyElement.trigger('sticky-bottom-reached', [s]);\n          } else if (s.currentTop !== null && newTop === s.topSpacing && s.currentTop < newTop) {\n            // sticky is started && sticked at topSpacing && overflowing from top just finished\n            s.stickyElement.trigger('sticky-bottom-unreached', [s]);\n          }\n\n          s.currentTop = newTop;\n        }\n\n        // Check if sticky has reached end of container and stop sticking\n        var stickyWrapperContainer = s.stickyWrapper.parent();\n        var unstick = s.stickyElement.offset().top + s.stickyElement.outerHeight() >= stickyWrapperContainer.offset().top + stickyWrapperContainer.outerHeight() && s.stickyElement.offset().top <= s.topSpacing;\n\n        if (unstick) {\n          s.stickyElement.css('position', 'absolute').css('top', '').css('bottom', 0);\n        } else {\n          s.stickyElement.css('position', 'fixed').css('top', newTop).css('bottom', '');\n        }\n      }\n    }\n  },\n      resizer = function resizer() {\n    windowHeight = $window.height();\n\n    for (var i = 0, l = sticked.length; i < l; i++) {\n      var s = sticked[i];\n      var newWidth = null;\n      if (s.getWidthFrom) {\n        if (s.responsiveWidth) {\n          newWidth = $(s.getWidthFrom).width();\n        }\n      } else if (s.widthFromWrapper) {\n        newWidth = s.stickyWrapper.width();\n      }\n      if (newWidth != null) {\n        s.stickyElement.css('width', newWidth);\n      }\n    }\n  },\n      methods = {\n    init: function init(options) {\n      var o = $.extend({}, defaults, options);\n      return this.each(function () {\n        var stickyElement = $(this);\n\n        var stickyId = stickyElement.attr('id');\n        var stickyHeight = stickyElement.outerHeight();\n        var wrapperId = stickyId ? stickyId + '-' + defaults.wrapperClassName : defaults.wrapperClassName;\n        var wrapper = $('<div></div>').attr('id', wrapperId).addClass(o.wrapperClassName);\n\n        stickyElement.wrapAll(wrapper);\n\n        var stickyWrapper = stickyElement.parent();\n\n        if (o.center) {\n          stickyWrapper.css({ width: stickyElement.outerWidth(), marginLeft: \"auto\", marginRight: \"auto\" });\n        }\n\n        if (stickyElement.css(\"float\") === \"right\") {\n          stickyElement.css({ \"float\": \"none\" }).parent().css({ \"float\": \"right\" });\n        }\n\n        stickyWrapper.css('height', stickyHeight);\n\n        o.stickyElement = stickyElement;\n        o.stickyWrapper = stickyWrapper;\n        o.currentTop = null;\n\n        sticked.push(o);\n      });\n    },\n    update: scroller,\n    unstick: function unstick(options) {\n      return this.each(function () {\n        var that = this;\n        var unstickyElement = $(that);\n\n        var removeIdx = -1;\n        var i = sticked.length;\n        while (i-- > 0) {\n          if (sticked[i].stickyElement.get(0) === that) {\n            splice.call(sticked, i, 1);\n            removeIdx = i;\n          }\n        }\n        if (removeIdx !== -1) {\n          unstickyElement.unwrap();\n          unstickyElement.css({\n            'width': '',\n            'position': '',\n            'top': '',\n            'float': ''\n          });\n        }\n      });\n    }\n  };\n\n  // should be more efficient than using $window.scroll(scroller) and $window.resize(resizer):\n  if (window.addEventListener) {\n    window.addEventListener('scroll', scroller, false);\n    window.addEventListener('resize', resizer, false);\n  } else if (window.attachEvent) {\n    window.attachEvent('onscroll', scroller);\n    window.attachEvent('onresize', resizer);\n  }\n\n  $.fn.sticky = function (method) {\n    if (methods[method]) {\n      return methods[method].apply(this, slice.call(arguments, 1));\n    } else if ((typeof method === 'undefined' ? 'undefined' : _typeof(method)) === 'object' || !method) {\n      return methods.init.apply(this, arguments);\n    } else {\n      $.error('Method ' + method + ' does not exist on jQuery.sticky');\n    }\n  };\n\n  $.fn.unstick = function (method) {\n    if (methods[method]) {\n      return methods[method].apply(this, slice.call(arguments, 1));\n    } else if ((typeof method === 'undefined' ? 'undefined' : _typeof(method)) === 'object' || !method) {\n      return methods.unstick.apply(this, arguments);\n    } else {\n      $.error('Method ' + method + ' does not exist on jQuery.sticky');\n    }\n  };\n  $(function () {\n    setTimeout(scroller, 0);\n  });\n});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],19:[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*\r\n     _ _      _       _\r\n ___| (_) ___| | __  (_)___\r\n/ __| | |/ __| |/ /  | / __|\r\n\\__ \\ | | (__|   < _ | \\__ \\\r\n|___/_|_|\\___|_|\\_(_)/ |___/\r\n                   |__/\r\n\r\n Version: 1.5.7\r\n  Author: Ken Wheeler\r\n Website: http://kenwheeler.github.io\r\n    Docs: http://kenwheeler.github.io/slick\r\n    Repo: http://github.com/kenwheeler/slick\r\n  Issues: http://github.com/kenwheeler/slick/issues\r\n\r\n */\n/* global window, document, define, jQuery, setInterval, clearInterval */\n(function (factory) {\n    'use strict';\n\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports !== 'undefined') {\n        module.exports = factory((typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null));\n    } else {\n        factory(jQuery);\n    }\n})(function ($) {\n    'use strict';\n\n    var Slick = window.Slick || {};\n\n    Slick = function () {\n\n        var instanceUid = 0;\n\n        function Slick(element, settings) {\n\n            var _ = this,\n                dataSettings;\n\n            _.defaults = {\n                accessibility: true,\n                adaptiveHeight: false,\n                appendArrows: $(element),\n                appendDots: $(element),\n                arrows: true,\n                asNavFor: null,\n                prevArrow: '<button type=\"button\" data-role=\"none\" class=\"slick-prev\" aria-label=\"Previous\" tabindex=\"0\" role=\"button\">Previous</button>',\n                nextArrow: '<button type=\"button\" data-role=\"none\" class=\"slick-next\" aria-label=\"Next\" tabindex=\"0\" role=\"button\">Next</button>',\n                autoplay: false,\n                autoplaySpeed: 3000,\n                centerMode: false,\n                centerPadding: '50px',\n                cssEase: 'ease',\n                customPaging: function customPaging(slider, i) {\n                    return '<button type=\"button\" data-role=\"none\" role=\"button\" aria-required=\"false\" tabindex=\"0\">' + (i + 1) + '</button>';\n                },\n                dots: false,\n                dotsClass: 'slick-dots',\n                draggable: true,\n                easing: 'linear',\n                edgeFriction: 0.35,\n                fade: false,\n                focusOnSelect: false,\n                infinite: true,\n                initialSlide: 0,\n                lazyLoad: 'ondemand',\n                mobileFirst: false,\n                pauseOnHover: true,\n                pauseOnDotsHover: false,\n                respondTo: 'window',\n                responsive: null,\n                rows: 1,\n                rtl: false,\n                slide: '',\n                slidesPerRow: 1,\n                slidesToShow: 1,\n                slidesToScroll: 1,\n                speed: 500,\n                swipe: true,\n                swipeToSlide: false,\n                touchMove: true,\n                touchThreshold: 5,\n                useCSS: true,\n                variableWidth: false,\n                vertical: false,\n                verticalSwiping: false,\n                waitForAnimate: true,\n                zIndex: 1000\n            };\n\n            _.initials = {\n                animating: false,\n                dragging: false,\n                autoPlayTimer: null,\n                currentDirection: 0,\n                currentLeft: null,\n                currentSlide: 0,\n                direction: 1,\n                $dots: null,\n                listWidth: null,\n                listHeight: null,\n                loadIndex: 0,\n                $nextArrow: null,\n                $prevArrow: null,\n                slideCount: null,\n                slideWidth: null,\n                $slideTrack: null,\n                $slides: null,\n                sliding: false,\n                slideOffset: 0,\n                swipeLeft: null,\n                $list: null,\n                touchObject: {},\n                transformsEnabled: false,\n                unslicked: false\n            };\n\n            $.extend(_, _.initials);\n\n            _.activeBreakpoint = null;\n            _.animType = null;\n            _.animProp = null;\n            _.breakpoints = [];\n            _.breakpointSettings = [];\n            _.cssTransitions = false;\n            _.hidden = 'hidden';\n            _.paused = false;\n            _.positionProp = null;\n            _.respondTo = null;\n            _.rowCount = 1;\n            _.shouldClick = true;\n            _.$slider = $(element);\n            _.$slidesCache = null;\n            _.transformType = null;\n            _.transitionType = null;\n            _.visibilityChange = 'visibilitychange';\n            _.windowWidth = 0;\n            _.windowTimer = null;\n\n            dataSettings = $(element).data('slick') || {};\n\n            _.options = $.extend({}, _.defaults, dataSettings, settings);\n\n            _.currentSlide = _.options.initialSlide;\n\n            _.originalSettings = _.options;\n\n            if (typeof document.mozHidden !== 'undefined') {\n                _.hidden = 'mozHidden';\n                _.visibilityChange = 'mozvisibilitychange';\n            } else if (typeof document.webkitHidden !== 'undefined') {\n                _.hidden = 'webkitHidden';\n                _.visibilityChange = 'webkitvisibilitychange';\n            }\n\n            _.autoPlay = $.proxy(_.autoPlay, _);\n            _.autoPlayClear = $.proxy(_.autoPlayClear, _);\n            _.changeSlide = $.proxy(_.changeSlide, _);\n            _.clickHandler = $.proxy(_.clickHandler, _);\n            _.selectHandler = $.proxy(_.selectHandler, _);\n            _.setPosition = $.proxy(_.setPosition, _);\n            _.swipeHandler = $.proxy(_.swipeHandler, _);\n            _.dragHandler = $.proxy(_.dragHandler, _);\n            _.keyHandler = $.proxy(_.keyHandler, _);\n            _.autoPlayIterator = $.proxy(_.autoPlayIterator, _);\n\n            _.instanceUid = instanceUid++;\n\n            // A simple way to check for HTML strings\n            // Strict HTML recognition (must start with <)\n            // Extracted from jQuery v1.11 source\n            _.htmlExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*)$/;\n\n            _.registerBreakpoints();\n            _.init(true);\n            _.checkResponsive(true);\n        }\n\n        return Slick;\n    }();\n\n    Slick.prototype.addSlide = Slick.prototype.slickAdd = function (markup, index, addBefore) {\n\n        var _ = this;\n\n        if (typeof index === 'boolean') {\n            addBefore = index;\n            index = null;\n        } else if (index < 0 || index >= _.slideCount) {\n            return false;\n        }\n\n        _.unload();\n\n        if (typeof index === 'number') {\n            if (index === 0 && _.$slides.length === 0) {\n                $(markup).appendTo(_.$slideTrack);\n            } else if (addBefore) {\n                $(markup).insertBefore(_.$slides.eq(index));\n            } else {\n                $(markup).insertAfter(_.$slides.eq(index));\n            }\n        } else {\n            if (addBefore === true) {\n                $(markup).prependTo(_.$slideTrack);\n            } else {\n                $(markup).appendTo(_.$slideTrack);\n            }\n        }\n\n        _.$slides = _.$slideTrack.children(this.options.slide);\n\n        _.$slideTrack.children(this.options.slide).detach();\n\n        _.$slideTrack.append(_.$slides);\n\n        _.$slides.each(function (index, element) {\n            $(element).attr('data-slick-index', index);\n        });\n\n        _.$slidesCache = _.$slides;\n\n        _.reinit();\n    };\n\n    Slick.prototype.animateHeight = function () {\n        var _ = this;\n        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n            _.$list.animate({\n                height: targetHeight\n            }, _.options.speed);\n        }\n    };\n\n    Slick.prototype.animateSlide = function (targetLeft, callback) {\n\n        var animProps = {},\n            _ = this;\n\n        _.animateHeight();\n\n        if (_.options.rtl === true && _.options.vertical === false) {\n            targetLeft = -targetLeft;\n        }\n        if (_.transformsEnabled === false) {\n            if (_.options.vertical === false) {\n                _.$slideTrack.animate({\n                    left: targetLeft\n                }, _.options.speed, _.options.easing, callback);\n            } else {\n                _.$slideTrack.animate({\n                    top: targetLeft\n                }, _.options.speed, _.options.easing, callback);\n            }\n        } else {\n\n            if (_.cssTransitions === false) {\n                if (_.options.rtl === true) {\n                    _.currentLeft = -_.currentLeft;\n                }\n                $({\n                    animStart: _.currentLeft\n                }).animate({\n                    animStart: targetLeft\n                }, {\n                    duration: _.options.speed,\n                    easing: _.options.easing,\n                    step: function step(now) {\n                        now = Math.ceil(now);\n                        if (_.options.vertical === false) {\n                            animProps[_.animType] = 'translate(' + now + 'px, 0px)';\n                            _.$slideTrack.css(animProps);\n                        } else {\n                            animProps[_.animType] = 'translate(0px,' + now + 'px)';\n                            _.$slideTrack.css(animProps);\n                        }\n                    },\n                    complete: function complete() {\n                        if (callback) {\n                            callback.call();\n                        }\n                    }\n                });\n            } else {\n\n                _.applyTransition();\n                targetLeft = Math.ceil(targetLeft);\n\n                if (_.options.vertical === false) {\n                    animProps[_.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';\n                } else {\n                    animProps[_.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';\n                }\n                _.$slideTrack.css(animProps);\n\n                if (callback) {\n                    setTimeout(function () {\n\n                        _.disableTransition();\n\n                        callback.call();\n                    }, _.options.speed);\n                }\n            }\n        }\n    };\n\n    Slick.prototype.asNavFor = function (index) {\n\n        var _ = this,\n            asNavFor = _.options.asNavFor;\n\n        if (asNavFor && asNavFor !== null) {\n            asNavFor = $(asNavFor).not(_.$slider);\n        }\n\n        if (asNavFor !== null && (typeof asNavFor === 'undefined' ? 'undefined' : _typeof(asNavFor)) === 'object') {\n            asNavFor.each(function () {\n                var target = $(this).slick('getSlick');\n                if (!target.unslicked) {\n                    target.slideHandler(index, true);\n                }\n            });\n        }\n    };\n\n    Slick.prototype.applyTransition = function (slide) {\n\n        var _ = this,\n            transition = {};\n\n        if (_.options.fade === false) {\n            transition[_.transitionType] = _.transformType + ' ' + _.options.speed + 'ms ' + _.options.cssEase;\n        } else {\n            transition[_.transitionType] = 'opacity ' + _.options.speed + 'ms ' + _.options.cssEase;\n        }\n\n        if (_.options.fade === false) {\n            _.$slideTrack.css(transition);\n        } else {\n            _.$slides.eq(slide).css(transition);\n        }\n    };\n\n    Slick.prototype.autoPlay = function () {\n\n        var _ = this;\n\n        if (_.autoPlayTimer) {\n            clearInterval(_.autoPlayTimer);\n        }\n\n        if (_.slideCount > _.options.slidesToShow && _.paused !== true) {\n            _.autoPlayTimer = setInterval(_.autoPlayIterator, _.options.autoplaySpeed);\n        }\n    };\n\n    Slick.prototype.autoPlayClear = function () {\n\n        var _ = this;\n        if (_.autoPlayTimer) {\n            clearInterval(_.autoPlayTimer);\n        }\n    };\n\n    Slick.prototype.autoPlayIterator = function () {\n\n        var _ = this;\n\n        if (_.options.infinite === false) {\n\n            if (_.direction === 1) {\n\n                if (_.currentSlide + 1 === _.slideCount - 1) {\n                    _.direction = 0;\n                }\n\n                _.slideHandler(_.currentSlide + _.options.slidesToScroll);\n            } else {\n\n                if (_.currentSlide - 1 === 0) {\n\n                    _.direction = 1;\n                }\n\n                _.slideHandler(_.currentSlide - _.options.slidesToScroll);\n            }\n        } else {\n\n            _.slideHandler(_.currentSlide + _.options.slidesToScroll);\n        }\n    };\n\n    Slick.prototype.buildArrows = function () {\n\n        var _ = this;\n\n        if (_.options.arrows === true) {\n\n            _.$prevArrow = $(_.options.prevArrow).addClass('slick-arrow');\n            _.$nextArrow = $(_.options.nextArrow).addClass('slick-arrow');\n\n            if (_.slideCount > _.options.slidesToShow) {\n\n                _.$prevArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n                _.$nextArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n\n                if (_.htmlExpr.test(_.options.prevArrow)) {\n                    _.$prevArrow.prependTo(_.options.appendArrows);\n                }\n\n                if (_.htmlExpr.test(_.options.nextArrow)) {\n                    _.$nextArrow.appendTo(_.options.appendArrows);\n                }\n\n                if (_.options.infinite !== true) {\n                    _.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                }\n            } else {\n\n                _.$prevArrow.add(_.$nextArrow).addClass('slick-hidden').attr({\n                    'aria-disabled': 'true',\n                    'tabindex': '-1'\n                });\n            }\n        }\n    };\n\n    Slick.prototype.buildDots = function () {\n\n        var _ = this,\n            i,\n            dotString;\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            dotString = '<ul class=\"' + _.options.dotsClass + '\">';\n\n            for (i = 0; i <= _.getDotCount(); i += 1) {\n                dotString += '<li>' + _.options.customPaging.call(this, _, i) + '</li>';\n            }\n\n            dotString += '</ul>';\n\n            _.$dots = $(dotString).appendTo(_.options.appendDots);\n\n            _.$dots.find('li').first().addClass('slick-active').attr('aria-hidden', 'false');\n        }\n    };\n\n    Slick.prototype.buildOut = function () {\n\n        var _ = this;\n\n        _.$slides = _.$slider.children(_.options.slide + ':not(.slick-cloned)').addClass('slick-slide');\n\n        _.slideCount = _.$slides.length;\n\n        _.$slides.each(function (index, element) {\n            $(element).attr('data-slick-index', index).data('originalStyling', $(element).attr('style') || '');\n        });\n\n        _.$slidesCache = _.$slides;\n\n        _.$slider.addClass('slick-slider');\n\n        _.$slideTrack = _.slideCount === 0 ? $('<div class=\"slick-track\"/>').appendTo(_.$slider) : _.$slides.wrapAll('<div class=\"slick-track\"/>').parent();\n\n        _.$list = _.$slideTrack.wrap('<div aria-live=\"polite\" class=\"slick-list\"/>').parent();\n        _.$slideTrack.css('opacity', 0);\n\n        if (_.options.centerMode === true || _.options.swipeToSlide === true) {\n            _.options.slidesToScroll = 1;\n        }\n\n        $('img[data-lazy]', _.$slider).not('[src]').addClass('slick-loading');\n\n        _.setupInfinite();\n\n        _.buildArrows();\n\n        _.buildDots();\n\n        _.updateDots();\n\n        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);\n\n        if (_.options.draggable === true) {\n            _.$list.addClass('draggable');\n        }\n    };\n\n    Slick.prototype.buildRows = function () {\n\n        var _ = this,\n            a,\n            b,\n            c,\n            newSlides,\n            numOfSlides,\n            originalSlides,\n            slidesPerSection;\n\n        newSlides = document.createDocumentFragment();\n        originalSlides = _.$slider.children();\n\n        if (_.options.rows > 1) {\n\n            slidesPerSection = _.options.slidesPerRow * _.options.rows;\n            numOfSlides = Math.ceil(originalSlides.length / slidesPerSection);\n\n            for (a = 0; a < numOfSlides; a++) {\n                var slide = document.createElement('div');\n                for (b = 0; b < _.options.rows; b++) {\n                    var row = document.createElement('div');\n                    for (c = 0; c < _.options.slidesPerRow; c++) {\n                        var target = a * slidesPerSection + (b * _.options.slidesPerRow + c);\n                        if (originalSlides.get(target)) {\n                            row.appendChild(originalSlides.get(target));\n                        }\n                    }\n                    slide.appendChild(row);\n                }\n                newSlides.appendChild(slide);\n            }\n\n            _.$slider.html(newSlides);\n            _.$slider.children().children().children().css({\n                'width': 100 / _.options.slidesPerRow + '%',\n                'display': 'inline-block'\n            });\n        }\n    };\n\n    Slick.prototype.checkResponsive = function (initial, forceUpdate) {\n\n        var _ = this,\n            breakpoint,\n            targetBreakpoint,\n            respondToWidth,\n            triggerBreakpoint = false;\n        var sliderWidth = _.$slider.width();\n        var windowWidth = window.innerWidth || $(window).width();\n\n        if (_.respondTo === 'window') {\n            respondToWidth = windowWidth;\n        } else if (_.respondTo === 'slider') {\n            respondToWidth = sliderWidth;\n        } else if (_.respondTo === 'min') {\n            respondToWidth = Math.min(windowWidth, sliderWidth);\n        }\n\n        if (_.options.responsive && _.options.responsive.length && _.options.responsive !== null) {\n\n            targetBreakpoint = null;\n\n            for (breakpoint in _.breakpoints) {\n                if (_.breakpoints.hasOwnProperty(breakpoint)) {\n                    if (_.originalSettings.mobileFirst === false) {\n                        if (respondToWidth < _.breakpoints[breakpoint]) {\n                            targetBreakpoint = _.breakpoints[breakpoint];\n                        }\n                    } else {\n                        if (respondToWidth > _.breakpoints[breakpoint]) {\n                            targetBreakpoint = _.breakpoints[breakpoint];\n                        }\n                    }\n                }\n            }\n\n            if (targetBreakpoint !== null) {\n                if (_.activeBreakpoint !== null) {\n                    if (targetBreakpoint !== _.activeBreakpoint || forceUpdate) {\n                        _.activeBreakpoint = targetBreakpoint;\n                        if (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n                            _.unslick(targetBreakpoint);\n                        } else {\n                            _.options = $.extend({}, _.originalSettings, _.breakpointSettings[targetBreakpoint]);\n                            if (initial === true) {\n                                _.currentSlide = _.options.initialSlide;\n                            }\n                            _.refresh(initial);\n                        }\n                        triggerBreakpoint = targetBreakpoint;\n                    }\n                } else {\n                    _.activeBreakpoint = targetBreakpoint;\n                    if (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n                        _.unslick(targetBreakpoint);\n                    } else {\n                        _.options = $.extend({}, _.originalSettings, _.breakpointSettings[targetBreakpoint]);\n                        if (initial === true) {\n                            _.currentSlide = _.options.initialSlide;\n                        }\n                        _.refresh(initial);\n                    }\n                    triggerBreakpoint = targetBreakpoint;\n                }\n            } else {\n                if (_.activeBreakpoint !== null) {\n                    _.activeBreakpoint = null;\n                    _.options = _.originalSettings;\n                    if (initial === true) {\n                        _.currentSlide = _.options.initialSlide;\n                    }\n                    _.refresh(initial);\n                    triggerBreakpoint = targetBreakpoint;\n                }\n            }\n\n            // only trigger breakpoints during an actual break. not on initialize.\n            if (!initial && triggerBreakpoint !== false) {\n                _.$slider.trigger('breakpoint', [_, triggerBreakpoint]);\n            }\n        }\n    };\n\n    Slick.prototype.changeSlide = function (event, dontAnimate) {\n\n        var _ = this,\n            $target = $(event.target),\n            indexOffset,\n            slideOffset,\n            unevenOffset;\n\n        // If target is a link, prevent default action.\n        if ($target.is('a')) {\n            event.preventDefault();\n        }\n\n        // If target is not the <li> element (ie: a child), find the <li>.\n        if (!$target.is('li')) {\n            $target = $target.closest('li');\n        }\n\n        unevenOffset = _.slideCount % _.options.slidesToScroll !== 0;\n        indexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll;\n\n        switch (event.data.message) {\n\n            case 'previous':\n                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset;\n                if (_.slideCount > _.options.slidesToShow) {\n                    _.slideHandler(_.currentSlide - slideOffset, false, dontAnimate);\n                }\n                break;\n\n            case 'next':\n                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : indexOffset;\n                if (_.slideCount > _.options.slidesToShow) {\n                    _.slideHandler(_.currentSlide + slideOffset, false, dontAnimate);\n                }\n                break;\n\n            case 'index':\n                var index = event.data.index === 0 ? 0 : event.data.index || $target.index() * _.options.slidesToScroll;\n\n                _.slideHandler(_.checkNavigable(index), false, dontAnimate);\n                $target.children().trigger('focus');\n                break;\n\n            default:\n                return;\n        }\n    };\n\n    Slick.prototype.checkNavigable = function (index) {\n\n        var _ = this,\n            navigables,\n            prevNavigable;\n\n        navigables = _.getNavigableIndexes();\n        prevNavigable = 0;\n        if (index > navigables[navigables.length - 1]) {\n            index = navigables[navigables.length - 1];\n        } else {\n            for (var n in navigables) {\n                if (index < navigables[n]) {\n                    index = prevNavigable;\n                    break;\n                }\n                prevNavigable = navigables[n];\n            }\n        }\n\n        return index;\n    };\n\n    Slick.prototype.cleanUpEvents = function () {\n\n        var _ = this;\n\n        if (_.options.dots && _.$dots !== null) {\n\n            $('li', _.$dots).off('click.slick', _.changeSlide);\n\n            if (_.options.pauseOnDotsHover === true && _.options.autoplay === true) {\n\n                $('li', _.$dots).off('mouseenter.slick', $.proxy(_.setPaused, _, true)).off('mouseleave.slick', $.proxy(_.setPaused, _, false));\n            }\n        }\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n            _.$prevArrow && _.$prevArrow.off('click.slick', _.changeSlide);\n            _.$nextArrow && _.$nextArrow.off('click.slick', _.changeSlide);\n        }\n\n        _.$list.off('touchstart.slick mousedown.slick', _.swipeHandler);\n        _.$list.off('touchmove.slick mousemove.slick', _.swipeHandler);\n        _.$list.off('touchend.slick mouseup.slick', _.swipeHandler);\n        _.$list.off('touchcancel.slick mouseleave.slick', _.swipeHandler);\n\n        _.$list.off('click.slick', _.clickHandler);\n\n        $(document).off(_.visibilityChange, _.visibility);\n\n        _.$list.off('mouseenter.slick', $.proxy(_.setPaused, _, true));\n        _.$list.off('mouseleave.slick', $.proxy(_.setPaused, _, false));\n\n        if (_.options.accessibility === true) {\n            _.$list.off('keydown.slick', _.keyHandler);\n        }\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().off('click.slick', _.selectHandler);\n        }\n\n        $(window).off('orientationchange.slick.slick-' + _.instanceUid, _.orientationChange);\n\n        $(window).off('resize.slick.slick-' + _.instanceUid, _.resize);\n\n        $('[draggable!=true]', _.$slideTrack).off('dragstart', _.preventDefault);\n\n        $(window).off('load.slick.slick-' + _.instanceUid, _.setPosition);\n        $(document).off('ready.slick.slick-' + _.instanceUid, _.setPosition);\n    };\n\n    Slick.prototype.cleanUpRows = function () {\n\n        var _ = this,\n            originalSlides;\n\n        if (_.options.rows > 1) {\n            originalSlides = _.$slides.children().children();\n            originalSlides.removeAttr('style');\n            _.$slider.html(originalSlides);\n        }\n    };\n\n    Slick.prototype.clickHandler = function (event) {\n\n        var _ = this;\n\n        if (_.shouldClick === false) {\n            event.stopImmediatePropagation();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    Slick.prototype.destroy = function (refresh) {\n\n        var _ = this;\n\n        _.autoPlayClear();\n\n        _.touchObject = {};\n\n        _.cleanUpEvents();\n\n        $('.slick-cloned', _.$slider).detach();\n\n        if (_.$dots) {\n            _.$dots.remove();\n        }\n\n        if (_.options.arrows === true) {\n\n            if (_.$prevArrow && _.$prevArrow.length) {\n\n                _.$prevArrow.removeClass('slick-disabled slick-arrow slick-hidden').removeAttr('aria-hidden aria-disabled tabindex').css(\"display\", \"\");\n\n                if (_.htmlExpr.test(_.options.prevArrow)) {\n                    _.$prevArrow.remove();\n                }\n            }\n\n            if (_.$nextArrow && _.$nextArrow.length) {\n\n                _.$nextArrow.removeClass('slick-disabled slick-arrow slick-hidden').removeAttr('aria-hidden aria-disabled tabindex').css(\"display\", \"\");\n\n                if (_.htmlExpr.test(_.options.nextArrow)) {\n                    _.$nextArrow.remove();\n                }\n            }\n        }\n\n        if (_.$slides) {\n\n            _.$slides.removeClass('slick-slide slick-active slick-center slick-visible slick-current').removeAttr('aria-hidden').removeAttr('data-slick-index').each(function () {\n                $(this).attr('style', $(this).data('originalStyling'));\n            });\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slideTrack.detach();\n\n            _.$list.detach();\n\n            _.$slider.append(_.$slides);\n        }\n\n        _.cleanUpRows();\n\n        _.$slider.removeClass('slick-slider');\n        _.$slider.removeClass('slick-initialized');\n\n        _.unslicked = true;\n\n        if (!refresh) {\n            _.$slider.trigger('destroy', [_]);\n        }\n    };\n\n    Slick.prototype.disableTransition = function (slide) {\n\n        var _ = this,\n            transition = {};\n\n        transition[_.transitionType] = '';\n\n        if (_.options.fade === false) {\n            _.$slideTrack.css(transition);\n        } else {\n            _.$slides.eq(slide).css(transition);\n        }\n    };\n\n    Slick.prototype.fadeSlide = function (slideIndex, callback) {\n\n        var _ = this;\n\n        if (_.cssTransitions === false) {\n\n            _.$slides.eq(slideIndex).css({\n                zIndex: _.options.zIndex\n            });\n\n            _.$slides.eq(slideIndex).animate({\n                opacity: 1\n            }, _.options.speed, _.options.easing, callback);\n        } else {\n\n            _.applyTransition(slideIndex);\n\n            _.$slides.eq(slideIndex).css({\n                opacity: 1,\n                zIndex: _.options.zIndex\n            });\n\n            if (callback) {\n                setTimeout(function () {\n\n                    _.disableTransition(slideIndex);\n\n                    callback.call();\n                }, _.options.speed);\n            }\n        }\n    };\n\n    Slick.prototype.fadeSlideOut = function (slideIndex) {\n\n        var _ = this;\n\n        if (_.cssTransitions === false) {\n\n            _.$slides.eq(slideIndex).animate({\n                opacity: 0,\n                zIndex: _.options.zIndex - 2\n            }, _.options.speed, _.options.easing);\n        } else {\n\n            _.applyTransition(slideIndex);\n\n            _.$slides.eq(slideIndex).css({\n                opacity: 0,\n                zIndex: _.options.zIndex - 2\n            });\n        }\n    };\n\n    Slick.prototype.filterSlides = Slick.prototype.slickFilter = function (filter) {\n\n        var _ = this;\n\n        if (filter !== null) {\n\n            _.unload();\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slidesCache.filter(filter).appendTo(_.$slideTrack);\n\n            _.reinit();\n        }\n    };\n\n    Slick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function () {\n\n        var _ = this;\n        return _.currentSlide;\n    };\n\n    Slick.prototype.getDotCount = function () {\n\n        var _ = this;\n\n        var breakPoint = 0;\n        var counter = 0;\n        var pagerQty = 0;\n\n        if (_.options.infinite === true) {\n            while (breakPoint < _.slideCount) {\n                ++pagerQty;\n                breakPoint = counter + _.options.slidesToShow;\n                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n            }\n        } else if (_.options.centerMode === true) {\n            pagerQty = _.slideCount;\n        } else {\n            while (breakPoint < _.slideCount) {\n                ++pagerQty;\n                breakPoint = counter + _.options.slidesToShow;\n                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n            }\n        }\n\n        return pagerQty - 1;\n    };\n\n    Slick.prototype.getLeft = function (slideIndex) {\n\n        var _ = this,\n            targetLeft,\n            verticalHeight,\n            verticalOffset = 0,\n            targetSlide;\n\n        _.slideOffset = 0;\n        verticalHeight = _.$slides.first().outerHeight(true);\n\n        if (_.options.infinite === true) {\n            if (_.slideCount > _.options.slidesToShow) {\n                _.slideOffset = _.slideWidth * _.options.slidesToShow * -1;\n                verticalOffset = verticalHeight * _.options.slidesToShow * -1;\n            }\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                if (slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow) {\n                    if (slideIndex > _.slideCount) {\n                        _.slideOffset = (_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth * -1;\n                        verticalOffset = (_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight * -1;\n                    } else {\n                        _.slideOffset = _.slideCount % _.options.slidesToScroll * _.slideWidth * -1;\n                        verticalOffset = _.slideCount % _.options.slidesToScroll * verticalHeight * -1;\n                    }\n                }\n            }\n        } else {\n            if (slideIndex + _.options.slidesToShow > _.slideCount) {\n                _.slideOffset = (slideIndex + _.options.slidesToShow - _.slideCount) * _.slideWidth;\n                verticalOffset = (slideIndex + _.options.slidesToShow - _.slideCount) * verticalHeight;\n            }\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            _.slideOffset = 0;\n            verticalOffset = 0;\n        }\n\n        if (_.options.centerMode === true && _.options.infinite === true) {\n            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth;\n        } else if (_.options.centerMode === true) {\n            _.slideOffset = 0;\n            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2);\n        }\n\n        if (_.options.vertical === false) {\n            targetLeft = slideIndex * _.slideWidth * -1 + _.slideOffset;\n        } else {\n            targetLeft = slideIndex * verticalHeight * -1 + verticalOffset;\n        }\n\n        if (_.options.variableWidth === true) {\n\n            if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n            } else {\n                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow);\n            }\n\n            targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n\n            if (_.options.centerMode === true) {\n                if (_.options.infinite === false) {\n                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n                } else {\n                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow + 1);\n                }\n                targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n                targetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2;\n            }\n        }\n\n        return targetLeft;\n    };\n\n    Slick.prototype.getOption = Slick.prototype.slickGetOption = function (option) {\n\n        var _ = this;\n\n        return _.options[option];\n    };\n\n    Slick.prototype.getNavigableIndexes = function () {\n\n        var _ = this,\n            breakPoint = 0,\n            counter = 0,\n            indexes = [],\n            max;\n\n        if (_.options.infinite === false) {\n            max = _.slideCount;\n        } else {\n            breakPoint = _.options.slidesToScroll * -1;\n            counter = _.options.slidesToScroll * -1;\n            max = _.slideCount * 2;\n        }\n\n        while (breakPoint < max) {\n            indexes.push(breakPoint);\n            breakPoint = counter + _.options.slidesToScroll;\n            counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n        }\n\n        return indexes;\n    };\n\n    Slick.prototype.getSlick = function () {\n\n        return this;\n    };\n\n    Slick.prototype.getSlideCount = function () {\n\n        var _ = this,\n            slidesTraversed,\n            swipedSlide,\n            centerOffset;\n\n        centerOffset = _.options.centerMode === true ? _.slideWidth * Math.floor(_.options.slidesToShow / 2) : 0;\n\n        if (_.options.swipeToSlide === true) {\n            _.$slideTrack.find('.slick-slide').each(function (index, slide) {\n                if (slide.offsetLeft - centerOffset + $(slide).outerWidth() / 2 > _.swipeLeft * -1) {\n                    swipedSlide = slide;\n                    return false;\n                }\n            });\n\n            slidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - _.currentSlide) || 1;\n\n            return slidesTraversed;\n        } else {\n            return _.options.slidesToScroll;\n        }\n    };\n\n    Slick.prototype.goTo = Slick.prototype.slickGoTo = function (slide, dontAnimate) {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'index',\n                index: parseInt(slide)\n            }\n        }, dontAnimate);\n    };\n\n    Slick.prototype.init = function (creation) {\n\n        var _ = this;\n\n        if (!$(_.$slider).hasClass('slick-initialized')) {\n\n            $(_.$slider).addClass('slick-initialized');\n\n            _.buildRows();\n            _.buildOut();\n            _.setProps();\n            _.startLoad();\n            _.loadSlider();\n            _.initializeEvents();\n            _.updateArrows();\n            _.updateDots();\n        }\n\n        if (creation) {\n            _.$slider.trigger('init', [_]);\n        }\n\n        if (_.options.accessibility === true) {\n            _.initADA();\n        }\n    };\n\n    Slick.prototype.initArrowEvents = function () {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n            _.$prevArrow.on('click.slick', {\n                message: 'previous'\n            }, _.changeSlide);\n            _.$nextArrow.on('click.slick', {\n                message: 'next'\n            }, _.changeSlide);\n        }\n    };\n\n    Slick.prototype.initDotEvents = function () {\n\n        var _ = this;\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n            $('li', _.$dots).on('click.slick', {\n                message: 'index'\n            }, _.changeSlide);\n        }\n\n        if (_.options.dots === true && _.options.pauseOnDotsHover === true && _.options.autoplay === true) {\n            $('li', _.$dots).on('mouseenter.slick', $.proxy(_.setPaused, _, true)).on('mouseleave.slick', $.proxy(_.setPaused, _, false));\n        }\n    };\n\n    Slick.prototype.initializeEvents = function () {\n\n        var _ = this;\n\n        _.initArrowEvents();\n\n        _.initDotEvents();\n\n        _.$list.on('touchstart.slick mousedown.slick', {\n            action: 'start'\n        }, _.swipeHandler);\n        _.$list.on('touchmove.slick mousemove.slick', {\n            action: 'move'\n        }, _.swipeHandler);\n        _.$list.on('touchend.slick mouseup.slick', {\n            action: 'end'\n        }, _.swipeHandler);\n        _.$list.on('touchcancel.slick mouseleave.slick', {\n            action: 'end'\n        }, _.swipeHandler);\n\n        _.$list.on('click.slick', _.clickHandler);\n\n        $(document).on(_.visibilityChange, $.proxy(_.visibility, _));\n\n        _.$list.on('mouseenter.slick', $.proxy(_.setPaused, _, true));\n        _.$list.on('mouseleave.slick', $.proxy(_.setPaused, _, false));\n\n        if (_.options.accessibility === true) {\n            _.$list.on('keydown.slick', _.keyHandler);\n        }\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n        }\n\n        $(window).on('orientationchange.slick.slick-' + _.instanceUid, $.proxy(_.orientationChange, _));\n\n        $(window).on('resize.slick.slick-' + _.instanceUid, $.proxy(_.resize, _));\n\n        $('[draggable!=true]', _.$slideTrack).on('dragstart', _.preventDefault);\n\n        $(window).on('load.slick.slick-' + _.instanceUid, _.setPosition);\n        $(document).on('ready.slick.slick-' + _.instanceUid, _.setPosition);\n    };\n\n    Slick.prototype.initUI = function () {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$prevArrow.show();\n            _.$nextArrow.show();\n        }\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$dots.show();\n        }\n\n        if (_.options.autoplay === true) {\n\n            _.autoPlay();\n        }\n    };\n\n    Slick.prototype.keyHandler = function (event) {\n\n        var _ = this;\n        //Dont slide if the cursor is inside the form fields and arrow keys are pressed\n        if (!event.target.tagName.match('TEXTAREA|INPUT|SELECT')) {\n            if (event.keyCode === 37 && _.options.accessibility === true) {\n                _.changeSlide({\n                    data: {\n                        message: 'previous'\n                    }\n                });\n            } else if (event.keyCode === 39 && _.options.accessibility === true) {\n                _.changeSlide({\n                    data: {\n                        message: 'next'\n                    }\n                });\n            }\n        }\n    };\n\n    Slick.prototype.lazyLoad = function () {\n\n        var _ = this,\n            loadRange,\n            cloneRange,\n            rangeStart,\n            rangeEnd;\n\n        function loadImages(imagesScope) {\n            $('img[data-lazy]', imagesScope).each(function () {\n\n                var image = $(this),\n                    imageSource = $(this).attr('data-lazy'),\n                    imageToLoad = document.createElement('img');\n\n                imageToLoad.onload = function () {\n                    image.animate({ opacity: 0 }, 100, function () {\n                        image.attr('src', imageSource).animate({ opacity: 1 }, 200, function () {\n                            image.removeAttr('data-lazy').removeClass('slick-loading');\n                        });\n                    });\n                };\n\n                imageToLoad.src = imageSource;\n            });\n        }\n\n        if (_.options.centerMode === true) {\n            if (_.options.infinite === true) {\n                rangeStart = _.currentSlide + (_.options.slidesToShow / 2 + 1);\n                rangeEnd = rangeStart + _.options.slidesToShow + 2;\n            } else {\n                rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow / 2 + 1));\n                rangeEnd = 2 + (_.options.slidesToShow / 2 + 1) + _.currentSlide;\n            }\n        } else {\n            rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide;\n            rangeEnd = rangeStart + _.options.slidesToShow;\n            if (_.options.fade === true) {\n                if (rangeStart > 0) rangeStart--;\n                if (rangeEnd <= _.slideCount) rangeEnd++;\n            }\n        }\n\n        loadRange = _.$slider.find('.slick-slide').slice(rangeStart, rangeEnd);\n        loadImages(loadRange);\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            cloneRange = _.$slider.find('.slick-slide');\n            loadImages(cloneRange);\n        } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow) {\n            cloneRange = _.$slider.find('.slick-cloned').slice(0, _.options.slidesToShow);\n            loadImages(cloneRange);\n        } else if (_.currentSlide === 0) {\n            cloneRange = _.$slider.find('.slick-cloned').slice(_.options.slidesToShow * -1);\n            loadImages(cloneRange);\n        }\n    };\n\n    Slick.prototype.loadSlider = function () {\n\n        var _ = this;\n\n        _.setPosition();\n\n        _.$slideTrack.css({\n            opacity: 1\n        });\n\n        _.$slider.removeClass('slick-loading');\n\n        _.initUI();\n\n        if (_.options.lazyLoad === 'progressive') {\n            _.progressiveLazyLoad();\n        }\n    };\n\n    Slick.prototype.next = Slick.prototype.slickNext = function () {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'next'\n            }\n        });\n    };\n\n    Slick.prototype.orientationChange = function () {\n\n        var _ = this;\n\n        _.checkResponsive();\n        _.setPosition();\n    };\n\n    Slick.prototype.pause = Slick.prototype.slickPause = function () {\n\n        var _ = this;\n\n        _.autoPlayClear();\n        _.paused = true;\n    };\n\n    Slick.prototype.play = Slick.prototype.slickPlay = function () {\n\n        var _ = this;\n\n        _.paused = false;\n        _.autoPlay();\n    };\n\n    Slick.prototype.postSlide = function (index) {\n\n        var _ = this;\n\n        _.$slider.trigger('afterChange', [_, index]);\n\n        _.animating = false;\n\n        _.setPosition();\n\n        _.swipeLeft = null;\n\n        if (_.options.autoplay === true && _.paused === false) {\n            _.autoPlay();\n        }\n        if (_.options.accessibility === true) {\n            _.initADA();\n        }\n    };\n\n    Slick.prototype.prev = Slick.prototype.slickPrev = function () {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'previous'\n            }\n        });\n    };\n\n    Slick.prototype.preventDefault = function (e) {\n        e.preventDefault();\n    };\n\n    Slick.prototype.progressiveLazyLoad = function () {\n\n        var _ = this,\n            imgCount,\n            targetImage;\n\n        imgCount = $('img[data-lazy]', _.$slider).length;\n\n        if (imgCount > 0) {\n            targetImage = $('img[data-lazy]', _.$slider).first();\n            targetImage.attr('src', targetImage.attr('data-lazy')).removeClass('slick-loading').load(function () {\n                targetImage.removeAttr('data-lazy');\n                _.progressiveLazyLoad();\n\n                if (_.options.adaptiveHeight === true) {\n                    _.setPosition();\n                }\n            }).error(function () {\n                targetImage.removeAttr('data-lazy');\n                _.progressiveLazyLoad();\n            });\n        }\n    };\n\n    Slick.prototype.refresh = function (initializing) {\n\n        var _ = this,\n            currentSlide = _.currentSlide;\n\n        _.destroy(true);\n\n        $.extend(_, _.initials, { currentSlide: currentSlide });\n\n        _.init();\n\n        if (!initializing) {\n\n            _.changeSlide({\n                data: {\n                    message: 'index',\n                    index: currentSlide\n                }\n            }, false);\n        }\n    };\n\n    Slick.prototype.registerBreakpoints = function () {\n\n        var _ = this,\n            breakpoint,\n            currentBreakpoint,\n            l,\n            responsiveSettings = _.options.responsive || null;\n\n        if ($.type(responsiveSettings) === \"array\" && responsiveSettings.length) {\n\n            _.respondTo = _.options.respondTo || 'window';\n\n            for (breakpoint in responsiveSettings) {\n\n                l = _.breakpoints.length - 1;\n                currentBreakpoint = responsiveSettings[breakpoint].breakpoint;\n\n                if (responsiveSettings.hasOwnProperty(breakpoint)) {\n\n                    // loop through the breakpoints and cut out any existing\n                    // ones with the same breakpoint number, we don't want dupes.\n                    while (l >= 0) {\n                        if (_.breakpoints[l] && _.breakpoints[l] === currentBreakpoint) {\n                            _.breakpoints.splice(l, 1);\n                        }\n                        l--;\n                    }\n\n                    _.breakpoints.push(currentBreakpoint);\n                    _.breakpointSettings[currentBreakpoint] = responsiveSettings[breakpoint].settings;\n                }\n            }\n\n            _.breakpoints.sort(function (a, b) {\n                return _.options.mobileFirst ? a - b : b - a;\n            });\n        }\n    };\n\n    Slick.prototype.reinit = function () {\n\n        var _ = this;\n\n        _.$slides = _.$slideTrack.children(_.options.slide).addClass('slick-slide');\n\n        _.slideCount = _.$slides.length;\n\n        if (_.currentSlide >= _.slideCount && _.currentSlide !== 0) {\n            _.currentSlide = _.currentSlide - _.options.slidesToScroll;\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            _.currentSlide = 0;\n        }\n\n        _.registerBreakpoints();\n\n        _.setProps();\n        _.setupInfinite();\n        _.buildArrows();\n        _.updateArrows();\n        _.initArrowEvents();\n        _.buildDots();\n        _.updateDots();\n        _.initDotEvents();\n\n        _.checkResponsive(false, true);\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n        }\n\n        _.setSlideClasses(0);\n\n        _.setPosition();\n\n        _.$slider.trigger('reInit', [_]);\n\n        if (_.options.autoplay === true) {\n            _.focusHandler();\n        }\n    };\n\n    Slick.prototype.resize = function () {\n\n        var _ = this;\n\n        if ($(window).width() !== _.windowWidth) {\n            clearTimeout(_.windowDelay);\n            _.windowDelay = window.setTimeout(function () {\n                _.windowWidth = $(window).width();\n                _.checkResponsive();\n                if (!_.unslicked) {\n                    _.setPosition();\n                }\n            }, 50);\n        }\n    };\n\n    Slick.prototype.removeSlide = Slick.prototype.slickRemove = function (index, removeBefore, removeAll) {\n\n        var _ = this;\n\n        if (typeof index === 'boolean') {\n            removeBefore = index;\n            index = removeBefore === true ? 0 : _.slideCount - 1;\n        } else {\n            index = removeBefore === true ? --index : index;\n        }\n\n        if (_.slideCount < 1 || index < 0 || index > _.slideCount - 1) {\n            return false;\n        }\n\n        _.unload();\n\n        if (removeAll === true) {\n            _.$slideTrack.children().remove();\n        } else {\n            _.$slideTrack.children(this.options.slide).eq(index).remove();\n        }\n\n        _.$slides = _.$slideTrack.children(this.options.slide);\n\n        _.$slideTrack.children(this.options.slide).detach();\n\n        _.$slideTrack.append(_.$slides);\n\n        _.$slidesCache = _.$slides;\n\n        _.reinit();\n    };\n\n    Slick.prototype.setCSS = function (position) {\n\n        var _ = this,\n            positionProps = {},\n            x,\n            y;\n\n        if (_.options.rtl === true) {\n            position = -position;\n        }\n        x = _.positionProp == 'left' ? Math.ceil(position) + 'px' : '0px';\n        y = _.positionProp == 'top' ? Math.ceil(position) + 'px' : '0px';\n\n        positionProps[_.positionProp] = position;\n\n        if (_.transformsEnabled === false) {\n            _.$slideTrack.css(positionProps);\n        } else {\n            positionProps = {};\n            if (_.cssTransitions === false) {\n                positionProps[_.animType] = 'translate(' + x + ', ' + y + ')';\n                _.$slideTrack.css(positionProps);\n            } else {\n                positionProps[_.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';\n                _.$slideTrack.css(positionProps);\n            }\n        }\n    };\n\n    Slick.prototype.setDimensions = function () {\n\n        var _ = this;\n\n        if (_.options.vertical === false) {\n            if (_.options.centerMode === true) {\n                _.$list.css({\n                    padding: '0px ' + _.options.centerPadding\n                });\n            }\n        } else {\n            _.$list.height(_.$slides.first().outerHeight(true) * _.options.slidesToShow);\n            if (_.options.centerMode === true) {\n                _.$list.css({\n                    padding: _.options.centerPadding + ' 0px'\n                });\n            }\n        }\n\n        _.listWidth = _.$list.width();\n        _.listHeight = _.$list.height();\n\n        if (_.options.vertical === false && _.options.variableWidth === false) {\n            _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);\n            _.$slideTrack.width(Math.ceil(_.slideWidth * _.$slideTrack.children('.slick-slide').length));\n        } else if (_.options.variableWidth === true) {\n            _.$slideTrack.width(5000 * _.slideCount);\n        } else {\n            _.slideWidth = Math.ceil(_.listWidth);\n            _.$slideTrack.height(Math.ceil(_.$slides.first().outerHeight(true) * _.$slideTrack.children('.slick-slide').length));\n        }\n\n        var offset = _.$slides.first().outerWidth(true) - _.$slides.first().width();\n        if (_.options.variableWidth === false) _.$slideTrack.children('.slick-slide').width(_.slideWidth - offset);\n    };\n\n    Slick.prototype.setFade = function () {\n\n        var _ = this,\n            targetLeft;\n\n        _.$slides.each(function (index, element) {\n            targetLeft = _.slideWidth * index * -1;\n            if (_.options.rtl === true) {\n                $(element).css({\n                    position: 'relative',\n                    right: targetLeft,\n                    top: 0,\n                    zIndex: _.options.zIndex - 2,\n                    opacity: 0\n                });\n            } else {\n                $(element).css({\n                    position: 'relative',\n                    left: targetLeft,\n                    top: 0,\n                    zIndex: _.options.zIndex - 2,\n                    opacity: 0\n                });\n            }\n        });\n\n        _.$slides.eq(_.currentSlide).css({\n            zIndex: _.options.zIndex - 1,\n            opacity: 1\n        });\n    };\n\n    Slick.prototype.setHeight = function () {\n\n        var _ = this;\n\n        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n            _.$list.css('height', targetHeight);\n        }\n    };\n\n    Slick.prototype.setOption = Slick.prototype.slickSetOption = function (option, value, refresh) {\n\n        var _ = this,\n            l,\n            item;\n\n        if (option === \"responsive\" && $.type(value) === \"array\") {\n            for (item in value) {\n                if ($.type(_.options.responsive) !== \"array\") {\n                    _.options.responsive = [value[item]];\n                } else {\n                    l = _.options.responsive.length - 1;\n                    // loop through the responsive object and splice out duplicates.\n                    while (l >= 0) {\n                        if (_.options.responsive[l].breakpoint === value[item].breakpoint) {\n                            _.options.responsive.splice(l, 1);\n                        }\n                        l--;\n                    }\n                    _.options.responsive.push(value[item]);\n                }\n            }\n        } else {\n            _.options[option] = value;\n        }\n\n        if (refresh === true) {\n            _.unload();\n            _.reinit();\n        }\n    };\n\n    Slick.prototype.setPosition = function () {\n\n        var _ = this;\n\n        _.setDimensions();\n\n        _.setHeight();\n\n        if (_.options.fade === false) {\n            _.setCSS(_.getLeft(_.currentSlide));\n        } else {\n            _.setFade();\n        }\n\n        _.$slider.trigger('setPosition', [_]);\n    };\n\n    Slick.prototype.setProps = function () {\n\n        var _ = this,\n            bodyStyle = document.body.style;\n\n        _.positionProp = _.options.vertical === true ? 'top' : 'left';\n\n        if (_.positionProp === 'top') {\n            _.$slider.addClass('slick-vertical');\n        } else {\n            _.$slider.removeClass('slick-vertical');\n        }\n\n        if (bodyStyle.WebkitTransition !== undefined || bodyStyle.MozTransition !== undefined || bodyStyle.msTransition !== undefined) {\n            if (_.options.useCSS === true) {\n                _.cssTransitions = true;\n            }\n        }\n\n        if (_.options.fade) {\n            if (typeof _.options.zIndex === 'number') {\n                if (_.options.zIndex < 3) {\n                    _.options.zIndex = 3;\n                }\n            } else {\n                _.options.zIndex = _.defaults.zIndex;\n            }\n        }\n\n        if (bodyStyle.OTransform !== undefined) {\n            _.animType = 'OTransform';\n            _.transformType = '-o-transform';\n            _.transitionType = 'OTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.MozTransform !== undefined) {\n            _.animType = 'MozTransform';\n            _.transformType = '-moz-transform';\n            _.transitionType = 'MozTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.webkitTransform !== undefined) {\n            _.animType = 'webkitTransform';\n            _.transformType = '-webkit-transform';\n            _.transitionType = 'webkitTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.msTransform !== undefined) {\n            _.animType = 'msTransform';\n            _.transformType = '-ms-transform';\n            _.transitionType = 'msTransition';\n            if (bodyStyle.msTransform === undefined) _.animType = false;\n        }\n        if (bodyStyle.transform !== undefined && _.animType !== false) {\n            _.animType = 'transform';\n            _.transformType = 'transform';\n            _.transitionType = 'transition';\n        }\n        _.transformsEnabled = _.animType !== null && _.animType !== false;\n    };\n\n    Slick.prototype.setSlideClasses = function (index) {\n\n        var _ = this,\n            centerOffset,\n            allSlides,\n            indexOffset,\n            remainder;\n\n        allSlides = _.$slider.find('.slick-slide').removeClass('slick-active slick-center slick-current').attr('aria-hidden', 'true');\n\n        _.$slides.eq(index).addClass('slick-current');\n\n        if (_.options.centerMode === true) {\n\n            centerOffset = Math.floor(_.options.slidesToShow / 2);\n\n            if (_.options.infinite === true) {\n\n                if (index >= centerOffset && index <= _.slideCount - 1 - centerOffset) {\n\n                    _.$slides.slice(index - centerOffset, index + centerOffset + 1).addClass('slick-active').attr('aria-hidden', 'false');\n                } else {\n\n                    indexOffset = _.options.slidesToShow + index;\n                    allSlides.slice(indexOffset - centerOffset + 1, indexOffset + centerOffset + 2).addClass('slick-active').attr('aria-hidden', 'false');\n                }\n\n                if (index === 0) {\n\n                    allSlides.eq(allSlides.length - 1 - _.options.slidesToShow).addClass('slick-center');\n                } else if (index === _.slideCount - 1) {\n\n                    allSlides.eq(_.options.slidesToShow).addClass('slick-center');\n                }\n            }\n\n            _.$slides.eq(index).addClass('slick-center');\n        } else {\n\n            if (index >= 0 && index <= _.slideCount - _.options.slidesToShow) {\n\n                _.$slides.slice(index, index + _.options.slidesToShow).addClass('slick-active').attr('aria-hidden', 'false');\n            } else if (allSlides.length <= _.options.slidesToShow) {\n\n                allSlides.addClass('slick-active').attr('aria-hidden', 'false');\n            } else {\n\n                remainder = _.slideCount % _.options.slidesToShow;\n                indexOffset = _.options.infinite === true ? _.options.slidesToShow + index : index;\n\n                if (_.options.slidesToShow == _.options.slidesToScroll && _.slideCount - index < _.options.slidesToShow) {\n\n                    allSlides.slice(indexOffset - (_.options.slidesToShow - remainder), indexOffset + remainder).addClass('slick-active').attr('aria-hidden', 'false');\n                } else {\n\n                    allSlides.slice(indexOffset, indexOffset + _.options.slidesToShow).addClass('slick-active').attr('aria-hidden', 'false');\n                }\n            }\n        }\n\n        if (_.options.lazyLoad === 'ondemand') {\n            _.lazyLoad();\n        }\n    };\n\n    Slick.prototype.setupInfinite = function () {\n\n        var _ = this,\n            i,\n            slideIndex,\n            infiniteCount;\n\n        if (_.options.fade === true) {\n            _.options.centerMode = false;\n        }\n\n        if (_.options.infinite === true && _.options.fade === false) {\n\n            slideIndex = null;\n\n            if (_.slideCount > _.options.slidesToShow) {\n\n                if (_.options.centerMode === true) {\n                    infiniteCount = _.options.slidesToShow + 1;\n                } else {\n                    infiniteCount = _.options.slidesToShow;\n                }\n\n                for (i = _.slideCount; i > _.slideCount - infiniteCount; i -= 1) {\n                    slideIndex = i - 1;\n                    $(_.$slides[slideIndex]).clone(true).attr('id', '').attr('data-slick-index', slideIndex - _.slideCount).prependTo(_.$slideTrack).addClass('slick-cloned');\n                }\n                for (i = 0; i < infiniteCount; i += 1) {\n                    slideIndex = i;\n                    $(_.$slides[slideIndex]).clone(true).attr('id', '').attr('data-slick-index', slideIndex + _.slideCount).appendTo(_.$slideTrack).addClass('slick-cloned');\n                }\n                _.$slideTrack.find('.slick-cloned').find('[id]').each(function () {\n                    $(this).attr('id', '');\n                });\n            }\n        }\n    };\n\n    Slick.prototype.setPaused = function (paused) {\n\n        var _ = this;\n\n        if (_.options.autoplay === true && _.options.pauseOnHover === true) {\n            _.paused = paused;\n            if (!paused) {\n                _.autoPlay();\n            } else {\n                _.autoPlayClear();\n            }\n        }\n    };\n\n    Slick.prototype.selectHandler = function (event) {\n\n        var _ = this;\n\n        var targetElement = $(event.target).is('.slick-slide') ? $(event.target) : $(event.target).parents('.slick-slide');\n\n        var index = parseInt(targetElement.attr('data-slick-index'));\n\n        if (!index) index = 0;\n\n        if (_.slideCount <= _.options.slidesToShow) {\n\n            _.setSlideClasses(index);\n            _.asNavFor(index);\n            return;\n        }\n\n        _.slideHandler(index);\n    };\n\n    Slick.prototype.slideHandler = function (index, sync, dontAnimate) {\n\n        var targetSlide,\n            animSlide,\n            oldSlide,\n            slideLeft,\n            targetLeft = null,\n            _ = this;\n\n        sync = sync || false;\n\n        if (_.animating === true && _.options.waitForAnimate === true) {\n            return;\n        }\n\n        if (_.options.fade === true && _.currentSlide === index) {\n            return;\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            return;\n        }\n\n        if (sync === false) {\n            _.asNavFor(index);\n        }\n\n        targetSlide = index;\n        targetLeft = _.getLeft(targetSlide);\n        slideLeft = _.getLeft(_.currentSlide);\n\n        _.currentLeft = _.swipeLeft === null ? slideLeft : _.swipeLeft;\n\n        if (_.options.infinite === false && _.options.centerMode === false && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) {\n            if (_.options.fade === false) {\n                targetSlide = _.currentSlide;\n                if (dontAnimate !== true) {\n                    _.animateSlide(slideLeft, function () {\n                        _.postSlide(targetSlide);\n                    });\n                } else {\n                    _.postSlide(targetSlide);\n                }\n            }\n            return;\n        } else if (_.options.infinite === false && _.options.centerMode === true && (index < 0 || index > _.slideCount - _.options.slidesToScroll)) {\n            if (_.options.fade === false) {\n                targetSlide = _.currentSlide;\n                if (dontAnimate !== true) {\n                    _.animateSlide(slideLeft, function () {\n                        _.postSlide(targetSlide);\n                    });\n                } else {\n                    _.postSlide(targetSlide);\n                }\n            }\n            return;\n        }\n\n        if (_.options.autoplay === true) {\n            clearInterval(_.autoPlayTimer);\n        }\n\n        if (targetSlide < 0) {\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                animSlide = _.slideCount - _.slideCount % _.options.slidesToScroll;\n            } else {\n                animSlide = _.slideCount + targetSlide;\n            }\n        } else if (targetSlide >= _.slideCount) {\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                animSlide = 0;\n            } else {\n                animSlide = targetSlide - _.slideCount;\n            }\n        } else {\n            animSlide = targetSlide;\n        }\n\n        _.animating = true;\n\n        _.$slider.trigger('beforeChange', [_, _.currentSlide, animSlide]);\n\n        oldSlide = _.currentSlide;\n        _.currentSlide = animSlide;\n\n        _.setSlideClasses(_.currentSlide);\n\n        _.updateDots();\n        _.updateArrows();\n\n        if (_.options.fade === true) {\n            if (dontAnimate !== true) {\n\n                _.fadeSlideOut(oldSlide);\n\n                _.fadeSlide(animSlide, function () {\n                    _.postSlide(animSlide);\n                });\n            } else {\n                _.postSlide(animSlide);\n            }\n            _.animateHeight();\n            return;\n        }\n\n        if (dontAnimate !== true) {\n            _.animateSlide(targetLeft, function () {\n                _.postSlide(animSlide);\n            });\n        } else {\n            _.postSlide(animSlide);\n        }\n    };\n\n    Slick.prototype.startLoad = function () {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$prevArrow.hide();\n            _.$nextArrow.hide();\n        }\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$dots.hide();\n        }\n\n        _.$slider.addClass('slick-loading');\n    };\n\n    Slick.prototype.swipeDirection = function () {\n\n        var xDist,\n            yDist,\n            r,\n            swipeAngle,\n            _ = this;\n\n        xDist = _.touchObject.startX - _.touchObject.curX;\n        yDist = _.touchObject.startY - _.touchObject.curY;\n        r = Math.atan2(yDist, xDist);\n\n        swipeAngle = Math.round(r * 180 / Math.PI);\n        if (swipeAngle < 0) {\n            swipeAngle = 360 - Math.abs(swipeAngle);\n        }\n\n        if (swipeAngle <= 45 && swipeAngle >= 0) {\n            return _.options.rtl === false ? 'left' : 'right';\n        }\n        if (swipeAngle <= 360 && swipeAngle >= 315) {\n            return _.options.rtl === false ? 'left' : 'right';\n        }\n        if (swipeAngle >= 135 && swipeAngle <= 225) {\n            return _.options.rtl === false ? 'right' : 'left';\n        }\n        if (_.options.verticalSwiping === true) {\n            if (swipeAngle >= 35 && swipeAngle <= 135) {\n                return 'left';\n            } else {\n                return 'right';\n            }\n        }\n\n        return 'vertical';\n    };\n\n    Slick.prototype.swipeEnd = function (event) {\n\n        var _ = this,\n            slideCount;\n\n        _.dragging = false;\n\n        _.shouldClick = _.touchObject.swipeLength > 10 ? false : true;\n\n        if (_.touchObject.curX === undefined) {\n            return false;\n        }\n\n        if (_.touchObject.edgeHit === true) {\n            _.$slider.trigger('edge', [_, _.swipeDirection()]);\n        }\n\n        if (_.touchObject.swipeLength >= _.touchObject.minSwipe) {\n\n            switch (_.swipeDirection()) {\n                case 'left':\n                    slideCount = _.options.swipeToSlide ? _.checkNavigable(_.currentSlide + _.getSlideCount()) : _.currentSlide + _.getSlideCount();\n                    _.slideHandler(slideCount);\n                    _.currentDirection = 0;\n                    _.touchObject = {};\n                    _.$slider.trigger('swipe', [_, 'left']);\n                    break;\n\n                case 'right':\n                    slideCount = _.options.swipeToSlide ? _.checkNavigable(_.currentSlide - _.getSlideCount()) : _.currentSlide - _.getSlideCount();\n                    _.slideHandler(slideCount);\n                    _.currentDirection = 1;\n                    _.touchObject = {};\n                    _.$slider.trigger('swipe', [_, 'right']);\n                    break;\n            }\n        } else {\n            if (_.touchObject.startX !== _.touchObject.curX) {\n                _.slideHandler(_.currentSlide);\n                _.touchObject = {};\n            }\n        }\n    };\n\n    Slick.prototype.swipeHandler = function (event) {\n\n        var _ = this;\n\n        if (_.options.swipe === false || 'ontouchend' in document && _.options.swipe === false) {\n            return;\n        } else if (_.options.draggable === false && event.type.indexOf('mouse') !== -1) {\n            return;\n        }\n\n        _.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ? event.originalEvent.touches.length : 1;\n\n        _.touchObject.minSwipe = _.listWidth / _.options.touchThreshold;\n\n        if (_.options.verticalSwiping === true) {\n            _.touchObject.minSwipe = _.listHeight / _.options.touchThreshold;\n        }\n\n        switch (event.data.action) {\n\n            case 'start':\n                _.swipeStart(event);\n                break;\n\n            case 'move':\n                _.swipeMove(event);\n                break;\n\n            case 'end':\n                _.swipeEnd(event);\n                break;\n\n        }\n    };\n\n    Slick.prototype.swipeMove = function (event) {\n\n        var _ = this,\n            edgeWasHit = false,\n            curLeft,\n            swipeDirection,\n            swipeLength,\n            positionOffset,\n            touches;\n\n        touches = event.originalEvent !== undefined ? event.originalEvent.touches : null;\n\n        if (!_.dragging || touches && touches.length !== 1) {\n            return false;\n        }\n\n        curLeft = _.getLeft(_.currentSlide);\n\n        _.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;\n        _.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;\n\n        _.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(_.touchObject.curX - _.touchObject.startX, 2)));\n\n        if (_.options.verticalSwiping === true) {\n            _.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(_.touchObject.curY - _.touchObject.startY, 2)));\n        }\n\n        swipeDirection = _.swipeDirection();\n\n        if (swipeDirection === 'vertical') {\n            return;\n        }\n\n        if (event.originalEvent !== undefined && _.touchObject.swipeLength > 4) {\n            event.preventDefault();\n        }\n\n        positionOffset = (_.options.rtl === false ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1);\n        if (_.options.verticalSwiping === true) {\n            positionOffset = _.touchObject.curY > _.touchObject.startY ? 1 : -1;\n        }\n\n        swipeLength = _.touchObject.swipeLength;\n\n        _.touchObject.edgeHit = false;\n\n        if (_.options.infinite === false) {\n            if (_.currentSlide === 0 && swipeDirection === 'right' || _.currentSlide >= _.getDotCount() && swipeDirection === 'left') {\n                swipeLength = _.touchObject.swipeLength * _.options.edgeFriction;\n                _.touchObject.edgeHit = true;\n            }\n        }\n\n        if (_.options.vertical === false) {\n            _.swipeLeft = curLeft + swipeLength * positionOffset;\n        } else {\n            _.swipeLeft = curLeft + swipeLength * (_.$list.height() / _.listWidth) * positionOffset;\n        }\n        if (_.options.verticalSwiping === true) {\n            _.swipeLeft = curLeft + swipeLength * positionOffset;\n        }\n\n        if (_.options.fade === true || _.options.touchMove === false) {\n            return false;\n        }\n\n        if (_.animating === true) {\n            _.swipeLeft = null;\n            return false;\n        }\n\n        _.setCSS(_.swipeLeft);\n    };\n\n    Slick.prototype.swipeStart = function (event) {\n\n        var _ = this,\n            touches;\n\n        if (_.touchObject.fingerCount !== 1 || _.slideCount <= _.options.slidesToShow) {\n            _.touchObject = {};\n            return false;\n        }\n\n        if (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {\n            touches = event.originalEvent.touches[0];\n        }\n\n        _.touchObject.startX = _.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;\n        _.touchObject.startY = _.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;\n\n        _.dragging = true;\n    };\n\n    Slick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function () {\n\n        var _ = this;\n\n        if (_.$slidesCache !== null) {\n\n            _.unload();\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slidesCache.appendTo(_.$slideTrack);\n\n            _.reinit();\n        }\n    };\n\n    Slick.prototype.unload = function () {\n\n        var _ = this;\n\n        $('.slick-cloned', _.$slider).remove();\n\n        if (_.$dots) {\n            _.$dots.remove();\n        }\n\n        if (_.$prevArrow && _.htmlExpr.test(_.options.prevArrow)) {\n            _.$prevArrow.remove();\n        }\n\n        if (_.$nextArrow && _.htmlExpr.test(_.options.nextArrow)) {\n            _.$nextArrow.remove();\n        }\n\n        _.$slides.removeClass('slick-slide slick-active slick-visible slick-current').attr('aria-hidden', 'true').css('width', '');\n    };\n\n    Slick.prototype.unslick = function (fromBreakpoint) {\n\n        var _ = this;\n        _.$slider.trigger('unslick', [_, fromBreakpoint]);\n        _.destroy();\n    };\n\n    Slick.prototype.updateArrows = function () {\n\n        var _ = this,\n            centerOffset;\n\n        centerOffset = Math.floor(_.options.slidesToShow / 2);\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow && !_.options.infinite) {\n\n            _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n            _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            if (_.currentSlide === 0) {\n\n                _.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n            } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === false) {\n\n                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n            } else if (_.currentSlide >= _.slideCount - 1 && _.options.centerMode === true) {\n\n                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n            }\n        }\n    };\n\n    Slick.prototype.updateDots = function () {\n\n        var _ = this;\n\n        if (_.$dots !== null) {\n\n            _.$dots.find('li').removeClass('slick-active').attr('aria-hidden', 'true');\n\n            _.$dots.find('li').eq(Math.floor(_.currentSlide / _.options.slidesToScroll)).addClass('slick-active').attr('aria-hidden', 'false');\n        }\n    };\n\n    Slick.prototype.visibility = function () {\n\n        var _ = this;\n\n        if (document[_.hidden]) {\n            _.paused = true;\n            _.autoPlayClear();\n        } else {\n            if (_.options.autoplay === true) {\n                _.paused = false;\n                _.autoPlay();\n            }\n        }\n    };\n    Slick.prototype.initADA = function () {\n        var _ = this;\n        _.$slides.add(_.$slideTrack.find('.slick-cloned')).attr({\n            'aria-hidden': 'true',\n            'tabindex': '-1'\n        }).find('a, input, button, select').attr({\n            'tabindex': '-1'\n        });\n\n        _.$slideTrack.attr('role', 'listbox');\n\n        _.$slides.not(_.$slideTrack.find('.slick-cloned')).each(function (i) {\n            $(this).attr({\n                'role': 'option',\n                'aria-describedby': 'slick-slide' + _.instanceUid + i + ''\n            });\n        });\n\n        if (_.$dots !== null) {\n            _.$dots.attr('role', 'tablist').find('li').each(function (i) {\n                $(this).attr({\n                    'role': 'presentation',\n                    'aria-selected': 'false',\n                    'aria-controls': 'navigation' + _.instanceUid + i + '',\n                    'id': 'slick-slide' + _.instanceUid + i + ''\n                });\n            }).first().attr('aria-selected', 'true').end().find('button').attr('role', 'button').end().closest('div').attr('role', 'toolbar');\n        }\n        _.activateADA();\n    };\n\n    Slick.prototype.activateADA = function () {\n        var _ = this,\n            _isSlideOnFocus = _.$slider.find('*').is(':focus');\n        // _isSlideOnFocus = _.$slides.is(':focus') || _.$slides.find('*').is(':focus');\n\n        _.$slideTrack.find('.slick-active').attr({\n            'aria-hidden': 'false',\n            'tabindex': '0'\n        }).find('a, input, button, select').attr({\n            'tabindex': '0'\n        });\n\n        _isSlideOnFocus && _.$slideTrack.find('.slick-active').focus();\n    };\n\n    Slick.prototype.focusHandler = function () {\n        var _ = this;\n        _.$slider.on('focus.slick blur.slick', '*', function (event) {\n            event.stopImmediatePropagation();\n            var sf = $(this);\n            setTimeout(function () {\n                if (_.isPlay) {\n                    if (sf.is(':focus')) {\n                        _.autoPlayClear();\n                        _.paused = true;\n                    } else {\n                        _.paused = false;\n                        _.autoPlay();\n                    }\n                }\n            }, 0);\n        });\n    };\n\n    $.fn.slick = function () {\n        var _ = this,\n            opt = arguments[0],\n            args = Array.prototype.slice.call(arguments, 1),\n            l = _.length,\n            i = 0,\n            ret;\n        for (i; i < l; i++) {\n            if ((typeof opt === 'undefined' ? 'undefined' : _typeof(opt)) == 'object' || typeof opt == 'undefined') _[i].slick = new Slick(_[i], opt);else ret = _[i].slick[opt].apply(_[i].slick, args);\n            if (typeof ret != 'undefined') return ret;\n        }\n        return _;\n    };\n});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],20:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n!function (root, factory) {\n    \"function\" == typeof define && define.amd ? // AMD. Register as an anonymous module unless amdModuleId is set\n    define([], function () {\n        return root.svg4everybody = factory();\n    }) : \"object\" == (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) ? module.exports = factory() : root.svg4everybody = factory();\n}(undefined, function () {\n    /*! svg4everybody v2.1.0 | github.com/jonathantneal/svg4everybody */\n    function embed(svg, target) {\n        // if the target exists\n        if (target) {\n            // create a document fragment to hold the contents of the target\n            var fragment = document.createDocumentFragment(),\n                viewBox = !svg.getAttribute(\"viewBox\") && target.getAttribute(\"viewBox\");\n            // conditionally set the viewBox on the svg\n            viewBox && svg.setAttribute(\"viewBox\", viewBox);\n            // copy the contents of the clone into the fragment\n            for ( // clone the target\n            var clone = target.cloneNode(!0); clone.childNodes.length;) {\n                fragment.appendChild(clone.firstChild);\n            }\n            // append the fragment into the svg\n            svg.appendChild(fragment);\n        }\n    }\n    function loadreadystatechange(xhr) {\n        // listen to changes in the request\n        xhr.onreadystatechange = function () {\n            // if the request is ready\n            if (4 === xhr.readyState) {\n                // get the cached html document\n                var cachedDocument = xhr._cachedDocument;\n                // ensure the cached html document based on the xhr response\n                cachedDocument || (cachedDocument = xhr._cachedDocument = document.implementation.createHTMLDocument(\"\"), cachedDocument.body.innerHTML = xhr.responseText, xhr._cachedTarget = {}), // clear the xhr embeds list and embed each item\n                xhr._embeds.splice(0).map(function (item) {\n                    // get the cached target\n                    var target = xhr._cachedTarget[item.id];\n                    // ensure the cached target\n                    target || (target = xhr._cachedTarget[item.id] = cachedDocument.getElementById(item.id)),\n                    // embed the target into the svg\n                    embed(item.svg, target);\n                });\n            }\n        }, // test the ready state change immediately\n        xhr.onreadystatechange();\n    }\n    function svg4everybody(rawopts) {\n        function oninterval() {\n            // while the index exists in the live <use> collection\n            for ( // get the cached <use> index\n            var index = 0; index < uses.length;) {\n                // get the current <use>\n                var use = uses[index],\n                    svg = use.parentNode;\n                if (svg && /svg/i.test(svg.nodeName)) {\n                    var src = use.getAttribute(\"xlink:href\");\n                    if (polyfill && (!opts.validate || opts.validate(src, svg, use))) {\n                        // remove the <use> element\n                        svg.removeChild(use);\n                        // parse the src and get the url and id\n                        var srcSplit = src.split(\"#\"),\n                            url = srcSplit.shift(),\n                            id = srcSplit.join(\"#\");\n                        // if the link is external\n                        if (url.length) {\n                            // get the cached xhr request\n                            var xhr = requests[url];\n                            // ensure the xhr request exists\n                            xhr || (xhr = requests[url] = new XMLHttpRequest(), xhr.open(\"GET\", url), xhr.send(), xhr._embeds = []), // add the svg and id as an item to the xhr embeds list\n                            xhr._embeds.push({\n                                svg: svg,\n                                id: id\n                            }), // prepare the xhr ready state change event\n                            loadreadystatechange(xhr);\n                        } else {\n                            // embed the local id into the svg\n                            embed(svg, document.getElementById(id));\n                        }\n                    }\n                } else {\n                    // increase the index when the previous value was not \"valid\"\n                    ++index;\n                }\n            }\n            // continue the interval\n            requestAnimationFrame(oninterval, 67);\n        }\n        var polyfill,\n            opts = Object(rawopts),\n            newerIEUA = /\\bTrident\\/[567]\\b|\\bMSIE (?:9|10)\\.0\\b/,\n            webkitUA = /\\bAppleWebKit\\/(\\d+)\\b/,\n            olderEdgeUA = /\\bEdge\\/12\\.(\\d+)\\b/;\n        polyfill = \"polyfill\" in opts ? opts.polyfill : newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537;\n        // create xhr requests object\n        var requests = {},\n            requestAnimationFrame = window.requestAnimationFrame || setTimeout,\n            uses = document.getElementsByTagName(\"use\");\n        // conditionally start the interval if the polyfill is active\n        polyfill && oninterval();\n    }\n    return svg4everybody;\n});\n\n},{}],21:[function(require,module,exports){\n\"use strict\";\n\nvar CACHE = [],\n    YubinBango;!function (t) {\n  var e = function () {\n    function t(t, e) {\n      if (void 0 === t && (t = \"\"), this.URL = \"https://yubinbango.github.io/yubinbango-data/data\", this.REGION = [null, \"北海道\", \"青森県\", \"岩手県\", \"宮城県\", \"秋田県\", \"山形県\", \"福島県\", \"茨城県\", \"栃木県\", \"群馬県\", \"埼玉県\", \"千葉県\", \"東京都\", \"神奈川県\", \"新潟県\", \"富山県\", \"石川県\", \"福井県\", \"山梨県\", \"長野県\", \"岐阜県\", \"静岡県\", \"愛知県\", \"三重県\", \"滋賀県\", \"京都府\", \"大阪府\", \"兵庫県\", \"奈良県\", \"和歌山県\", \"鳥取県\", \"島根県\", \"岡山県\", \"広島県\", \"山口県\", \"徳島県\", \"香川県\", \"愛媛県\", \"高知県\", \"福岡県\", \"佐賀県\", \"長崎県\", \"熊本県\", \"大分県\", \"宮崎県\", \"鹿児島県\", \"沖縄県\"], t) {\n        var r = t.replace(/[０-９]/g, function (t) {\n          return String.fromCharCode(t.charCodeAt(0) - 65248);\n        }),\n            o = r.match(/\\d/g),\n            i = o.join(\"\"),\n            n = this.chk7(i);n ? this.getAddr(n, e) : e(this.addrDic());\n      }\n    }return t.prototype.chk7 = function (t) {\n      return 7 === t.length ? t : void 0;\n    }, t.prototype.addrDic = function (t, e, n, r, o) {\n      return void 0 === t && (t = \"\"), void 0 === e && (e = \"\"), void 0 === n && (n = \"\"), void 0 === r && (r = \"\"), void 0 === o && (o = \"\"), { region_id: t, region: e, locality: n, street: r, extended: o };\n    }, t.prototype.selectAddr = function (t) {\n      return t && t[0] && t[1] ? this.addrDic(t[0], this.REGION[t[0]], t[1], t[2], t[3]) : this.addrDic();\n    }, t.prototype.jsonp = function (e, n) {\n      window.$yubin = function (t) {\n        return n(t);\n      };var t = document.createElement(\"script\");t.setAttribute(\"type\", \"text/javascript\"), t.setAttribute(\"charset\", \"UTF-8\"), t.setAttribute(\"src\", e), document.head.appendChild(t);\n    }, t.prototype.getAddr = function (e, n) {\n      var r = this,\n          t = e.substr(0, 3);return t in CACHE && e in CACHE[t] ? n(this.selectAddr(CACHE[t][e])) : void this.jsonp(this.URL + \"/\" + t + \".js\", function (o) {\n        return CACHE[t] = o, n(r.selectAddr(o[e]));\n      });\n    }, t;\n  }();t.Core = e;\n}(YubinBango || (YubinBango = {}));var ISO31661JP = [\"Japan\", \"JP\", \"JPN\", \"JAPAN\"],\n    HADRLIST = [\"p-region-id\", \"p-region\", \"p-locality\", \"p-street-address\", \"p-extended-address\"],\n    YubinBango;!function (t) {\n  var e = function () {\n    function e() {\n      this.hadrloop();\n    }return e.prototype.hadrloop = function () {\n      var t = this,\n          n = document.querySelectorAll(\".h-adr\");[].map.call(n, function (n) {\n        if (t.countryNameCheck(n)) {\n          var r = n.querySelectorAll(\".p-postal-code\");r[r.length - 1].addEventListener(\"keyup\", function (n) {\n            e.prototype.applyDom(t.getFormNode(n.target.parentNode));\n          }, !1);\n        }\n      });\n    }, e.prototype.getFormNode = function (t) {\n      return \"FORM\" !== t.tagName ? this.getFormNode(t.parentNode) : t;\n    }, e.prototype.countryNameCheck = function (e) {\n      var t = e.querySelector(\".p-country-name\"),\n          n = [t.innerHTML, t.value];return n.some(function (t) {\n        return ISO31661JP.indexOf(t) >= 0;\n      });\n    }, e.prototype.applyDom = function (e) {\n      var n = this,\n          r = e.querySelectorAll(\".p-postal-code\");new t.Core(this.reduceVal(r), function (t) {\n        return n.setAddr(e, t);\n      });\n    }, e.prototype.reduceVal = function (t) {\n      return [].map.call(t, function (t) {\n        return t.value;\n      }).reduce(function (t, e) {\n        return t + e;\n      });\n    }, e.prototype.setAddr = function (t, e) {\n      var n = [this.postalFormClear, this.postalFormSet];n.map(function (n) {\n        return HADRLIST.map(function (r) {\n          return n(r, t, e);\n        });\n      });\n    }, e.prototype.postalFormClear = function (t, e, n) {\n      if (n) {\n        var r = e.querySelectorAll(\".\" + t);[].map.call(r, function (t) {\n          return t.value = \"\";\n        });\n      }\n    }, e.prototype.postalFormSet = function (e, r, t) {\n      var n = { \"p-region-id\": t.region_id, \"p-region\": t.region, \"p-locality\": t.locality, \"p-street-address\": t.street, \"p-extended-address\": t.extended },\n          o = r.querySelectorAll(\".\" + e);[].map.call(o, function (t) {\n        return t.value += n[e] ? n[e] : \"\";\n      });\n    }, e;\n  }();t.MicroformatDom = e;\n}(YubinBango || (YubinBango = {})), document.addEventListener(\"DOMContentLoaded\", function () {\n  new YubinBango.MicroformatDom();\n}, !1);\n\n\n},{}],22:[function(require,module,exports){\n/**\n * matchesSelector v2.0.1\n * matchesSelector( element, '.selector' )\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n\n( function( window, factory ) {\n  /*global define: false, module: false */\n  'use strict';\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.matchesSelector = factory();\n  }\n\n}( window, function factory() {\n  'use strict';\n\n  var matchesMethod = ( function() {\n    var ElemProto = Element.prototype;\n    // check for the standard method name first\n    if ( ElemProto.matches ) {\n      return 'matches';\n    }\n    // check un-prefixed\n    if ( ElemProto.matchesSelector ) {\n      return 'matchesSelector';\n    }\n    // check vendor prefixes\n    var prefixes = [ 'webkit', 'moz', 'ms', 'o' ];\n\n    for ( var i=0; i < prefixes.length; i++ ) {\n      var prefix = prefixes[i];\n      var method = prefix + 'MatchesSelector';\n      if ( ElemProto[ method ] ) {\n        return method;\n      }\n    }\n  })();\n\n  return function matchesSelector( elem, selector ) {\n    return elem[ matchesMethod ]( selector );\n  };\n\n}));\n\n},{}],23:[function(require,module,exports){\n/**\n * EvEmitter v1.0.3\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n\n}( typeof window != 'undefined' ? window : this, function() {\n\n\"use strict\";\n\nfunction EvEmitter() {}\n\nvar proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // set events hash\n  var events = this._events = this._events || {};\n  // set listeners array\n  var listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( listeners.indexOf( listener ) == -1 ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  var onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var i = 0;\n  var listener = listeners[i];\n  args = args || [];\n  // once stuff\n  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  while ( listener ) {\n    var isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n    // get next listener\n    i += isOnce ? 0 : 1;\n    listener = listeners[i];\n  }\n\n  return this;\n};\n\nreturn EvEmitter;\n\n}));\n\n},{}],24:[function(require,module,exports){\n/**\n * Fizzy UI utils v2.0.3\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /*jshint strict: false */ /*globals define, module, require */\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'desandro-matches-selector/matches-selector'\n    ], function( matchesSelector ) {\n      return factory( window, matchesSelector );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('desandro-matches-selector')\n    );\n  } else {\n    // browser global\n    window.fizzyUIUtils = factory(\n      window,\n      window.matchesSelector\n    );\n  }\n\n}( window, function factory( window, matchesSelector ) {\n\n'use strict';\n\nvar utils = {};\n\n// ----- extend ----- //\n\n// extends objects\nutils.extend = function( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n};\n\n// ----- modulo ----- //\n\nutils.modulo = function( num, div ) {\n  return ( ( num % div ) + div ) % div;\n};\n\n// ----- makeArray ----- //\n\n// turn element or nodeList into an array\nutils.makeArray = function( obj ) {\n  var ary = [];\n  if ( Array.isArray( obj ) ) {\n    // use object if already an array\n    ary = obj;\n  } else if ( obj && typeof obj.length == 'number' ) {\n    // convert nodeList to array\n    for ( var i=0; i < obj.length; i++ ) {\n      ary.push( obj[i] );\n    }\n  } else {\n    // array of single index\n    ary.push( obj );\n  }\n  return ary;\n};\n\n// ----- removeFrom ----- //\n\nutils.removeFrom = function( ary, obj ) {\n  var index = ary.indexOf( obj );\n  if ( index != -1 ) {\n    ary.splice( index, 1 );\n  }\n};\n\n// ----- getParent ----- //\n\nutils.getParent = function( elem, selector ) {\n  while ( elem != document.body ) {\n    elem = elem.parentNode;\n    if ( matchesSelector( elem, selector ) ) {\n      return elem;\n    }\n  }\n};\n\n// ----- getQueryElement ----- //\n\n// use element as selector string\nutils.getQueryElement = function( elem ) {\n  if ( typeof elem == 'string' ) {\n    return document.querySelector( elem );\n  }\n  return elem;\n};\n\n// ----- handleEvent ----- //\n\n// enable .ontype to trigger from .addEventListener( elem, 'type' )\nutils.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\n// ----- filterFindElements ----- //\n\nutils.filterFindElements = function( elems, selector ) {\n  // make array of elems\n  elems = utils.makeArray( elems );\n  var ffElems = [];\n\n  elems.forEach( function( elem ) {\n    // check that elem is an actual element\n    if ( !( elem instanceof HTMLElement ) ) {\n      return;\n    }\n    // add elem if no selector\n    if ( !selector ) {\n      ffElems.push( elem );\n      return;\n    }\n    // filter & find items if we have a selector\n    // filter\n    if ( matchesSelector( elem, selector ) ) {\n      ffElems.push( elem );\n    }\n    // find children\n    var childElems = elem.querySelectorAll( selector );\n    // concat childElems to filterFound array\n    for ( var i=0; i < childElems.length; i++ ) {\n      ffElems.push( childElems[i] );\n    }\n  });\n\n  return ffElems;\n};\n\n// ----- debounceMethod ----- //\n\nutils.debounceMethod = function( _class, methodName, threshold ) {\n  // original method\n  var method = _class.prototype[ methodName ];\n  var timeoutName = methodName + 'Timeout';\n\n  _class.prototype[ methodName ] = function() {\n    var timeout = this[ timeoutName ];\n    if ( timeout ) {\n      clearTimeout( timeout );\n    }\n    var args = arguments;\n\n    var _this = this;\n    this[ timeoutName ] = setTimeout( function() {\n      method.apply( _this, args );\n      delete _this[ timeoutName ];\n    }, threshold || 100 );\n  };\n};\n\n// ----- docReady ----- //\n\nutils.docReady = function( callback ) {\n  var readyState = document.readyState;\n  if ( readyState == 'complete' || readyState == 'interactive' ) {\n    // do async to allow for other scripts to run. metafizzy/flickity#441\n    setTimeout( callback );\n  } else {\n    document.addEventListener( 'DOMContentLoaded', callback );\n  }\n};\n\n// ----- htmlInit ----- //\n\n// http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/\nutils.toDashed = function( str ) {\n  return str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {\n    return $1 + '-' + $2;\n  }).toLowerCase();\n};\n\nvar console = window.console;\n/**\n * allow user to initialize classes via [data-namespace] or .js-namespace class\n * htmlInit( Widget, 'widgetName' )\n * options are parsed from data-namespace-options\n */\nutils.htmlInit = function( WidgetClass, namespace ) {\n  utils.docReady( function() {\n    var dashedNamespace = utils.toDashed( namespace );\n    var dataAttr = 'data-' + dashedNamespace;\n    var dataAttrElems = document.querySelectorAll( '[' + dataAttr + ']' );\n    var jsDashElems = document.querySelectorAll( '.js-' + dashedNamespace );\n    var elems = utils.makeArray( dataAttrElems )\n      .concat( utils.makeArray( jsDashElems ) );\n    var dataOptionsAttr = dataAttr + '-options';\n    var jQuery = window.jQuery;\n\n    elems.forEach( function( elem ) {\n      var attr = elem.getAttribute( dataAttr ) ||\n        elem.getAttribute( dataOptionsAttr );\n      var options;\n      try {\n        options = attr && JSON.parse( attr );\n      } catch ( error ) {\n        // log error, do not initialize\n        if ( console ) {\n          console.error( 'Error parsing ' + dataAttr + ' on ' + elem.className +\n          ': ' + error );\n        }\n        return;\n      }\n      // initialize\n      var instance = new WidgetClass( elem, options );\n      // make available via $().data('namespace')\n      if ( jQuery ) {\n        jQuery.data( elem, namespace, instance );\n      }\n    });\n\n  });\n};\n\n// -----  ----- //\n\nreturn utils;\n\n}));\n\n},{\"desandro-matches-selector\":22}],25:[function(require,module,exports){\n/*!\n * getSize v2.0.2\n * measure size of elements\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n/*global define: false, module: false, console: false */\n\n( function( window, factory ) {\n  'use strict';\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( function() {\n      return factory();\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.getSize = factory();\n  }\n\n})( window, function factory() {\n'use strict';\n\n// -------------------------- helpers -------------------------- //\n\n// get a number from a string, not a percentage\nfunction getStyleSize( value ) {\n  var num = parseFloat( value );\n  // not a percent like '100%', and a number\n  var isValid = value.indexOf('%') == -1 && !isNaN( num );\n  return isValid && num;\n}\n\nfunction noop() {}\n\nvar logError = typeof console == 'undefined' ? noop :\n  function( message ) {\n    console.error( message );\n  };\n\n// -------------------------- measurements -------------------------- //\n\nvar measurements = [\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'paddingBottom',\n  'marginLeft',\n  'marginRight',\n  'marginTop',\n  'marginBottom',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderTopWidth',\n  'borderBottomWidth'\n];\n\nvar measurementsLength = measurements.length;\n\nfunction getZeroSize() {\n  var size = {\n    width: 0,\n    height: 0,\n    innerWidth: 0,\n    innerHeight: 0,\n    outerWidth: 0,\n    outerHeight: 0\n  };\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    size[ measurement ] = 0;\n  }\n  return size;\n}\n\n// -------------------------- getStyle -------------------------- //\n\n/**\n * getStyle, get style of element, check for Firefox bug\n * https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction getStyle( elem ) {\n  var style = getComputedStyle( elem );\n  if ( !style ) {\n    logError( 'Style returned ' + style +\n      '. Are you running this code in a hidden iframe on Firefox? ' +\n      'See http://bit.ly/getsizebug1' );\n  }\n  return style;\n}\n\n// -------------------------- setup -------------------------- //\n\nvar isSetup = false;\n\nvar isBoxSizeOuter;\n\n/**\n * setup\n * check isBoxSizerOuter\n * do on first getSize() rather than on page load for Firefox bug\n */\nfunction setup() {\n  // setup once\n  if ( isSetup ) {\n    return;\n  }\n  isSetup = true;\n\n  // -------------------------- box sizing -------------------------- //\n\n  /**\n   * WebKit measures the outer-width on style.width on border-box elems\n   * IE & Firefox<29 measures the inner-width\n   */\n  var div = document.createElement('div');\n  div.style.width = '200px';\n  div.style.padding = '1px 2px 3px 4px';\n  div.style.borderStyle = 'solid';\n  div.style.borderWidth = '1px 2px 3px 4px';\n  div.style.boxSizing = 'border-box';\n\n  var body = document.body || document.documentElement;\n  body.appendChild( div );\n  var style = getStyle( div );\n\n  getSize.isBoxSizeOuter = isBoxSizeOuter = getStyleSize( style.width ) == 200;\n  body.removeChild( div );\n\n}\n\n// -------------------------- getSize -------------------------- //\n\nfunction getSize( elem ) {\n  setup();\n\n  // use querySeletor if elem is string\n  if ( typeof elem == 'string' ) {\n    elem = document.querySelector( elem );\n  }\n\n  // do not proceed on non-objects\n  if ( !elem || typeof elem != 'object' || !elem.nodeType ) {\n    return;\n  }\n\n  var style = getStyle( elem );\n\n  // if hidden, everything is 0\n  if ( style.display == 'none' ) {\n    return getZeroSize();\n  }\n\n  var size = {};\n  size.width = elem.offsetWidth;\n  size.height = elem.offsetHeight;\n\n  var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n  // get all measurements\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    var value = style[ measurement ];\n    var num = parseFloat( value );\n    // any 'auto', 'medium' value will be 0\n    size[ measurement ] = !isNaN( num ) ? num : 0;\n  }\n\n  var paddingWidth = size.paddingLeft + size.paddingRight;\n  var paddingHeight = size.paddingTop + size.paddingBottom;\n  var marginWidth = size.marginLeft + size.marginRight;\n  var marginHeight = size.marginTop + size.marginBottom;\n  var borderWidth = size.borderLeftWidth + size.borderRightWidth;\n  var borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\n\n  // overwrite width and height if we can get it from style\n  var styleWidth = getStyleSize( style.width );\n  if ( styleWidth !== false ) {\n    size.width = styleWidth +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );\n  }\n\n  var styleHeight = getStyleSize( style.height );\n  if ( styleHeight !== false ) {\n    size.height = styleHeight +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );\n  }\n\n  size.innerWidth = size.width - ( paddingWidth + borderWidth );\n  size.innerHeight = size.height - ( paddingHeight + borderHeight );\n\n  size.outerWidth = size.width + marginWidth;\n  size.outerHeight = size.height + marginHeight;\n\n  return size;\n}\n\nreturn getSize;\n\n});\n\n},{}],26:[function(require,module,exports){\n/*!\n * Isotope v3.0.1\n *\n * Licensed GPLv3 for open source use\n * or Isotope Commercial License for commercial use\n *\n * http://isotope.metafizzy.co\n * Copyright 2016 Metafizzy\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n        'outlayer/outlayer',\n        'get-size/get-size',\n        'desandro-matches-selector/matches-selector',\n        'fizzy-ui-utils/utils',\n        './item',\n        './layout-mode',\n        // include default layout modes\n        './layout-modes/masonry',\n        './layout-modes/fit-rows',\n        './layout-modes/vertical'\n      ],\n      function( Outlayer, getSize, matchesSelector, utils, Item, LayoutMode ) {\n        return factory( window, Outlayer, getSize, matchesSelector, utils, Item, LayoutMode );\n      });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('outlayer'),\n      require('get-size'),\n      require('desandro-matches-selector'),\n      require('fizzy-ui-utils'),\n      require('./item'),\n      require('./layout-mode'),\n      // include default layout modes\n      require('./layout-modes/masonry'),\n      require('./layout-modes/fit-rows'),\n      require('./layout-modes/vertical')\n    );\n  } else {\n    // browser global\n    window.Isotope = factory(\n      window,\n      window.Outlayer,\n      window.getSize,\n      window.matchesSelector,\n      window.fizzyUIUtils,\n      window.Isotope.Item,\n      window.Isotope.LayoutMode\n    );\n  }\n\n}( window, function factory( window, Outlayer, getSize, matchesSelector, utils,\n  Item, LayoutMode ) {\n\n'use strict';\n\n// -------------------------- vars -------------------------- //\n\nvar jQuery = window.jQuery;\n\n// -------------------------- helpers -------------------------- //\n\nvar trim = String.prototype.trim ?\n  function( str ) {\n    return str.trim();\n  } :\n  function( str ) {\n    return str.replace( /^\\s+|\\s+$/g, '' );\n  };\n\n// -------------------------- isotopeDefinition -------------------------- //\n\n  // create an Outlayer layout class\n  var Isotope = Outlayer.create( 'isotope', {\n    layoutMode: 'masonry',\n    isJQueryFiltering: true,\n    sortAscending: true\n  });\n\n  Isotope.Item = Item;\n  Isotope.LayoutMode = LayoutMode;\n\n  var proto = Isotope.prototype;\n\n  proto._create = function() {\n    this.itemGUID = 0;\n    // functions that sort items\n    this._sorters = {};\n    this._getSorters();\n    // call super\n    Outlayer.prototype._create.call( this );\n\n    // create layout modes\n    this.modes = {};\n    // start filteredItems with all items\n    this.filteredItems = this.items;\n    // keep of track of sortBys\n    this.sortHistory = [ 'original-order' ];\n    // create from registered layout modes\n    for ( var name in LayoutMode.modes ) {\n      this._initLayoutMode( name );\n    }\n  };\n\n  proto.reloadItems = function() {\n    // reset item ID counter\n    this.itemGUID = 0;\n    // call super\n    Outlayer.prototype.reloadItems.call( this );\n  };\n\n  proto._itemize = function() {\n    var items = Outlayer.prototype._itemize.apply( this, arguments );\n    // assign ID for original-order\n    for ( var i=0; i < items.length; i++ ) {\n      var item = items[i];\n      item.id = this.itemGUID++;\n    }\n    this._updateItemsSortData( items );\n    return items;\n  };\n\n\n  // -------------------------- layout -------------------------- //\n\n  proto._initLayoutMode = function( name ) {\n    var Mode = LayoutMode.modes[ name ];\n    // set mode options\n    // HACK extend initial options, back-fill in default options\n    var initialOpts = this.options[ name ] || {};\n    this.options[ name ] = Mode.options ?\n      utils.extend( Mode.options, initialOpts ) : initialOpts;\n    // init layout mode instance\n    this.modes[ name ] = new Mode( this );\n  };\n\n\n  proto.layout = function() {\n    // if first time doing layout, do all magic\n    if ( !this._isLayoutInited && this._getOption('initLayout') ) {\n      this.arrange();\n      return;\n    }\n    this._layout();\n  };\n\n  // private method to be used in layout() & magic()\n  proto._layout = function() {\n    // don't animate first layout\n    var isInstant = this._getIsInstant();\n    // layout flow\n    this._resetLayout();\n    this._manageStamps();\n    this.layoutItems( this.filteredItems, isInstant );\n\n    // flag for initalized\n    this._isLayoutInited = true;\n  };\n\n  // filter + sort + layout\n  proto.arrange = function( opts ) {\n    // set any options pass\n    this.option( opts );\n    this._getIsInstant();\n    // filter, sort, and layout\n\n    // filter\n    var filtered = this._filter( this.items );\n    this.filteredItems = filtered.matches;\n\n    this._bindArrangeComplete();\n\n    if ( this._isInstant ) {\n      this._noTransition( this._hideReveal, [ filtered ] );\n    } else {\n      this._hideReveal( filtered );\n    }\n\n    this._sort();\n    this._layout();\n  };\n  // alias to _init for main plugin method\n  proto._init = proto.arrange;\n\n  proto._hideReveal = function( filtered ) {\n    this.reveal( filtered.needReveal );\n    this.hide( filtered.needHide );\n  };\n\n  // HACK\n  // Don't animate/transition first layout\n  // Or don't animate/transition other layouts\n  proto._getIsInstant = function() {\n    var isLayoutInstant = this._getOption('layoutInstant');\n    var isInstant = isLayoutInstant !== undefined ? isLayoutInstant :\n      !this._isLayoutInited;\n    this._isInstant = isInstant;\n    return isInstant;\n  };\n\n  // listen for layoutComplete, hideComplete and revealComplete\n  // to trigger arrangeComplete\n  proto._bindArrangeComplete = function() {\n    // listen for 3 events to trigger arrangeComplete\n    var isLayoutComplete, isHideComplete, isRevealComplete;\n    var _this = this;\n    function arrangeParallelCallback() {\n      if ( isLayoutComplete && isHideComplete && isRevealComplete ) {\n        _this.dispatchEvent( 'arrangeComplete', null, [ _this.filteredItems ] );\n      }\n    }\n    this.once( 'layoutComplete', function() {\n      isLayoutComplete = true;\n      arrangeParallelCallback();\n    });\n    this.once( 'hideComplete', function() {\n      isHideComplete = true;\n      arrangeParallelCallback();\n    });\n    this.once( 'revealComplete', function() {\n      isRevealComplete = true;\n      arrangeParallelCallback();\n    });\n  };\n\n  // -------------------------- filter -------------------------- //\n\n  proto._filter = function( items ) {\n    var filter = this.options.filter;\n    filter = filter || '*';\n    var matches = [];\n    var hiddenMatched = [];\n    var visibleUnmatched = [];\n\n    var test = this._getFilterTest( filter );\n\n    // test each item\n    for ( var i=0; i < items.length; i++ ) {\n      var item = items[i];\n      if ( item.isIgnored ) {\n        continue;\n      }\n      // add item to either matched or unmatched group\n      var isMatched = test( item );\n      // item.isFilterMatched = isMatched;\n      // add to matches if its a match\n      if ( isMatched ) {\n        matches.push( item );\n      }\n      // add to additional group if item needs to be hidden or revealed\n      if ( isMatched && item.isHidden ) {\n        hiddenMatched.push( item );\n      } else if ( !isMatched && !item.isHidden ) {\n        visibleUnmatched.push( item );\n      }\n    }\n\n    // return collections of items to be manipulated\n    return {\n      matches: matches,\n      needReveal: hiddenMatched,\n      needHide: visibleUnmatched\n    };\n  };\n\n  // get a jQuery, function, or a matchesSelector test given the filter\n  proto._getFilterTest = function( filter ) {\n    if ( jQuery && this.options.isJQueryFiltering ) {\n      // use jQuery\n      return function( item ) {\n        return jQuery( item.element ).is( filter );\n      };\n    }\n    if ( typeof filter == 'function' ) {\n      // use filter as function\n      return function( item ) {\n        return filter( item.element );\n      };\n    }\n    // default, use filter as selector string\n    return function( item ) {\n      return matchesSelector( item.element, filter );\n    };\n  };\n\n  // -------------------------- sorting -------------------------- //\n\n  /**\n   * @params {Array} elems\n   * @public\n   */\n  proto.updateSortData = function( elems ) {\n    // get items\n    var items;\n    if ( elems ) {\n      elems = utils.makeArray( elems );\n      items = this.getItems( elems );\n    } else {\n      // update all items if no elems provided\n      items = this.items;\n    }\n\n    this._getSorters();\n    this._updateItemsSortData( items );\n  };\n\n  proto._getSorters = function() {\n    var getSortData = this.options.getSortData;\n    for ( var key in getSortData ) {\n      var sorter = getSortData[ key ];\n      this._sorters[ key ] = mungeSorter( sorter );\n    }\n  };\n\n  /**\n   * @params {Array} items - of Isotope.Items\n   * @private\n   */\n  proto._updateItemsSortData = function( items ) {\n    // do not update if no items\n    var len = items && items.length;\n\n    for ( var i=0; len && i < len; i++ ) {\n      var item = items[i];\n      item.updateSortData();\n    }\n  };\n\n  // ----- munge sorter ----- //\n\n  // encapsulate this, as we just need mungeSorter\n  // other functions in here are just for munging\n  var mungeSorter = ( function() {\n    // add a magic layer to sorters for convienent shorthands\n    // `.foo-bar` will use the text of .foo-bar querySelector\n    // `[foo-bar]` will use attribute\n    // you can also add parser\n    // `.foo-bar parseInt` will parse that as a number\n    function mungeSorter( sorter ) {\n      // if not a string, return function or whatever it is\n      if ( typeof sorter != 'string' ) {\n        return sorter;\n      }\n      // parse the sorter string\n      var args = trim( sorter ).split(' ');\n      var query = args[0];\n      // check if query looks like [an-attribute]\n      var attrMatch = query.match( /^\\[(.+)\\]$/ );\n      var attr = attrMatch && attrMatch[1];\n      var getValue = getValueGetter( attr, query );\n      // use second argument as a parser\n      var parser = Isotope.sortDataParsers[ args[1] ];\n      // parse the value, if there was a parser\n      sorter = parser ? function( elem ) {\n        return elem && parser( getValue( elem ) );\n      } :\n      // otherwise just return value\n      function( elem ) {\n        return elem && getValue( elem );\n      };\n\n      return sorter;\n    }\n\n    // get an attribute getter, or get text of the querySelector\n    function getValueGetter( attr, query ) {\n      // if query looks like [foo-bar], get attribute\n      if ( attr ) {\n        return function getAttribute( elem ) {\n          return elem.getAttribute( attr );\n        };\n      }\n\n      // otherwise, assume its a querySelector, and get its text\n      return function getChildText( elem ) {\n        var child = elem.querySelector( query );\n        return child && child.textContent;\n      };\n    }\n\n    return mungeSorter;\n  })();\n\n  // parsers used in getSortData shortcut strings\n  Isotope.sortDataParsers = {\n    'parseInt': function( val ) {\n      return parseInt( val, 10 );\n    },\n    'parseFloat': function( val ) {\n      return parseFloat( val );\n    }\n  };\n\n  // ----- sort method ----- //\n\n  // sort filteredItem order\n  proto._sort = function() {\n    var sortByOpt = this.options.sortBy;\n    if ( !sortByOpt ) {\n      return;\n    }\n    // concat all sortBy and sortHistory\n    var sortBys = [].concat.apply( sortByOpt, this.sortHistory );\n    // sort magic\n    var itemSorter = getItemSorter( sortBys, this.options.sortAscending );\n    this.filteredItems.sort( itemSorter );\n    // keep track of sortBy History\n    if ( sortByOpt != this.sortHistory[0] ) {\n      // add to front, oldest goes in last\n      this.sortHistory.unshift( sortByOpt );\n    }\n  };\n\n  // returns a function used for sorting\n  function getItemSorter( sortBys, sortAsc ) {\n    return function sorter( itemA, itemB ) {\n      // cycle through all sortKeys\n      for ( var i = 0; i < sortBys.length; i++ ) {\n        var sortBy = sortBys[i];\n        var a = itemA.sortData[ sortBy ];\n        var b = itemB.sortData[ sortBy ];\n        if ( a > b || a < b ) {\n          // if sortAsc is an object, use the value given the sortBy key\n          var isAscending = sortAsc[ sortBy ] !== undefined ? sortAsc[ sortBy ] : sortAsc;\n          var direction = isAscending ? 1 : -1;\n          return ( a > b ? 1 : -1 ) * direction;\n        }\n      }\n      return 0;\n    };\n  }\n\n  // -------------------------- methods -------------------------- //\n\n  // get layout mode\n  proto._mode = function() {\n    var layoutMode = this.options.layoutMode;\n    var mode = this.modes[ layoutMode ];\n    if ( !mode ) {\n      // TODO console.error\n      throw new Error( 'No layout mode: ' + layoutMode );\n    }\n    // HACK sync mode's options\n    // any options set after init for layout mode need to be synced\n    mode.options = this.options[ layoutMode ];\n    return mode;\n  };\n\n  proto._resetLayout = function() {\n    // trigger original reset layout\n    Outlayer.prototype._resetLayout.call( this );\n    this._mode()._resetLayout();\n  };\n\n  proto._getItemLayoutPosition = function( item  ) {\n    return this._mode()._getItemLayoutPosition( item );\n  };\n\n  proto._manageStamp = function( stamp ) {\n    this._mode()._manageStamp( stamp );\n  };\n\n  proto._getContainerSize = function() {\n    return this._mode()._getContainerSize();\n  };\n\n  proto.needsResizeLayout = function() {\n    return this._mode().needsResizeLayout();\n  };\n\n  // -------------------------- adding & removing -------------------------- //\n\n  // HEADS UP overwrites default Outlayer appended\n  proto.appended = function( elems ) {\n    var items = this.addItems( elems );\n    if ( !items.length ) {\n      return;\n    }\n    // filter, layout, reveal new items\n    var filteredItems = this._filterRevealAdded( items );\n    // add to filteredItems\n    this.filteredItems = this.filteredItems.concat( filteredItems );\n  };\n\n  // HEADS UP overwrites default Outlayer prepended\n  proto.prepended = function( elems ) {\n    var items = this._itemize( elems );\n    if ( !items.length ) {\n      return;\n    }\n    // start new layout\n    this._resetLayout();\n    this._manageStamps();\n    // filter, layout, reveal new items\n    var filteredItems = this._filterRevealAdded( items );\n    // layout previous items\n    this.layoutItems( this.filteredItems );\n    // add to items and filteredItems\n    this.filteredItems = filteredItems.concat( this.filteredItems );\n    this.items = items.concat( this.items );\n  };\n\n  proto._filterRevealAdded = function( items ) {\n    var filtered = this._filter( items );\n    this.hide( filtered.needHide );\n    // reveal all new items\n    this.reveal( filtered.matches );\n    // layout new items, no transition\n    this.layoutItems( filtered.matches, true );\n    return filtered.matches;\n  };\n\n  /**\n   * Filter, sort, and layout newly-appended item elements\n   * @param {Array or NodeList or Element} elems\n   */\n  proto.insert = function( elems ) {\n    var items = this.addItems( elems );\n    if ( !items.length ) {\n      return;\n    }\n    // append item elements\n    var i, item;\n    var len = items.length;\n    for ( i=0; i < len; i++ ) {\n      item = items[i];\n      this.element.appendChild( item.element );\n    }\n    // filter new stuff\n    var filteredInsertItems = this._filter( items ).matches;\n    // set flag\n    for ( i=0; i < len; i++ ) {\n      items[i].isLayoutInstant = true;\n    }\n    this.arrange();\n    // reset flag\n    for ( i=0; i < len; i++ ) {\n      delete items[i].isLayoutInstant;\n    }\n    this.reveal( filteredInsertItems );\n  };\n\n  var _remove = proto.remove;\n  proto.remove = function( elems ) {\n    elems = utils.makeArray( elems );\n    var removeItems = this.getItems( elems );\n    // do regular thing\n    _remove.call( this, elems );\n    // bail if no items to remove\n    var len = removeItems && removeItems.length;\n    // remove elems from filteredItems\n    for ( var i=0; len && i < len; i++ ) {\n      var item = removeItems[i];\n      // remove item from collection\n      utils.removeFrom( this.filteredItems, item );\n    }\n  };\n\n  proto.shuffle = function() {\n    // update random sortData\n    for ( var i=0; i < this.items.length; i++ ) {\n      var item = this.items[i];\n      item.sortData.random = Math.random();\n    }\n    this.options.sortBy = 'random';\n    this._sort();\n    this._layout();\n  };\n\n  /**\n   * trigger fn without transition\n   * kind of hacky to have this in the first place\n   * @param {Function} fn\n   * @param {Array} args\n   * @returns ret\n   * @private\n   */\n  proto._noTransition = function( fn, args ) {\n    // save transitionDuration before disabling\n    var transitionDuration = this.options.transitionDuration;\n    // disable transition\n    this.options.transitionDuration = 0;\n    // do it\n    var returnValue = fn.apply( this, args );\n    // re-enable transition for reveal\n    this.options.transitionDuration = transitionDuration;\n    return returnValue;\n  };\n\n  // ----- helper methods ----- //\n\n  /**\n   * getter method for getting filtered item elements\n   * @returns {Array} elems - collection of item elements\n   */\n  proto.getFilteredItemElements = function() {\n    return this.filteredItems.map( function( item ) {\n      return item.element;\n    });\n  };\n\n  // -----  ----- //\n\n  return Isotope;\n\n}));\n\n},{\"./item\":27,\"./layout-mode\":28,\"./layout-modes/fit-rows\":29,\"./layout-modes/masonry\":30,\"./layout-modes/vertical\":31,\"desandro-matches-selector\":22,\"fizzy-ui-utils\":24,\"get-size\":25,\"outlayer\":36}],27:[function(require,module,exports){\n/**\n * Isotope Item\n**/\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n        'outlayer/outlayer'\n      ],\n      factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      require('outlayer')\n    );\n  } else {\n    // browser global\n    window.Isotope = window.Isotope || {};\n    window.Isotope.Item = factory(\n      window.Outlayer\n    );\n  }\n\n}( window, function factory( Outlayer ) {\n'use strict';\n\n// -------------------------- Item -------------------------- //\n\n// sub-class Outlayer Item\nfunction Item() {\n  Outlayer.Item.apply( this, arguments );\n}\n\nvar proto = Item.prototype = Object.create( Outlayer.Item.prototype );\n\nvar _create = proto._create;\nproto._create = function() {\n  // assign id, used for original-order sorting\n  this.id = this.layout.itemGUID++;\n  _create.call( this );\n  this.sortData = {};\n};\n\nproto.updateSortData = function() {\n  if ( this.isIgnored ) {\n    return;\n  }\n  // default sorters\n  this.sortData.id = this.id;\n  // for backward compatibility\n  this.sortData['original-order'] = this.id;\n  this.sortData.random = Math.random();\n  // go thru getSortData obj and apply the sorters\n  var getSortData = this.layout.options.getSortData;\n  var sorters = this.layout._sorters;\n  for ( var key in getSortData ) {\n    var sorter = sorters[ key ];\n    this.sortData[ key ] = sorter( this.element, this );\n  }\n};\n\nvar _destroy = proto.destroy;\nproto.destroy = function() {\n  // call super\n  _destroy.apply( this, arguments );\n  // reset display, #741\n  this.css({\n    display: ''\n  });\n};\n\nreturn Item;\n\n}));\n\n},{\"outlayer\":36}],28:[function(require,module,exports){\n/**\n * Isotope LayoutMode\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n        'get-size/get-size',\n        'outlayer/outlayer'\n      ],\n      factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      require('get-size'),\n      require('outlayer')\n    );\n  } else {\n    // browser global\n    window.Isotope = window.Isotope || {};\n    window.Isotope.LayoutMode = factory(\n      window.getSize,\n      window.Outlayer\n    );\n  }\n\n}( window, function factory( getSize, Outlayer ) {\n  'use strict';\n\n  // layout mode class\n  function LayoutMode( isotope ) {\n    this.isotope = isotope;\n    // link properties\n    if ( isotope ) {\n      this.options = isotope.options[ this.namespace ];\n      this.element = isotope.element;\n      this.items = isotope.filteredItems;\n      this.size = isotope.size;\n    }\n  }\n\n  var proto = LayoutMode.prototype;\n\n  /**\n   * some methods should just defer to default Outlayer method\n   * and reference the Isotope instance as `this`\n  **/\n  var facadeMethods = [\n    '_resetLayout',\n    '_getItemLayoutPosition',\n    '_manageStamp',\n    '_getContainerSize',\n    '_getElementOffset',\n    'needsResizeLayout',\n    '_getOption'\n  ];\n\n  facadeMethods.forEach( function( methodName ) {\n    proto[ methodName ] = function() {\n      return Outlayer.prototype[ methodName ].apply( this.isotope, arguments );\n    };\n  });\n\n  // -----  ----- //\n\n  // for horizontal layout modes, check vertical size\n  proto.needsVerticalResizeLayout = function() {\n    // don't trigger if size did not change\n    var size = getSize( this.isotope.element );\n    // check that this.size and size are there\n    // IE8 triggers resize on body size change, so they might not be\n    var hasSizes = this.isotope.size && size;\n    return hasSizes && size.innerHeight != this.isotope.size.innerHeight;\n  };\n\n  // ----- measurements ----- //\n\n  proto._getMeasurement = function() {\n    this.isotope._getMeasurement.apply( this, arguments );\n  };\n\n  proto.getColumnWidth = function() {\n    this.getSegmentSize( 'column', 'Width' );\n  };\n\n  proto.getRowHeight = function() {\n    this.getSegmentSize( 'row', 'Height' );\n  };\n\n  /**\n   * get columnWidth or rowHeight\n   * segment: 'column' or 'row'\n   * size 'Width' or 'Height'\n  **/\n  proto.getSegmentSize = function( segment, size ) {\n    var segmentName = segment + size;\n    var outerSize = 'outer' + size;\n    // columnWidth / outerWidth // rowHeight / outerHeight\n    this._getMeasurement( segmentName, outerSize );\n    // got rowHeight or columnWidth, we can chill\n    if ( this[ segmentName ] ) {\n      return;\n    }\n    // fall back to item of first element\n    var firstItemSize = this.getFirstItemSize();\n    this[ segmentName ] = firstItemSize && firstItemSize[ outerSize ] ||\n      // or size of container\n      this.isotope.size[ 'inner' + size ];\n  };\n\n  proto.getFirstItemSize = function() {\n    var firstItem = this.isotope.filteredItems[0];\n    return firstItem && firstItem.element && getSize( firstItem.element );\n  };\n\n  // ----- methods that should reference isotope ----- //\n\n  proto.layout = function() {\n    this.isotope.layout.apply( this.isotope, arguments );\n  };\n\n  proto.getSize = function() {\n    this.isotope.getSize();\n    this.size = this.isotope.size;\n  };\n\n  // -------------------------- create -------------------------- //\n\n  LayoutMode.modes = {};\n\n  LayoutMode.create = function( namespace, options ) {\n\n    function Mode() {\n      LayoutMode.apply( this, arguments );\n    }\n\n    Mode.prototype = Object.create( proto );\n    Mode.prototype.constructor = Mode;\n\n    // default options\n    if ( options ) {\n      Mode.options = options;\n    }\n\n    Mode.prototype.namespace = namespace;\n    // register in Isotope\n    LayoutMode.modes[ namespace ] = Mode;\n\n    return Mode;\n  };\n\n  return LayoutMode;\n\n}));\n\n},{\"get-size\":25,\"outlayer\":36}],29:[function(require,module,exports){\n/**\n * fitRows layout mode\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n        '../layout-mode'\n      ],\n      factory );\n  } else if ( typeof exports == 'object' ) {\n    // CommonJS\n    module.exports = factory(\n      require('../layout-mode')\n    );\n  } else {\n    // browser global\n    factory(\n      window.Isotope.LayoutMode\n    );\n  }\n\n}( window, function factory( LayoutMode ) {\n'use strict';\n\nvar FitRows = LayoutMode.create('fitRows');\n\nvar proto = FitRows.prototype;\n\nproto._resetLayout = function() {\n  this.x = 0;\n  this.y = 0;\n  this.maxY = 0;\n  this._getMeasurement( 'gutter', 'outerWidth' );\n};\n\nproto._getItemLayoutPosition = function( item ) {\n  item.getSize();\n\n  var itemWidth = item.size.outerWidth + this.gutter;\n  // if this element cannot fit in the current row\n  var containerWidth = this.isotope.size.innerWidth + this.gutter;\n  if ( this.x !== 0 && itemWidth + this.x > containerWidth ) {\n    this.x = 0;\n    this.y = this.maxY;\n  }\n\n  var position = {\n    x: this.x,\n    y: this.y\n  };\n\n  this.maxY = Math.max( this.maxY, this.y + item.size.outerHeight );\n  this.x += itemWidth;\n\n  return position;\n};\n\nproto._getContainerSize = function() {\n  return { height: this.maxY };\n};\n\nreturn FitRows;\n\n}));\n\n},{\"../layout-mode\":28}],30:[function(require,module,exports){\n/*!\n * Masonry layout mode\n * sub-classes Masonry\n * http://masonry.desandro.com\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n        '../layout-mode',\n        'masonry/masonry'\n      ],\n      factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      require('../layout-mode'),\n      require('masonry-layout')\n    );\n  } else {\n    // browser global\n    factory(\n      window.Isotope.LayoutMode,\n      window.Masonry\n    );\n  }\n\n}( window, function factory( LayoutMode, Masonry ) {\n'use strict';\n\n// -------------------------- masonryDefinition -------------------------- //\n\n  // create an Outlayer layout class\n  var MasonryMode = LayoutMode.create('masonry');\n\n  var proto = MasonryMode.prototype;\n\n  var keepModeMethods = {\n    _getElementOffset: true,\n    layout: true,\n    _getMeasurement: true\n  };\n\n  // inherit Masonry prototype\n  for ( var method in Masonry.prototype ) {\n    // do not inherit mode methods\n    if ( !keepModeMethods[ method ] ) {\n      proto[ method ] = Masonry.prototype[ method ];\n    }\n  }\n\n  var measureColumns = proto.measureColumns;\n  proto.measureColumns = function() {\n    // set items, used if measuring first item\n    this.items = this.isotope.filteredItems;\n    measureColumns.call( this );\n  };\n\n  // point to mode options for fitWidth\n  var _getOption = proto._getOption;\n  proto._getOption = function( option ) {\n    if ( option == 'fitWidth' ) {\n      return this.options.isFitWidth !== undefined ?\n        this.options.isFitWidth : this.options.fitWidth;\n    }\n    return _getOption.apply( this.isotope, arguments );\n  };\n\n  return MasonryMode;\n\n}));\n\n},{\"../layout-mode\":28,\"masonry-layout\":34}],31:[function(require,module,exports){\n/**\n * vertical layout mode\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n        '../layout-mode'\n      ],\n      factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      require('../layout-mode')\n    );\n  } else {\n    // browser global\n    factory(\n      window.Isotope.LayoutMode\n    );\n  }\n\n}( window, function factory( LayoutMode ) {\n'use strict';\n\nvar Vertical = LayoutMode.create( 'vertical', {\n  horizontalAlignment: 0\n});\n\nvar proto = Vertical.prototype;\n\nproto._resetLayout = function() {\n  this.y = 0;\n};\n\nproto._getItemLayoutPosition = function( item ) {\n  item.getSize();\n  var x = ( this.isotope.size.innerWidth - item.size.outerWidth ) *\n    this.options.horizontalAlignment;\n  var y = this.y;\n  this.y += item.size.outerHeight;\n  return { x: x, y: y };\n};\n\nproto._getContainerSize = function() {\n  return { height: this.y };\n};\n\nreturn Vertical;\n\n}));\n\n},{\"../layout-mode\":28}],32:[function(require,module,exports){\n/**\n * Bridget makes jQuery widgets\n * v2.0.1\n * MIT license\n */\n\n/* jshint browser: true, strict: true, undef: true, unused: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /*jshint strict: false */ /* globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [ 'jquery' ], function( jQuery ) {\n      return factory( window, jQuery );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('jquery')\n    );\n  } else {\n    // browser global\n    window.jQueryBridget = factory(\n      window,\n      window.jQuery\n    );\n  }\n\n}( window, function factory( window, jQuery ) {\n'use strict';\n\n// ----- utils ----- //\n\nvar arraySlice = Array.prototype.slice;\n\n// helper function for logging errors\n// $.error breaks jQuery chaining\nvar console = window.console;\nvar logError = typeof console == 'undefined' ? function() {} :\n  function( message ) {\n    console.error( message );\n  };\n\n// ----- jQueryBridget ----- //\n\nfunction jQueryBridget( namespace, PluginClass, $ ) {\n  $ = $ || jQuery || window.jQuery;\n  if ( !$ ) {\n    return;\n  }\n\n  // add option method -> $().plugin('option', {...})\n  if ( !PluginClass.prototype.option ) {\n    // option setter\n    PluginClass.prototype.option = function( opts ) {\n      // bail out if not an object\n      if ( !$.isPlainObject( opts ) ){\n        return;\n      }\n      this.options = $.extend( true, this.options, opts );\n    };\n  }\n\n  // make jQuery plugin\n  $.fn[ namespace ] = function( arg0 /*, arg1 */ ) {\n    if ( typeof arg0 == 'string' ) {\n      // method call $().plugin( 'methodName', { options } )\n      // shift arguments by 1\n      var args = arraySlice.call( arguments, 1 );\n      return methodCall( this, arg0, args );\n    }\n    // just $().plugin({ options })\n    plainCall( this, arg0 );\n    return this;\n  };\n\n  // $().plugin('methodName')\n  function methodCall( $elems, methodName, args ) {\n    var returnValue;\n    var pluginMethodStr = '$().' + namespace + '(\"' + methodName + '\")';\n\n    $elems.each( function( i, elem ) {\n      // get instance\n      var instance = $.data( elem, namespace );\n      if ( !instance ) {\n        logError( namespace + ' not initialized. Cannot call methods, i.e. ' +\n          pluginMethodStr );\n        return;\n      }\n\n      var method = instance[ methodName ];\n      if ( !method || methodName.charAt(0) == '_' ) {\n        logError( pluginMethodStr + ' is not a valid method' );\n        return;\n      }\n\n      // apply method, get return value\n      var value = method.apply( instance, args );\n      // set return value if value is returned, use only first value\n      returnValue = returnValue === undefined ? value : returnValue;\n    });\n\n    return returnValue !== undefined ? returnValue : $elems;\n  }\n\n  function plainCall( $elems, options ) {\n    $elems.each( function( i, elem ) {\n      var instance = $.data( elem, namespace );\n      if ( instance ) {\n        // set options & init\n        instance.option( options );\n        instance._init();\n      } else {\n        // initialize new instance\n        instance = new PluginClass( elem, options );\n        $.data( elem, namespace, instance );\n      }\n    });\n  }\n\n  updateJQuery( $ );\n\n}\n\n// ----- updateJQuery ----- //\n\n// set $.bridget for v1 backwards compatibility\nfunction updateJQuery( $ ) {\n  if ( !$ || ( $ && $.bridget ) ) {\n    return;\n  }\n  $.bridget = jQueryBridget;\n}\n\nupdateJQuery( jQuery || window.jQuery );\n\n// -----  ----- //\n\nreturn jQueryBridget;\n\n}));\n\n},{\"jquery\":33}],33:[function(require,module,exports){\n/*!\n * jQuery JavaScript Library v2.2.4\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-05-20T17:23Z\n */\n\n(function( global, factory ) {\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Support: Firefox 18+\n// Can't be in strict mode, several libs including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n//\"use strict\";\nvar arr = [];\n\nvar document = window.document;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar support = {};\n\n\n\nvar\n\tversion = \"2.2.4\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android<4.1\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([\\da-z])/gi,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// Start with an empty selector\n\tselector: \"\",\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\t\treturn num != null ?\n\n\t\t\t// Return just the one element from the set\n\t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\n\n\t\t\t// Return all the elements in a clean array\n\t\t\tslice.call( this );\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\t\tret.context = this.context;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = jQuery.isArray( copy ) ) ) ) {\n\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray( src ) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type( obj ) === \"function\";\n\t},\n\n\tisArray: Array.isArray,\n\n\tisWindow: function( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\n\t\t// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t// adding 1 corrects loss of precision from parseFloat (#15100)\n\t\tvar realStringObj = obj && obj.toString();\n\t\treturn !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\tvar key;\n\n\t\t// Not plain objects:\n\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n\t\t// - DOM nodes\n\t\t// - window\n\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Not own constructor property must be Object\n\t\tif ( obj.constructor &&\n\t\t\t\t!hasOwn.call( obj, \"constructor\" ) &&\n\t\t\t\t!hasOwn.call( obj.constructor.prototype || {}, \"isPrototypeOf\" ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Own properties are enumerated firstly, so to speed up,\n\t\t// if last one is own, then all properties are own\n\t\tfor ( key in obj ) {}\n\n\t\treturn key === undefined || hasOwn.call( obj, key );\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn obj + \"\";\n\t\t}\n\n\t\t// Support: Android<4.0, iOS<6 (functionish RegExp)\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tvar script,\n\t\t\tindirect = eval;\n\n\t\tcode = jQuery.trim( code );\n\n\t\tif ( code ) {\n\n\t\t\t// If the code includes a valid, prologue position\n\t\t\t// strict mode pragma, execute code by injecting a\n\t\t\t// script tag into the document.\n\t\t\tif ( code.indexOf( \"use strict\" ) === 1 ) {\n\t\t\t\tscript = document.createElement( \"script\" );\n\t\t\t\tscript.text = code;\n\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\n\t\t\t} else {\n\n\t\t\t\t// Otherwise, avoid the DOM node creation, insertion\n\t\t\t\t// and removal by using an indirect global eval\n\n\t\t\t\tindirect( code );\n\t\t\t}\n\t\t}\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Support: IE9-11+\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android<4.1\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar tmp, args, proxy;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\tnow: Date.now,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\n// JSHint would error on this code due to the Symbol not being defined in ES5.\n// Defining this global in .jshintrc would create a danger of using the global\n// unguarded in another place, it seems safer to just disable JSHint for these\n// three lines.\n/* jshint ignore: start */\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n/* jshint ignore: end */\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: iOS 8.2 (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.2.1\n * http://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2015-10-17\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// General-purpose constants\n\tMAX_NEGATIVE = 1 << 31,\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// http://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\trescape = /'|\\\\/g,\n\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t};\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, nidselect, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\n\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\tnewContext = context;\n\t\t\t\t\tnewSelector = selector;\n\n\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t// Support: IE <=8\n\t\t\t\t// Exclude object elements\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rescape, \"\\\\$&\" );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\tnidselect = ridentifier.test( nid ) ? \"#\" + nid : \"[id='\" + nid + \"']\";\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = nidselect + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\tif ( newSelector ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */\nfunction assert( fn ) {\n\tvar div = document.createElement(\"div\");\n\n\ttry {\n\t\treturn !!fn( div );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( div.parentNode ) {\n\t\t\tdiv.parentNode.removeChild( div );\n\t\t}\n\t\t// release memory in IE\n\t\tdiv = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, parent,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( (parent = document.defaultView) && parent.top !== parent ) {\n\t\t// Support: IE 11\n\t\tif ( parent.addEventListener ) {\n\t\t\tparent.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( parent.attachEvent ) {\n\t\t\tparent.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( div ) {\n\t\tdiv.className = \"i\";\n\t\treturn !div.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( div ) {\n\t\tdiv.appendChild( document.createComment(\"\") );\n\t\treturn !div.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( div ) {\n\t\tdocElem.appendChild( div ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID find and filter\n\tif ( support.getById ) {\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar m = context.getElementById( id );\n\t\t\t\treturn m ? [ m ] : [];\n\t\t\t}\n\t\t};\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t} else {\n\t\t// Support: IE6/7\n\t\t// getElementById is not reliable as a find shortcut\n\t\tdelete Expr.find[\"ID\"];\n\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See http://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( div ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// http://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( div ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( div.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !div.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibing-combinator selector` fails\n\t\t\tif ( !div.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( div ) {\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tdiv.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( div.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tdiv.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( div ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( div, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!compilerCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": function( elem ) {\n\t\t\treturn elem.disabled === false;\n\t\t},\n\n\t\t\"disabled\": function( elem ) {\n\t\t\treturn elem.disabled === true;\n\t\t},\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tcheckNonElements = base && dir === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( (oldCache = uniqueCache[ dir ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ dir ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\n\t\t\t\tExpr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( div1 ) {\n\t// Should return 1, but returns 4 (following)\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( div ) {\n\tdiv.innerHTML = \"<a href='#'></a>\";\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( div ) {\n\tdiv.innerHTML = \"<input/>\";\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( div ) {\n\treturn div.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\nvar rsingleTag = ( /^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/ );\n\n\n\nvar risSimple = /^.[^:#\\[\\.,]*$/;\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\t/* jshint -W018 */\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\n\t}\n\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\n\t}\n\n\tif ( typeof qualifier === \"string\" ) {\n\t\tif ( risSimple.test( qualifier ) ) {\n\t\t\treturn jQuery.filter( qualifier, elements, not );\n\t\t}\n\n\t\tqualifier = jQuery.filter( qualifier, elements );\n\t}\n\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t} );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\treturn elems.length === 1 && elem.nodeType === 1 ?\n\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\n\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\t\treturn elem.nodeType === 1;\n\t\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i,\n\t\t\tlen = this.length,\n\t\t\tret = [],\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\n\t\treturn ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\t// Support: Blackberry 4.6\n\t\t\t\t\t// gEBID returns nodes no longer in the document (#6963)\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context = document;\n\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis.context = this[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\tif ( selector.selector !== undefined ) {\n\t\t\tthis.selector = selector.selector;\n\t\t\tthis.context = selector.context;\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\n\t\t\t\tjQuery( selectors, context || this.context ) :\n\t\t\t\t0;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t// Always skip document fragments\n\t\t\t\tif ( cur.nodeType < 11 && ( pos ?\n\t\t\t\t\tpos.index( cur ) > -1 :\n\n\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnotwhite = ( /\\S+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( jQuery.isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && jQuery.type( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, listener list, final state\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ), \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ), \"rejected\" ],\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ) ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\n\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis === promise ? newDefer.promise() : this,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Keep pipe for back-compat\n\t\tpromise.pipe = promise.then;\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 3 ];\n\n\t\t\t// promise[ done | fail | progress ] = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add( function() {\n\n\t\t\t\t\t// state = [ resolved | rejected ]\n\t\t\t\t\tstate = stateString;\n\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n\t\t\t}\n\n\t\t\t// deferred[ resolve | reject | notify ]\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? promise : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\n\t\tvar i = 0,\n\t\t\tresolveValues = slice.call( arguments ),\n\t\t\tlength = resolveValues.length,\n\n\t\t\t// the count of uncompleted subordinates\n\t\t\tremaining = length !== 1 ||\n\t\t\t\t( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\n\t\t\t// the master Deferred.\n\t\t\t// If resolveValues consist of only a single Deferred, just use that.\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\n\t\t\t// Update function for both resolve and progress values\n\t\t\tupdateFunc = function( i, contexts, values ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tcontexts[ i ] = this;\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( values === progressValues ) {\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\n\t\t\t\t\t} else if ( !( --remaining ) ) {\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tprogressValues, progressContexts, resolveContexts;\n\n\t\t// Add listeners to Deferred subordinates; treat others as resolved\n\t\tif ( length > 1 ) {\n\t\t\tprogressValues = new Array( length );\n\t\t\tprogressContexts = new Array( length );\n\t\t\tresolveContexts = new Array( length );\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n\t\t\t\t\tresolveValues[ i ].promise()\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) )\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\n\t\t\t\t\t\t.fail( deferred.reject );\n\t\t\t\t} else {\n\t\t\t\t\t--remaining;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If we're not waiting on anything, resolve the master\n\t\tif ( !remaining ) {\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\n\t\t}\n\n\t\treturn deferred.promise();\n\t}\n} );\n\n\n// The deferred used on DOM ready\nvar readyList;\n\njQuery.fn.ready = function( fn ) {\n\n\t// Add the callback\n\tjQuery.ready.promise().done( fn );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.triggerHandler ) {\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\n\t\t\tjQuery( document ).off( \"ready\" );\n\t\t}\n\t}\n} );\n\n/**\n * The ready event handler and self cleanup method\n */\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called\n\t\t// after the browser event has already occurred.\n\t\t// Support: IE9-10 only\n\t\t// Older IE sometimes signals \"interactive\" too soon\n\t\tif ( document.readyState === \"complete\" ||\n\t\t\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\twindow.setTimeout( jQuery.ready );\n\n\t\t} else {\n\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed );\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n// Kick off the DOM ready check even if the user does not\njQuery.ready.promise();\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn chainable ?\n\t\telems :\n\n\t\t// Gets\n\t\tbulk ?\n\t\t\tfn.call( elems ) :\n\t\t\tlen ? fn( elems[ 0 ], key ) : emptyGet;\n};\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\t/* jshint -W018 */\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tregister: function( owner, initial ) {\n\t\tvar value = initial || {};\n\n\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t// use plain assignment\n\t\tif ( owner.nodeType ) {\n\t\t\towner[ this.expando ] = value;\n\n\t\t// Otherwise secure it in a non-enumerable, non-writable property\n\t\t// configurability must be true to allow the property to be\n\t\t// deleted with the delete operator\n\t\t} else {\n\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\tvalue: value,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true\n\t\t\t} );\n\t\t}\n\t\treturn owner[ this.expando ];\n\t},\n\tcache: function( owner ) {\n\n\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t// but we should not, see #8335.\n\t\t// Always return an empty object.\n\t\tif ( !acceptData( owner ) ) {\n\t\t\treturn {};\n\t\t}\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ data ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ prop ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\t\t\towner[ this.expando ] && owner[ this.expando ][ key ];\n\t},\n\taccess: function( owner, key, value ) {\n\t\tvar stored;\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\tstored = this.get( owner, key );\n\n\t\t\treturn stored !== undefined ?\n\t\t\t\tstored : this.get( owner, jQuery.camelCase( key ) );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i, name, camel,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key === undefined ) {\n\t\t\tthis.register( owner );\n\n\t\t} else {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( jQuery.isArray( key ) ) {\n\n\t\t\t\t// If \"name\" is an array of keys...\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\n\t\t\t\t// keys will be converted to camelCase.\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\n\t\t\t\t// both plain key and camelCase key. #12786\n\t\t\t\t// This will only penalize the array argument path.\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\n\t\t\t} else {\n\t\t\t\tcamel = jQuery.camelCase( key );\n\n\t\t\t\t// Try the string as a key before any manipulation\n\t\t\t\tif ( key in cache ) {\n\t\t\t\t\tname = [ key, camel ];\n\t\t\t\t} else {\n\n\t\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\t\tname = camel;\n\t\t\t\t\tname = name in cache ?\n\t\t\t\t\t\t[ name ] : ( name.match( rnotwhite ) || [] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = name.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ name[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <= 35-45+\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=378607\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = data === \"true\" ? true :\n\t\t\t\t\tdata === \"false\" ? false :\n\t\t\t\t\tdata === \"null\" ? null :\n\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t+data + \"\" === data ? +data :\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\n\t\t\t\t\tdata;\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE11+\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data, camelKey;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key as-is\n\t\t\t\tdata = dataUser.get( elem, key ) ||\n\n\t\t\t\t\t// Try to find dashed key if it exists (gh-2779)\n\t\t\t\t\t// This is for 2.2.x only\n\t\t\t\t\tdataUser.get( elem, key.replace( rmultiDash, \"-$&\" ).toLowerCase() );\n\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\tcamelKey = jQuery.camelCase( key );\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key camelized\n\t\t\t\tdata = dataUser.get( elem, camelKey );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tcamelKey = jQuery.camelCase( key );\n\t\t\tthis.each( function() {\n\n\t\t\t\t// First, attempt to store a copy or reference of any\n\t\t\t\t// data that might've been store with a camelCased key.\n\t\t\t\tvar data = dataUser.get( this, camelKey );\n\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\n\t\t\t\t// store property names with dashes in a camelCase form.\n\t\t\t\t// This might not apply to all properties...*\n\t\t\t\tdataUser.set( this, camelKey, value );\n\n\t\t\t\t// *... In the case of properties that might _actually_\n\t\t\t\t// have dashes, we need to also store a copy of that\n\t\t\t\t// unchanged property.\n\t\t\t\tif ( key.indexOf( \"-\" ) > -1 && data !== undefined ) {\n\t\t\t\t\tdataUser.set( this, key, value );\n\t\t\t\t}\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHidden = function( elem, el ) {\n\n\t\t// isHidden might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\t\treturn jQuery.css( elem, \"display\" ) === \"none\" ||\n\t\t\t!jQuery.contains( elem.ownerDocument, elem );\n\t};\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted,\n\t\tscale = 1,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() { return tween.cur(); } :\n\t\t\tfunction() { return jQuery.css( elem, prop, \"\" ); },\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\tdo {\n\n\t\t\t// If previous iteration zeroed out, double until we get *something*.\n\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\n\t\t\tscale = scale || \".5\";\n\n\t\t\t// Adjust and apply\n\t\t\tinitialInUnit = initialInUnit / scale;\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\n\t\t} while (\n\t\t\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\n\t\t);\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([\\w:-]+)/ );\n\nvar rscriptType = ( /^$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE9\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE9\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE9-11+\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret = typeof context.getElementsByTagName !== \"undefined\" ?\n\t\t\tcontext.getElementsByTagName( tag || \"*\" ) :\n\t\t\ttypeof context.querySelectorAll !== \"undefined\" ?\n\t\t\t\tcontext.querySelectorAll( tag || \"*\" ) :\n\t\t\t[];\n\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\n\t\tjQuery.merge( [ context ], ret ) :\n\t\tret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, contains, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( contains ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0-4.3, Safari<=5.1\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Safari<=5.1, Android<4.2\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE<=11+\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE9\n// See #13393 for more info\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( event ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tevent = jQuery.event.fix( event );\n\n\t\tvar i, j, ret, matched, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\targs = slice.call( arguments ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, matches, sel, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Support (at least): Chrome, IE9\n\t\t// Find delegate handlers\n\t\t// Black-hole SVG <use> instance trees (#13180)\n\t\t//\n\t\t// Support: Firefox<=42+\n\t\t// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)\n\t\tif ( delegateCount && cur.nodeType &&\n\t\t\t( event.type !== \"click\" || isNaN( event.button ) || event.button < 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== \"click\" ) ) {\n\t\t\t\t\tmatches = [];\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matches[ sel ] ) {\n\t\t\t\t\t\t\tmatches.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matches.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matches } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\t// Includes some event props shared by KeyEvent and MouseEvent\n\tprops: ( \"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase \" +\n\t\t\"metaKey relatedTarget shiftKey target timeStamp view which\" ).split( \" \" ),\n\n\tfixHooks: {},\n\n\tkeyHooks: {\n\t\tprops: \"char charCode key keyCode\".split( \" \" ),\n\t\tfilter: function( event, original ) {\n\n\t\t\t// Add which for key events\n\t\t\tif ( event.which == null ) {\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tmouseHooks: {\n\t\tprops: ( \"button buttons clientX clientY offsetX offsetY pageX pageY \" +\n\t\t\t\"screenX screenY toElement\" ).split( \" \" ),\n\t\tfilter: function( event, original ) {\n\t\t\tvar eventDoc, doc, body,\n\t\t\t\tbutton = original.button;\n\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\n\t\t\t\teventDoc = event.target.ownerDocument || document;\n\t\t\t\tdoc = eventDoc.documentElement;\n\t\t\t\tbody = eventDoc.body;\n\n\t\t\t\tevent.pageX = original.clientX +\n\t\t\t\t\t( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -\n\t\t\t\t\t( doc && doc.clientLeft || body && body.clientLeft || 0 );\n\t\t\t\tevent.pageY = original.clientY +\n\t\t\t\t\t( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -\n\t\t\t\t\t( doc && doc.clientTop  || body && body.clientTop  || 0 );\n\t\t\t}\n\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\t// Note: button is not normalized, so don't use it\n\t\t\tif ( !event.which && button !== undefined ) {\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tfix: function( event ) {\n\t\tif ( event[ jQuery.expando ] ) {\n\t\t\treturn event;\n\t\t}\n\n\t\t// Create a writable copy of the event object and normalize some properties\n\t\tvar i, prop, copy,\n\t\t\ttype = event.type,\n\t\t\toriginalEvent = event,\n\t\t\tfixHook = this.fixHooks[ type ];\n\n\t\tif ( !fixHook ) {\n\t\t\tthis.fixHooks[ type ] = fixHook =\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\n\t\t\t\t{};\n\t\t}\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n\n\t\tevent = new jQuery.Event( originalEvent );\n\n\t\ti = copy.length;\n\t\twhile ( i-- ) {\n\t\t\tprop = copy[ i ];\n\t\t\tevent[ prop ] = originalEvent[ prop ];\n\t\t}\n\n\t\t// Support: Cordova 2.5 (WebKit) (#13255)\n\t\t// All events should have a target; Cordova deviceready doesn't\n\t\tif ( !event.target ) {\n\t\t\tevent.target = document;\n\t\t}\n\n\t\t// Support: Safari 6.0+, Chrome<28\n\t\t// Target should not be a text node (#504, #13143)\n\t\tif ( event.target.nodeType === 3 ) {\n\t\t\tevent.target = event.target.parentNode;\n\t\t}\n\n\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android<4.0\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://code.google.com/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,\n\n\t// Support: IE 10-11, Edge 10240+\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Manipulating tables requires a tbody\nfunction manipulationTarget( elem, content ) {\n\treturn jQuery.nodeName( elem, \"table\" ) &&\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ?\n\n\t\telem.getElementsByTagName( \"tbody\" )[ 0 ] ||\n\t\t\telem.appendChild( elem.ownerDocument.createElement( \"tbody\" ) ) :\n\t\telem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\n\tif ( match ) {\n\t\telem.type = match[ 1 ];\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tisFunction = jQuery.isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( isFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( isFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tjQuery.globalEval( node.textContent.replace( rcleanScript, \"\" ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <= 35-45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <= 35-45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\n\t// Keep domManip exposed until 3.0 (gh-2225)\n\tdomManip: domManip,\n\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: QtWebKit\n\t\t\t// .get() because push.apply(_, arraylike) throws\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\n\n\nvar iframe,\n\telemdisplay = {\n\n\t\t// Support: Firefox\n\t\t// We have to pre-define these values for FF (#10227)\n\t\tHTML: \"block\",\n\t\tBODY: \"block\"\n\t};\n\n/**\n * Retrieve the actual display of a element\n * @param {String} name nodeName of the element\n * @param {Object} doc Document object\n */\n\n// Called only from within defaultDisplay\nfunction actualDisplay( name, doc ) {\n\tvar elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\n\t\tdisplay = jQuery.css( elem[ 0 ], \"display\" );\n\n\t// We don't have any data stored on the element,\n\t// so use \"detach\" method as fast way to get rid of the element\n\telem.detach();\n\n\treturn display;\n}\n\n/**\n * Try to determine the default display value of an element\n * @param {String} nodeName\n */\nfunction defaultDisplay( nodeName ) {\n\tvar doc = document,\n\t\tdisplay = elemdisplay[ nodeName ];\n\n\tif ( !display ) {\n\t\tdisplay = actualDisplay( nodeName, doc );\n\n\t\t// If the simple way fails, read from inside an iframe\n\t\tif ( display === \"none\" || !display ) {\n\n\t\t\t// Use the already-created iframe if possible\n\t\t\tiframe = ( iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" ) )\n\t\t\t\t.appendTo( doc.documentElement );\n\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\tdoc = iframe[ 0 ].contentDocument;\n\n\t\t\t// Support: IE\n\t\t\tdoc.write();\n\t\t\tdoc.close();\n\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\tiframe.detach();\n\t\t}\n\n\t\t// Store the correct default display\n\t\telemdisplay[ nodeName ] = display;\n\t}\n\n\treturn display;\n}\nvar rmargin = ( /^margin/ );\n\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE<=11+, Firefox<=30+ (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar documentElement = document.documentElement;\n\n\n\n( function() {\n\tvar pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE9-11+\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tcontainer.style.cssText = \"border:0;width:8px;height:0;top:0;left:-9999px;\" +\n\t\t\"padding:0;margin-top:1px;position:absolute\";\n\tcontainer.appendChild( div );\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\t\tdiv.style.cssText =\n\n\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t// Vendor-prefix box-sizing\n\t\t\t\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;\" +\n\t\t\t\"position:relative;display:block;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"top:1%;width:50%\";\n\t\tdiv.innerHTML = \"\";\n\t\tdocumentElement.appendChild( container );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\t\treliableMarginLeftVal = divStyle.marginLeft === \"2px\";\n\t\tboxSizingReliableVal = divStyle.width === \"4px\";\n\n\t\t// Support: Android 4.0 - 4.3 only\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.marginRight = \"50%\";\n\t\tpixelMarginRightVal = divStyle.marginRight === \"4px\";\n\n\t\tdocumentElement.removeChild( container );\n\t}\n\n\tjQuery.extend( support, {\n\t\tpixelPosition: function() {\n\n\t\t\t// This test is executed only once but we still do memoizing\n\t\t\t// since we can use the boxSizingReliable pre-computing.\n\t\t\t// No need to check if the test was already performed, though.\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\tboxSizingReliable: function() {\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelMarginRight: function() {\n\n\t\t\t// Support: Android 4.0-4.3\n\t\t\t// We're checking for boxSizingReliableVal here instead of pixelMarginRightVal\n\t\t\t// since that compresses better and they're computed together anyway.\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn pixelMarginRightVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\n\t\t\t// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\treliableMarginRight: function() {\n\n\t\t\t// Support: Android 2.3\n\t\t\t// Check if div with explicit width and no margin-right incorrectly\n\t\t\t// gets computed margin-right based on width of container. (#3333)\n\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\t// This support function is only executed once so no memoizing is needed.\n\t\t\tvar ret,\n\t\t\t\tmarginDiv = div.appendChild( document.createElement( \"div\" ) );\n\n\t\t\t// Reset CSS: box-sizing; display; margin; border; padding\n\t\t\tmarginDiv.style.cssText = div.style.cssText =\n\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Vendor-prefix box-sizing\n\t\t\t\t\"-webkit-box-sizing:content-box;box-sizing:content-box;\" +\n\t\t\t\t\"display:block;margin:0;border:0;padding:0\";\n\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\n\t\t\tdiv.style.width = \"1px\";\n\t\t\tdocumentElement.appendChild( container );\n\n\t\t\tret = !parseFloat( window.getComputedStyle( marginDiv ).marginRight );\n\n\t\t\tdocumentElement.removeChild( container );\n\t\t\tdiv.removeChild( marginDiv );\n\n\t\t\treturn ret;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\tret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;\n\n\t// Support: Opera 12.1x only\n\t// Fall back to style even without computed\n\t// computed is undefined for elems on document fragments\n\tif ( ( ret === \"\" || ret === undefined ) && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\tret = jQuery.style( elem, name );\n\t}\n\n\t// Support: IE9\n\t// getPropertyValue is only needed for .css('filter') (#12537)\n\tif ( computed ) {\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// http://dev.w3.org/csswg/cssom/#resolved-values\n\t\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE9-11+\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style;\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\n\n\t\t// If we already have the right measurement, avoid augmentation\n\t\t4 :\n\n\t\t// Otherwise initialize for horizontal or vertical properties\n\t\tname === \"width\" ? 1 : 0,\n\n\t\tval = 0;\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// At this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\n\t\t\t// At this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// At this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar valueIsBorderBox = true,\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// Some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test( val ) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// Check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox &&\n\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// Use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem, hidden,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalues[ index ] = dataPriv.get( elem, \"olddisplay\" );\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Reset the inline display of this element to learn if it is\n\t\t\t// being hidden by cascaded rules or not\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\n\t\t\t\telem.style.display = \"\";\n\t\t\t}\n\n\t\t\t// Set elements which have been overridden with display: none\n\t\t\t// in a stylesheet to whatever the default browser style is\n\t\t\t// for such an element\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\n\t\t\t\tvalues[ index ] = dataPriv.access(\n\t\t\t\t\telem,\n\t\t\t\t\t\"olddisplay\",\n\t\t\t\t\tdefaultDisplay( elem.nodeName )\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\thidden = isHidden( elem );\n\n\t\t\tif ( display !== \"none\" || !hidden ) {\n\t\t\t\tdataPriv.set(\n\t\t\t\t\telem,\n\t\t\t\t\t\"olddisplay\",\n\t\t\t\t\thidden ? display : jQuery.css( elem, \"display\" )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of most of the elements in a second loop\n\t// to avoid the constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t\"float\": \"cssFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\tif ( type === \"number\" ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tstyle[ name ] = value;\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\t\t\t\t\telem.offsetWidth === 0 ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = extra && getStyles( elem ),\n\t\t\t\tsubtract = extra && augmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ name ] = value;\n\t\t\t\tvalue = jQuery.css( elem, name );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// Support: Android 2.3\njQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn swap( elem, { \"display\": \"inline-block\" },\n\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t},\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHidden( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE9\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back Compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = jQuery.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4 ; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\t/* jshint validthis: true */\n\tvar prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHidden( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Handle queue: false promises\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Height/width overflow pass\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\n\n\t\t// Make sure that nothing sneaks out\n\t\t// Record all 3 overflow attributes because IE9-10 do not\n\t\t// change the overflow attribute when overflowX and\n\t\t// overflowY are set to the same value\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Set display property to inline-block for height/width\n\t\t// animations on inline elements that are having width/height animated\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\n\t\t// Test default display if display is currently \"none\"\n\t\tcheckDisplay = display === \"none\" ?\n\t\t\tdataPriv.get( elem, \"olddisplay\" ) || defaultDisplay( elem.nodeName ) : display;\n\n\t\tif ( checkDisplay === \"inline\" && jQuery.css( elem, \"float\" ) === \"none\" ) {\n\t\t\tstyle.display = \"inline-block\";\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// show/hide pass\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.exec( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// If there is dataShow left over from a stopped hide or show\n\t\t\t\t// and we are going to proceed with show, we should pretend to be hidden\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\n\t\t// Any non-fx value stops us from restoring the original display value\n\t\t} else {\n\t\t\tdisplay = undefined;\n\t\t}\n\t}\n\n\tif ( !jQuery.isEmptyObject( orig ) ) {\n\t\tif ( dataShow ) {\n\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\thidden = dataShow.hidden;\n\t\t\t}\n\t\t} else {\n\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", {} );\n\t\t}\n\n\t\t// Store state if its toggle - enables .stop().toggle() to \"reverse\"\n\t\tif ( toggle ) {\n\t\t\tdataShow.hidden = !hidden;\n\t\t}\n\t\tif ( hidden ) {\n\t\t\tjQuery( elem ).show();\n\t\t} else {\n\t\t\tanim.done( function() {\n\t\t\t\tjQuery( elem ).hide();\n\t\t\t} );\n\t\t}\n\t\tanim.done( function() {\n\t\t\tvar prop;\n\n\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t}\n\t\t} );\n\t\tfor ( prop in orig ) {\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\n\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\tdataShow[ prop ] = tween.start;\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\ttween.end = tween.start;\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t// If this is a noop like .hide().hide(), restore an overwritten display value\n\t} else if ( ( display === \"none\" ? defaultDisplay( elem.nodeName ) : display ) === \"inline\" ) {\n\t\tstyle.display = display;\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length ; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( jQuery.isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tjQuery.proxy( result.stop, result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnotwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length ; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ?\n\t\topt.duration : opt.duration in jQuery.fx.speeds ?\n\t\t\tjQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tif ( timer() ) {\n\t\tjQuery.fx.start();\n\t} else {\n\t\tjQuery.timers.pop();\n\t}\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\twindow.clearInterval( timerId );\n\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: iOS<=5.1, Android<=4.2+\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE<=11+\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: Android<=2.3\n\t// Options inside disabled selects are incorrectly marked as disabled\n\tselect.disabled = true;\n\tsupport.optDisabled = !opt.disabled;\n\n\t// Support: IE<=11+\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// All attributes are lowercase\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\tname = name.toLowerCase();\n\t\t\thooks = jQuery.attrHooks[ name ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name, propName,\n\t\t\ti = 0,\n\t\t\tattrNames = value && value.match( rnotwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\n\n\t\t\t\t// Boolean attributes get special treatment (#10870)\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\n\n\t\t\t\t\t// Set corresponding property to false\n\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t}\n\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle;\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ name ];\n\t\t\tattrHandle[ name ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tname.toLowerCase() :\n\t\t\t\tnull;\n\t\t\tattrHandle[ name ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\treturn tabindex ?\n\t\t\t\t\tparseInt( tabindex, 10 ) :\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\t\trclickable.test( elem.nodeName ) && elem.href ?\n\t\t\t\t\t\t\t0 :\n\t\t\t\t\t\t\t-1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\nvar rclass = /[\\t\\r\\n\\f]/g;\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnotwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 &&\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnotwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 &&\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( type === \"string\" ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = value.match( rnotwhite ) || [];\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + getClass( elem ) + \" \" ).replace( rclass, \" \" )\n\t\t\t\t\t.indexOf( className ) > -1\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g,\n\trspaces = /[\\x20\\t\\r\\n\\f]+/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\treturn typeof ret === \"string\" ?\n\n\t\t\t\t\t// Handle most common string cases\n\t\t\t\t\tret.replace( rreturn, \"\" ) :\n\n\t\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\t\tret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE10-11+\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tjQuery.trim( jQuery.text( elem ) ).replace( rspaces, \" \" );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length,\n\t\t\t\t\ti = index < 0 ?\n\t\t\t\t\t\tmax :\n\t\t\t\t\t\tone ? index : 0;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t( support.optDisabled ?\n\t\t\t\t\t\t\t\t!option.disabled : option.getAttribute( \"disabled\" ) === null ) &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\telem[ type ]();\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup error contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\n// Support: Firefox\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome, Safari\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = jQuery.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Support: Android 2.3\n// Workaround failure to string-cast null input\njQuery.parseJSON = function( data ) {\n\treturn JSON.parse( data + \"\" );\n};\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE9\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trhash = /#.*$/,\n\trts = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": jQuery.parseJSON,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// The jqXHR state\n\t\t\tstate = 0,\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tvar lname = name.toLowerCase();\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\t\t\tfor ( code in map ) {\n\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n\t\tjqXHR.success = jqXHR.done;\n\t\tjqXHR.error = jqXHR.fail;\n\n\t\t// Remove hash character (#7531: and string promotion)\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" ).replace( rhash, \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE8-11+\n\t\t\t// IE throws exception if url is malformed, e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE8-11+\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( state === 2 ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\tcacheURL = s.url;\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add anti-cache in url if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\ts.url = rts.test( cacheURL ) ?\n\n\t\t\t\t\t// If there is already a '_' parameter, set its value\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + nonce++ ) :\n\n\t\t\t\t\t// Otherwise add one to the end\n\t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + nonce++;\n\t\t\t}\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\n\t\t\tjqXHR[ i ]( s[ i ] );\n\t\t}\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tstate = 1;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Propagate exception as error if not done\n\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\tdone( -1, e );\n\n\t\t\t\t// Simply rethrow otherwise\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Called once\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// State is \"done\" now\n\t\t\tstate = 2;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapAll( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( this[ 0 ] ) {\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function() {\n\t\treturn this.parent().each( function() {\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t}\n\t\t} ).end();\n\t}\n} );\n\n\njQuery.expr.filters.hidden = function( elem ) {\n\treturn !jQuery.expr.filters.visible( elem );\n};\njQuery.expr.filters.visible = function( elem ) {\n\n\t// Support: Opera <= 12.12\n\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\n\t// Use OR instead of AND as the element is not visible if either is true\n\t// See tickets #10406 and #13132\n\treturn elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0;\n};\n\n\n\n\nvar r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\tif ( traditional === undefined ) {\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\treturn val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\tjQuery.map( val, function( val ) {\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t} ) :\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE9\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE9\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = callback( \"error\" );\n\n\t\t\t\t// Support: IE9\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t} ).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\tcontext = context || document;\n\n\tvar parsed = rsingleTag.exec( data ),\n\t\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n// Keep a copy of the old load method\nvar _load = jQuery.fn.load;\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tif ( typeof url !== \"string\" && _load ) {\n\t\treturn _load.apply( this, arguments );\n\t}\n\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = jQuery.trim( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.filters.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\n/**\n * Gets a window from an element\n */\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\toffset: function( options ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar docElem, win,\n\t\t\telem = this[ 0 ],\n\t\t\tbox = { top: 0, left: 0 },\n\t\t\tdoc = elem && elem.ownerDocument;\n\n\t\tif ( !doc ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdocElem = doc.documentElement;\n\n\t\t// Make sure it's not a disconnected DOM node\n\t\tif ( !jQuery.contains( docElem, elem ) ) {\n\t\t\treturn box;\n\t\t}\n\n\t\tbox = elem.getBoundingClientRect();\n\t\twin = getWindow( doc );\n\t\treturn {\n\t\t\ttop: box.top + win.pageYOffset - docElem.clientTop,\n\t\t\tleft: box.left + win.pageXOffset - docElem.clientLeft\n\t\t};\n\t},\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n\t\t// because it is its only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume getBoundingClientRect is there when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset.top += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari<7-8+, Chrome<37-44+\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t};\n\t} );\n} );\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t},\n\tsize: function() {\n\t\treturn this.length;\n\t}\n} );\n\njQuery.fn.andSelf = jQuery.fn.addBack;\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\nreturn jQuery;\n}));\n\n},{}],34:[function(require,module,exports){\n/*!\n * Masonry v4.1.1\n * Cascading grid layout library\n * http://masonry.desandro.com\n * MIT License\n * by David DeSandro\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n        'outlayer/outlayer',\n        'get-size/get-size'\n      ],\n      factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      require('outlayer'),\n      require('get-size')\n    );\n  } else {\n    // browser global\n    window.Masonry = factory(\n      window.Outlayer,\n      window.getSize\n    );\n  }\n\n}( window, function factory( Outlayer, getSize ) {\n\n'use strict';\n\n// -------------------------- masonryDefinition -------------------------- //\n\n  // create an Outlayer layout class\n  var Masonry = Outlayer.create('masonry');\n  // isFitWidth -> fitWidth\n  Masonry.compatOptions.fitWidth = 'isFitWidth';\n\n  Masonry.prototype._resetLayout = function() {\n    this.getSize();\n    this._getMeasurement( 'columnWidth', 'outerWidth' );\n    this._getMeasurement( 'gutter', 'outerWidth' );\n    this.measureColumns();\n\n    // reset column Y\n    this.colYs = [];\n    for ( var i=0; i < this.cols; i++ ) {\n      this.colYs.push( 0 );\n    }\n\n    this.maxY = 0;\n  };\n\n  Masonry.prototype.measureColumns = function() {\n    this.getContainerWidth();\n    // if columnWidth is 0, default to outerWidth of first item\n    if ( !this.columnWidth ) {\n      var firstItem = this.items[0];\n      var firstItemElem = firstItem && firstItem.element;\n      // columnWidth fall back to item of first element\n      this.columnWidth = firstItemElem && getSize( firstItemElem ).outerWidth ||\n        // if first elem has no width, default to size of container\n        this.containerWidth;\n    }\n\n    var columnWidth = this.columnWidth += this.gutter;\n\n    // calculate columns\n    var containerWidth = this.containerWidth + this.gutter;\n    var cols = containerWidth / columnWidth;\n    // fix rounding errors, typically with gutters\n    var excess = columnWidth - containerWidth % columnWidth;\n    // if overshoot is less than a pixel, round up, otherwise floor it\n    var mathMethod = excess && excess < 1 ? 'round' : 'floor';\n    cols = Math[ mathMethod ]( cols );\n    this.cols = Math.max( cols, 1 );\n  };\n\n  Masonry.prototype.getContainerWidth = function() {\n    // container is parent if fit width\n    var isFitWidth = this._getOption('fitWidth');\n    var container = isFitWidth ? this.element.parentNode : this.element;\n    // check that this.size and size are there\n    // IE8 triggers resize on body size change, so they might not be\n    var size = getSize( container );\n    this.containerWidth = size && size.innerWidth;\n  };\n\n  Masonry.prototype._getItemLayoutPosition = function( item ) {\n    item.getSize();\n    // how many columns does this brick span\n    var remainder = item.size.outerWidth % this.columnWidth;\n    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';\n    // round if off by 1 pixel, otherwise use ceil\n    var colSpan = Math[ mathMethod ]( item.size.outerWidth / this.columnWidth );\n    colSpan = Math.min( colSpan, this.cols );\n\n    var colGroup = this._getColGroup( colSpan );\n    // get the minimum Y value from the columns\n    var minimumY = Math.min.apply( Math, colGroup );\n    var shortColIndex = colGroup.indexOf( minimumY );\n\n    // position the brick\n    var position = {\n      x: this.columnWidth * shortColIndex,\n      y: minimumY\n    };\n\n    // apply setHeight to necessary columns\n    var setHeight = minimumY + item.size.outerHeight;\n    var setSpan = this.cols + 1 - colGroup.length;\n    for ( var i = 0; i < setSpan; i++ ) {\n      this.colYs[ shortColIndex + i ] = setHeight;\n    }\n\n    return position;\n  };\n\n  /**\n   * @param {Number} colSpan - number of columns the element spans\n   * @returns {Array} colGroup\n   */\n  Masonry.prototype._getColGroup = function( colSpan ) {\n    if ( colSpan < 2 ) {\n      // if brick spans only one column, use all the column Ys\n      return this.colYs;\n    }\n\n    var colGroup = [];\n    // how many different places could this brick fit horizontally\n    var groupCount = this.cols + 1 - colSpan;\n    // for each group potential horizontal position\n    for ( var i = 0; i < groupCount; i++ ) {\n      // make an array of colY values for that one group\n      var groupColYs = this.colYs.slice( i, i + colSpan );\n      // and get the max value of the array\n      colGroup[i] = Math.max.apply( Math, groupColYs );\n    }\n    return colGroup;\n  };\n\n  Masonry.prototype._manageStamp = function( stamp ) {\n    var stampSize = getSize( stamp );\n    var offset = this._getElementOffset( stamp );\n    // get the columns that this stamp affects\n    var isOriginLeft = this._getOption('originLeft');\n    var firstX = isOriginLeft ? offset.left : offset.right;\n    var lastX = firstX + stampSize.outerWidth;\n    var firstCol = Math.floor( firstX / this.columnWidth );\n    firstCol = Math.max( 0, firstCol );\n    var lastCol = Math.floor( lastX / this.columnWidth );\n    // lastCol should not go over if multiple of columnWidth #425\n    lastCol -= lastX % this.columnWidth ? 0 : 1;\n    lastCol = Math.min( this.cols - 1, lastCol );\n    // set colYs to bottom of the stamp\n\n    var isOriginTop = this._getOption('originTop');\n    var stampMaxY = ( isOriginTop ? offset.top : offset.bottom ) +\n      stampSize.outerHeight;\n    for ( var i = firstCol; i <= lastCol; i++ ) {\n      this.colYs[i] = Math.max( stampMaxY, this.colYs[i] );\n    }\n  };\n\n  Masonry.prototype._getContainerSize = function() {\n    this.maxY = Math.max.apply( Math, this.colYs );\n    var size = {\n      height: this.maxY\n    };\n\n    if ( this._getOption('fitWidth') ) {\n      size.width = this._getContainerFitWidth();\n    }\n\n    return size;\n  };\n\n  Masonry.prototype._getContainerFitWidth = function() {\n    var unusedCols = 0;\n    // count unused columns\n    var i = this.cols;\n    while ( --i ) {\n      if ( this.colYs[i] !== 0 ) {\n        break;\n      }\n      unusedCols++;\n    }\n    // fit container to columns that have been used\n    return ( this.cols - unusedCols ) * this.columnWidth - this.gutter;\n  };\n\n  Masonry.prototype.needsResizeLayout = function() {\n    var previousWidth = this.containerWidth;\n    this.getContainerWidth();\n    return previousWidth != this.containerWidth;\n  };\n\n  return Masonry;\n\n}));\n\n},{\"get-size\":25,\"outlayer\":36}],35:[function(require,module,exports){\n/**\n * Outlayer Item\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( [\n        'ev-emitter/ev-emitter',\n        'get-size/get-size'\n      ],\n      factory\n    );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory(\n      require('ev-emitter'),\n      require('get-size')\n    );\n  } else {\n    // browser global\n    window.Outlayer = {};\n    window.Outlayer.Item = factory(\n      window.EvEmitter,\n      window.getSize\n    );\n  }\n\n}( window, function factory( EvEmitter, getSize ) {\n'use strict';\n\n// ----- helpers ----- //\n\nfunction isEmptyObj( obj ) {\n  for ( var prop in obj ) {\n    return false;\n  }\n  prop = null;\n  return true;\n}\n\n// -------------------------- CSS3 support -------------------------- //\n\n\nvar docElemStyle = document.documentElement.style;\n\nvar transitionProperty = typeof docElemStyle.transition == 'string' ?\n  'transition' : 'WebkitTransition';\nvar transformProperty = typeof docElemStyle.transform == 'string' ?\n  'transform' : 'WebkitTransform';\n\nvar transitionEndEvent = {\n  WebkitTransition: 'webkitTransitionEnd',\n  transition: 'transitionend'\n}[ transitionProperty ];\n\n// cache all vendor properties that could have vendor prefix\nvar vendorProperties = {\n  transform: transformProperty,\n  transition: transitionProperty,\n  transitionDuration: transitionProperty + 'Duration',\n  transitionProperty: transitionProperty + 'Property',\n  transitionDelay: transitionProperty + 'Delay'\n};\n\n// -------------------------- Item -------------------------- //\n\nfunction Item( element, layout ) {\n  if ( !element ) {\n    return;\n  }\n\n  this.element = element;\n  // parent layout class, i.e. Masonry, Isotope, or Packery\n  this.layout = layout;\n  this.position = {\n    x: 0,\n    y: 0\n  };\n\n  this._create();\n}\n\n// inherit EvEmitter\nvar proto = Item.prototype = Object.create( EvEmitter.prototype );\nproto.constructor = Item;\n\nproto._create = function() {\n  // transition objects\n  this._transn = {\n    ingProperties: {},\n    clean: {},\n    onEnd: {}\n  };\n\n  this.css({\n    position: 'absolute'\n  });\n};\n\n// trigger specified handler for event type\nproto.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\n/**\n * apply CSS styles to element\n * @param {Object} style\n */\nproto.css = function( style ) {\n  var elemStyle = this.element.style;\n\n  for ( var prop in style ) {\n    // use vendor property if available\n    var supportedProp = vendorProperties[ prop ] || prop;\n    elemStyle[ supportedProp ] = style[ prop ];\n  }\n};\n\n // measure position, and sets it\nproto.getPosition = function() {\n  var style = getComputedStyle( this.element );\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n  var xValue = style[ isOriginLeft ? 'left' : 'right' ];\n  var yValue = style[ isOriginTop ? 'top' : 'bottom' ];\n  // convert percent to pixels\n  var layoutSize = this.layout.size;\n  var x = xValue.indexOf('%') != -1 ?\n    ( parseFloat( xValue ) / 100 ) * layoutSize.width : parseInt( xValue, 10 );\n  var y = yValue.indexOf('%') != -1 ?\n    ( parseFloat( yValue ) / 100 ) * layoutSize.height : parseInt( yValue, 10 );\n\n  // clean up 'auto' or other non-integer values\n  x = isNaN( x ) ? 0 : x;\n  y = isNaN( y ) ? 0 : y;\n  // remove padding from measurement\n  x -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;\n  y -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;\n\n  this.position.x = x;\n  this.position.y = y;\n};\n\n// set settled position, apply padding\nproto.layoutPosition = function() {\n  var layoutSize = this.layout.size;\n  var style = {};\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n\n  // x\n  var xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';\n  var xProperty = isOriginLeft ? 'left' : 'right';\n  var xResetProperty = isOriginLeft ? 'right' : 'left';\n\n  var x = this.position.x + layoutSize[ xPadding ];\n  // set in percentage or pixels\n  style[ xProperty ] = this.getXValue( x );\n  // reset other property\n  style[ xResetProperty ] = '';\n\n  // y\n  var yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';\n  var yProperty = isOriginTop ? 'top' : 'bottom';\n  var yResetProperty = isOriginTop ? 'bottom' : 'top';\n\n  var y = this.position.y + layoutSize[ yPadding ];\n  // set in percentage or pixels\n  style[ yProperty ] = this.getYValue( y );\n  // reset other property\n  style[ yResetProperty ] = '';\n\n  this.css( style );\n  this.emitEvent( 'layout', [ this ] );\n};\n\nproto.getXValue = function( x ) {\n  var isHorizontal = this.layout._getOption('horizontal');\n  return this.layout.options.percentPosition && !isHorizontal ?\n    ( ( x / this.layout.size.width ) * 100 ) + '%' : x + 'px';\n};\n\nproto.getYValue = function( y ) {\n  var isHorizontal = this.layout._getOption('horizontal');\n  return this.layout.options.percentPosition && isHorizontal ?\n    ( ( y / this.layout.size.height ) * 100 ) + '%' : y + 'px';\n};\n\nproto._transitionTo = function( x, y ) {\n  this.getPosition();\n  // get current x & y from top/left\n  var curX = this.position.x;\n  var curY = this.position.y;\n\n  var compareX = parseInt( x, 10 );\n  var compareY = parseInt( y, 10 );\n  var didNotMove = compareX === this.position.x && compareY === this.position.y;\n\n  // save end position\n  this.setPosition( x, y );\n\n  // if did not move and not transitioning, just go to layout\n  if ( didNotMove && !this.isTransitioning ) {\n    this.layoutPosition();\n    return;\n  }\n\n  var transX = x - curX;\n  var transY = y - curY;\n  var transitionStyle = {};\n  transitionStyle.transform = this.getTranslate( transX, transY );\n\n  this.transition({\n    to: transitionStyle,\n    onTransitionEnd: {\n      transform: this.layoutPosition\n    },\n    isCleaning: true\n  });\n};\n\nproto.getTranslate = function( x, y ) {\n  // flip cooridinates if origin on right or bottom\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n  x = isOriginLeft ? x : -x;\n  y = isOriginTop ? y : -y;\n  return 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n};\n\n// non transition + transform support\nproto.goTo = function( x, y ) {\n  this.setPosition( x, y );\n  this.layoutPosition();\n};\n\nproto.moveTo = proto._transitionTo;\n\nproto.setPosition = function( x, y ) {\n  this.position.x = parseInt( x, 10 );\n  this.position.y = parseInt( y, 10 );\n};\n\n// ----- transition ----- //\n\n/**\n * @param {Object} style - CSS\n * @param {Function} onTransitionEnd\n */\n\n// non transition, just trigger callback\nproto._nonTransition = function( args ) {\n  this.css( args.to );\n  if ( args.isCleaning ) {\n    this._removeStyles( args.to );\n  }\n  for ( var prop in args.onTransitionEnd ) {\n    args.onTransitionEnd[ prop ].call( this );\n  }\n};\n\n/**\n * proper transition\n * @param {Object} args - arguments\n *   @param {Object} to - style to transition to\n *   @param {Object} from - style to start transition from\n *   @param {Boolean} isCleaning - removes transition styles after transition\n *   @param {Function} onTransitionEnd - callback\n */\nproto.transition = function( args ) {\n  // redirect to nonTransition if no transition duration\n  if ( !parseFloat( this.layout.options.transitionDuration ) ) {\n    this._nonTransition( args );\n    return;\n  }\n\n  var _transition = this._transn;\n  // keep track of onTransitionEnd callback by css property\n  for ( var prop in args.onTransitionEnd ) {\n    _transition.onEnd[ prop ] = args.onTransitionEnd[ prop ];\n  }\n  // keep track of properties that are transitioning\n  for ( prop in args.to ) {\n    _transition.ingProperties[ prop ] = true;\n    // keep track of properties to clean up when transition is done\n    if ( args.isCleaning ) {\n      _transition.clean[ prop ] = true;\n    }\n  }\n\n  // set from styles\n  if ( args.from ) {\n    this.css( args.from );\n    // force redraw. http://blog.alexmaccaw.com/css-transitions\n    var h = this.element.offsetHeight;\n    // hack for JSHint to hush about unused var\n    h = null;\n  }\n  // enable transition\n  this.enableTransition( args.to );\n  // set styles that are transitioning\n  this.css( args.to );\n\n  this.isTransitioning = true;\n\n};\n\n// dash before all cap letters, including first for\n// WebkitTransform => -webkit-transform\nfunction toDashedAll( str ) {\n  return str.replace( /([A-Z])/g, function( $1 ) {\n    return '-' + $1.toLowerCase();\n  });\n}\n\nvar transitionProps = 'opacity,' + toDashedAll( transformProperty );\n\nproto.enableTransition = function(/* style */) {\n  // HACK changing transitionProperty during a transition\n  // will cause transition to jump\n  if ( this.isTransitioning ) {\n    return;\n  }\n\n  // make `transition: foo, bar, baz` from style object\n  // HACK un-comment this when enableTransition can work\n  // while a transition is happening\n  // var transitionValues = [];\n  // for ( var prop in style ) {\n  //   // dash-ify camelCased properties like WebkitTransition\n  //   prop = vendorProperties[ prop ] || prop;\n  //   transitionValues.push( toDashedAll( prop ) );\n  // }\n  // munge number to millisecond, to match stagger\n  var duration = this.layout.options.transitionDuration;\n  duration = typeof duration == 'number' ? duration + 'ms' : duration;\n  // enable transition styles\n  this.css({\n    transitionProperty: transitionProps,\n    transitionDuration: duration,\n    transitionDelay: this.staggerDelay || 0\n  });\n  // listen for transition end event\n  this.element.addEventListener( transitionEndEvent, this, false );\n};\n\n// ----- events ----- //\n\nproto.onwebkitTransitionEnd = function( event ) {\n  this.ontransitionend( event );\n};\n\nproto.onotransitionend = function( event ) {\n  this.ontransitionend( event );\n};\n\n// properties that I munge to make my life easier\nvar dashedVendorProperties = {\n  '-webkit-transform': 'transform'\n};\n\nproto.ontransitionend = function( event ) {\n  // disregard bubbled events from children\n  if ( event.target !== this.element ) {\n    return;\n  }\n  var _transition = this._transn;\n  // get property name of transitioned property, convert to prefix-free\n  var propertyName = dashedVendorProperties[ event.propertyName ] || event.propertyName;\n\n  // remove property that has completed transitioning\n  delete _transition.ingProperties[ propertyName ];\n  // check if any properties are still transitioning\n  if ( isEmptyObj( _transition.ingProperties ) ) {\n    // all properties have completed transitioning\n    this.disableTransition();\n  }\n  // clean style\n  if ( propertyName in _transition.clean ) {\n    // clean up style\n    this.element.style[ event.propertyName ] = '';\n    delete _transition.clean[ propertyName ];\n  }\n  // trigger onTransitionEnd callback\n  if ( propertyName in _transition.onEnd ) {\n    var onTransitionEnd = _transition.onEnd[ propertyName ];\n    onTransitionEnd.call( this );\n    delete _transition.onEnd[ propertyName ];\n  }\n\n  this.emitEvent( 'transitionEnd', [ this ] );\n};\n\nproto.disableTransition = function() {\n  this.removeTransitionStyles();\n  this.element.removeEventListener( transitionEndEvent, this, false );\n  this.isTransitioning = false;\n};\n\n/**\n * removes style property from element\n * @param {Object} style\n**/\nproto._removeStyles = function( style ) {\n  // clean up transition styles\n  var cleanStyle = {};\n  for ( var prop in style ) {\n    cleanStyle[ prop ] = '';\n  }\n  this.css( cleanStyle );\n};\n\nvar cleanTransitionStyle = {\n  transitionProperty: '',\n  transitionDuration: '',\n  transitionDelay: ''\n};\n\nproto.removeTransitionStyles = function() {\n  // remove transition\n  this.css( cleanTransitionStyle );\n};\n\n// ----- stagger ----- //\n\nproto.stagger = function( delay ) {\n  delay = isNaN( delay ) ? 0 : delay;\n  this.staggerDelay = delay + 'ms';\n};\n\n// ----- show/hide/remove ----- //\n\n// remove element from DOM\nproto.removeElem = function() {\n  this.element.parentNode.removeChild( this.element );\n  // remove display: none\n  this.css({ display: '' });\n  this.emitEvent( 'remove', [ this ] );\n};\n\nproto.remove = function() {\n  // just remove element if no transition support or no transition\n  if ( !transitionProperty || !parseFloat( this.layout.options.transitionDuration ) ) {\n    this.removeElem();\n    return;\n  }\n\n  // start transition\n  this.once( 'transitionEnd', function() {\n    this.removeElem();\n  });\n  this.hide();\n};\n\nproto.reveal = function() {\n  delete this.isHidden;\n  // remove display: none\n  this.css({ display: '' });\n\n  var options = this.layout.options;\n\n  var onTransitionEnd = {};\n  var transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');\n  onTransitionEnd[ transitionEndProperty ] = this.onRevealTransitionEnd;\n\n  this.transition({\n    from: options.hiddenStyle,\n    to: options.visibleStyle,\n    isCleaning: true,\n    onTransitionEnd: onTransitionEnd\n  });\n};\n\nproto.onRevealTransitionEnd = function() {\n  // check if still visible\n  // during transition, item may have been hidden\n  if ( !this.isHidden ) {\n    this.emitEvent('reveal');\n  }\n};\n\n/**\n * get style property use for hide/reveal transition end\n * @param {String} styleProperty - hiddenStyle/visibleStyle\n * @returns {String}\n */\nproto.getHideRevealTransitionEndProperty = function( styleProperty ) {\n  var optionStyle = this.layout.options[ styleProperty ];\n  // use opacity\n  if ( optionStyle.opacity ) {\n    return 'opacity';\n  }\n  // get first property\n  for ( var prop in optionStyle ) {\n    return prop;\n  }\n};\n\nproto.hide = function() {\n  // set flag\n  this.isHidden = true;\n  // remove display: none\n  this.css({ display: '' });\n\n  var options = this.layout.options;\n\n  var onTransitionEnd = {};\n  var transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');\n  onTransitionEnd[ transitionEndProperty ] = this.onHideTransitionEnd;\n\n  this.transition({\n    from: options.visibleStyle,\n    to: options.hiddenStyle,\n    // keep hidden stuff hidden\n    isCleaning: true,\n    onTransitionEnd: onTransitionEnd\n  });\n};\n\nproto.onHideTransitionEnd = function() {\n  // check if still hidden\n  // during transition, item may have been un-hidden\n  if ( this.isHidden ) {\n    this.css({ display: 'none' });\n    this.emitEvent('hide');\n  }\n};\n\nproto.destroy = function() {\n  this.css({\n    position: '',\n    left: '',\n    right: '',\n    top: '',\n    bottom: '',\n    transition: '',\n    transform: ''\n  });\n};\n\nreturn Item;\n\n}));\n\n},{\"ev-emitter\":23,\"get-size\":25}],36:[function(require,module,exports){\n/*!\n * Outlayer v2.1.0\n * the brains and guts of a layout library\n * MIT license\n */\n\n( function( window, factory ) {\n  'use strict';\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( [\n        'ev-emitter/ev-emitter',\n        'get-size/get-size',\n        'fizzy-ui-utils/utils',\n        './item'\n      ],\n      function( EvEmitter, getSize, utils, Item ) {\n        return factory( window, EvEmitter, getSize, utils, Item);\n      }\n    );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory(\n      window,\n      require('ev-emitter'),\n      require('get-size'),\n      require('fizzy-ui-utils'),\n      require('./item')\n    );\n  } else {\n    // browser global\n    window.Outlayer = factory(\n      window,\n      window.EvEmitter,\n      window.getSize,\n      window.fizzyUIUtils,\n      window.Outlayer.Item\n    );\n  }\n\n}( window, function factory( window, EvEmitter, getSize, utils, Item ) {\n'use strict';\n\n// ----- vars ----- //\n\nvar console = window.console;\nvar jQuery = window.jQuery;\nvar noop = function() {};\n\n// -------------------------- Outlayer -------------------------- //\n\n// globally unique identifiers\nvar GUID = 0;\n// internal store of all Outlayer intances\nvar instances = {};\n\n\n/**\n * @param {Element, String} element\n * @param {Object} options\n * @constructor\n */\nfunction Outlayer( element, options ) {\n  var queryElement = utils.getQueryElement( element );\n  if ( !queryElement ) {\n    if ( console ) {\n      console.error( 'Bad element for ' + this.constructor.namespace +\n        ': ' + ( queryElement || element ) );\n    }\n    return;\n  }\n  this.element = queryElement;\n  // add jQuery\n  if ( jQuery ) {\n    this.$element = jQuery( this.element );\n  }\n\n  // options\n  this.options = utils.extend( {}, this.constructor.defaults );\n  this.option( options );\n\n  // add id for Outlayer.getFromElement\n  var id = ++GUID;\n  this.element.outlayerGUID = id; // expando\n  instances[ id ] = this; // associate via id\n\n  // kick it off\n  this._create();\n\n  var isInitLayout = this._getOption('initLayout');\n  if ( isInitLayout ) {\n    this.layout();\n  }\n}\n\n// settings are for internal use only\nOutlayer.namespace = 'outlayer';\nOutlayer.Item = Item;\n\n// default options\nOutlayer.defaults = {\n  containerStyle: {\n    position: 'relative'\n  },\n  initLayout: true,\n  originLeft: true,\n  originTop: true,\n  resize: true,\n  resizeContainer: true,\n  // item options\n  transitionDuration: '0.4s',\n  hiddenStyle: {\n    opacity: 0,\n    transform: 'scale(0.001)'\n  },\n  visibleStyle: {\n    opacity: 1,\n    transform: 'scale(1)'\n  }\n};\n\nvar proto = Outlayer.prototype;\n// inherit EvEmitter\nutils.extend( proto, EvEmitter.prototype );\n\n/**\n * set options\n * @param {Object} opts\n */\nproto.option = function( opts ) {\n  utils.extend( this.options, opts );\n};\n\n/**\n * get backwards compatible option value, check old name\n */\nproto._getOption = function( option ) {\n  var oldOption = this.constructor.compatOptions[ option ];\n  return oldOption && this.options[ oldOption ] !== undefined ?\n    this.options[ oldOption ] : this.options[ option ];\n};\n\nOutlayer.compatOptions = {\n  // currentName: oldName\n  initLayout: 'isInitLayout',\n  horizontal: 'isHorizontal',\n  layoutInstant: 'isLayoutInstant',\n  originLeft: 'isOriginLeft',\n  originTop: 'isOriginTop',\n  resize: 'isResizeBound',\n  resizeContainer: 'isResizingContainer'\n};\n\nproto._create = function() {\n  // get items from children\n  this.reloadItems();\n  // elements that affect layout, but are not laid out\n  this.stamps = [];\n  this.stamp( this.options.stamp );\n  // set container style\n  utils.extend( this.element.style, this.options.containerStyle );\n\n  // bind resize method\n  var canBindResize = this._getOption('resize');\n  if ( canBindResize ) {\n    this.bindResize();\n  }\n};\n\n// goes through all children again and gets bricks in proper order\nproto.reloadItems = function() {\n  // collection of item elements\n  this.items = this._itemize( this.element.children );\n};\n\n\n/**\n * turn elements into Outlayer.Items to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - collection of new Outlayer Items\n */\nproto._itemize = function( elems ) {\n\n  var itemElems = this._filterFindItemElements( elems );\n  var Item = this.constructor.Item;\n\n  // create new Outlayer Items for collection\n  var items = [];\n  for ( var i=0; i < itemElems.length; i++ ) {\n    var elem = itemElems[i];\n    var item = new Item( elem, this );\n    items.push( item );\n  }\n\n  return items;\n};\n\n/**\n * get item elements to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - item elements\n */\nproto._filterFindItemElements = function( elems ) {\n  return utils.filterFindElements( elems, this.options.itemSelector );\n};\n\n/**\n * getter method for getting item elements\n * @returns {Array} elems - collection of item elements\n */\nproto.getItemElements = function() {\n  return this.items.map( function( item ) {\n    return item.element;\n  });\n};\n\n// ----- init & layout ----- //\n\n/**\n * lays out all items\n */\nproto.layout = function() {\n  this._resetLayout();\n  this._manageStamps();\n\n  // don't animate first layout\n  var layoutInstant = this._getOption('layoutInstant');\n  var isInstant = layoutInstant !== undefined ?\n    layoutInstant : !this._isLayoutInited;\n  this.layoutItems( this.items, isInstant );\n\n  // flag for initalized\n  this._isLayoutInited = true;\n};\n\n// _init is alias for layout\nproto._init = proto.layout;\n\n/**\n * logic before any new layout\n */\nproto._resetLayout = function() {\n  this.getSize();\n};\n\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\n/**\n * get measurement from option, for columnWidth, rowHeight, gutter\n * if option is String -> get element from selector string, & get size of element\n * if option is Element -> get size of element\n * else use option as a number\n *\n * @param {String} measurement\n * @param {String} size - width or height\n * @private\n */\nproto._getMeasurement = function( measurement, size ) {\n  var option = this.options[ measurement ];\n  var elem;\n  if ( !option ) {\n    // default to 0\n    this[ measurement ] = 0;\n  } else {\n    // use option as an element\n    if ( typeof option == 'string' ) {\n      elem = this.element.querySelector( option );\n    } else if ( option instanceof HTMLElement ) {\n      elem = option;\n    }\n    // use size of element, if element\n    this[ measurement ] = elem ? getSize( elem )[ size ] : option;\n  }\n};\n\n/**\n * layout a collection of item elements\n * @api public\n */\nproto.layoutItems = function( items, isInstant ) {\n  items = this._getItemsForLayout( items );\n\n  this._layoutItems( items, isInstant );\n\n  this._postLayout();\n};\n\n/**\n * get the items to be laid out\n * you may want to skip over some items\n * @param {Array} items\n * @returns {Array} items\n */\nproto._getItemsForLayout = function( items ) {\n  return items.filter( function( item ) {\n    return !item.isIgnored;\n  });\n};\n\n/**\n * layout items\n * @param {Array} items\n * @param {Boolean} isInstant\n */\nproto._layoutItems = function( items, isInstant ) {\n  this._emitCompleteOnItems( 'layout', items );\n\n  if ( !items || !items.length ) {\n    // no items, emit event with empty array\n    return;\n  }\n\n  var queue = [];\n\n  items.forEach( function( item ) {\n    // get x/y object from method\n    var position = this._getItemLayoutPosition( item );\n    // enqueue\n    position.item = item;\n    position.isInstant = isInstant || item.isLayoutInstant;\n    queue.push( position );\n  }, this );\n\n  this._processLayoutQueue( queue );\n};\n\n/**\n * get item layout position\n * @param {Outlayer.Item} item\n * @returns {Object} x and y position\n */\nproto._getItemLayoutPosition = function( /* item */ ) {\n  return {\n    x: 0,\n    y: 0\n  };\n};\n\n/**\n * iterate over array and position each item\n * Reason being - separating this logic prevents 'layout invalidation'\n * thx @paul_irish\n * @param {Array} queue\n */\nproto._processLayoutQueue = function( queue ) {\n  this.updateStagger();\n  queue.forEach( function( obj, i ) {\n    this._positionItem( obj.item, obj.x, obj.y, obj.isInstant, i );\n  }, this );\n};\n\n// set stagger from option in milliseconds number\nproto.updateStagger = function() {\n  var stagger = this.options.stagger;\n  if ( stagger === null || stagger === undefined ) {\n    this.stagger = 0;\n    return;\n  }\n  this.stagger = getMilliseconds( stagger );\n  return this.stagger;\n};\n\n/**\n * Sets position of item in DOM\n * @param {Outlayer.Item} item\n * @param {Number} x - horizontal position\n * @param {Number} y - vertical position\n * @param {Boolean} isInstant - disables transitions\n */\nproto._positionItem = function( item, x, y, isInstant, i ) {\n  if ( isInstant ) {\n    // if not transition, just set CSS\n    item.goTo( x, y );\n  } else {\n    item.stagger( i * this.stagger );\n    item.moveTo( x, y );\n  }\n};\n\n/**\n * Any logic you want to do after each layout,\n * i.e. size the container\n */\nproto._postLayout = function() {\n  this.resizeContainer();\n};\n\nproto.resizeContainer = function() {\n  var isResizingContainer = this._getOption('resizeContainer');\n  if ( !isResizingContainer ) {\n    return;\n  }\n  var size = this._getContainerSize();\n  if ( size ) {\n    this._setContainerMeasure( size.width, true );\n    this._setContainerMeasure( size.height, false );\n  }\n};\n\n/**\n * Sets width or height of container if returned\n * @returns {Object} size\n *   @param {Number} width\n *   @param {Number} height\n */\nproto._getContainerSize = noop;\n\n/**\n * @param {Number} measure - size of width or height\n * @param {Boolean} isWidth\n */\nproto._setContainerMeasure = function( measure, isWidth ) {\n  if ( measure === undefined ) {\n    return;\n  }\n\n  var elemSize = this.size;\n  // add padding and border width if border box\n  if ( elemSize.isBorderBox ) {\n    measure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight +\n      elemSize.borderLeftWidth + elemSize.borderRightWidth :\n      elemSize.paddingBottom + elemSize.paddingTop +\n      elemSize.borderTopWidth + elemSize.borderBottomWidth;\n  }\n\n  measure = Math.max( measure, 0 );\n  this.element.style[ isWidth ? 'width' : 'height' ] = measure + 'px';\n};\n\n/**\n * emit eventComplete on a collection of items events\n * @param {String} eventName\n * @param {Array} items - Outlayer.Items\n */\nproto._emitCompleteOnItems = function( eventName, items ) {\n  var _this = this;\n  function onComplete() {\n    _this.dispatchEvent( eventName + 'Complete', null, [ items ] );\n  }\n\n  var count = items.length;\n  if ( !items || !count ) {\n    onComplete();\n    return;\n  }\n\n  var doneCount = 0;\n  function tick() {\n    doneCount++;\n    if ( doneCount == count ) {\n      onComplete();\n    }\n  }\n\n  // bind callback\n  items.forEach( function( item ) {\n    item.once( eventName, tick );\n  });\n};\n\n/**\n * emits events via EvEmitter and jQuery events\n * @param {String} type - name of event\n * @param {Event} event - original event\n * @param {Array} args - extra arguments\n */\nproto.dispatchEvent = function( type, event, args ) {\n  // add original event to arguments\n  var emitArgs = event ? [ event ].concat( args ) : args;\n  this.emitEvent( type, emitArgs );\n\n  if ( jQuery ) {\n    // set this.$element\n    this.$element = this.$element || jQuery( this.element );\n    if ( event ) {\n      // create jQuery event\n      var $event = jQuery.Event( event );\n      $event.type = type;\n      this.$element.trigger( $event, args );\n    } else {\n      // just trigger with type if no event available\n      this.$element.trigger( type, args );\n    }\n  }\n};\n\n// -------------------------- ignore & stamps -------------------------- //\n\n\n/**\n * keep item in collection, but do not lay it out\n * ignored items do not get skipped in layout\n * @param {Element} elem\n */\nproto.ignore = function( elem ) {\n  var item = this.getItem( elem );\n  if ( item ) {\n    item.isIgnored = true;\n  }\n};\n\n/**\n * return item to layout collection\n * @param {Element} elem\n */\nproto.unignore = function( elem ) {\n  var item = this.getItem( elem );\n  if ( item ) {\n    delete item.isIgnored;\n  }\n};\n\n/**\n * adds elements to stamps\n * @param {NodeList, Array, Element, or String} elems\n */\nproto.stamp = function( elems ) {\n  elems = this._find( elems );\n  if ( !elems ) {\n    return;\n  }\n\n  this.stamps = this.stamps.concat( elems );\n  // ignore\n  elems.forEach( this.ignore, this );\n};\n\n/**\n * removes elements to stamps\n * @param {NodeList, Array, or Element} elems\n */\nproto.unstamp = function( elems ) {\n  elems = this._find( elems );\n  if ( !elems ){\n    return;\n  }\n\n  elems.forEach( function( elem ) {\n    // filter out removed stamp elements\n    utils.removeFrom( this.stamps, elem );\n    this.unignore( elem );\n  }, this );\n};\n\n/**\n * finds child elements\n * @param {NodeList, Array, Element, or String} elems\n * @returns {Array} elems\n */\nproto._find = function( elems ) {\n  if ( !elems ) {\n    return;\n  }\n  // if string, use argument as selector string\n  if ( typeof elems == 'string' ) {\n    elems = this.element.querySelectorAll( elems );\n  }\n  elems = utils.makeArray( elems );\n  return elems;\n};\n\nproto._manageStamps = function() {\n  if ( !this.stamps || !this.stamps.length ) {\n    return;\n  }\n\n  this._getBoundingRect();\n\n  this.stamps.forEach( this._manageStamp, this );\n};\n\n// update boundingLeft / Top\nproto._getBoundingRect = function() {\n  // get bounding rect for container element\n  var boundingRect = this.element.getBoundingClientRect();\n  var size = this.size;\n  this._boundingRect = {\n    left: boundingRect.left + size.paddingLeft + size.borderLeftWidth,\n    top: boundingRect.top + size.paddingTop + size.borderTopWidth,\n    right: boundingRect.right - ( size.paddingRight + size.borderRightWidth ),\n    bottom: boundingRect.bottom - ( size.paddingBottom + size.borderBottomWidth )\n  };\n};\n\n/**\n * @param {Element} stamp\n**/\nproto._manageStamp = noop;\n\n/**\n * get x/y position of element relative to container element\n * @param {Element} elem\n * @returns {Object} offset - has left, top, right, bottom\n */\nproto._getElementOffset = function( elem ) {\n  var boundingRect = elem.getBoundingClientRect();\n  var thisRect = this._boundingRect;\n  var size = getSize( elem );\n  var offset = {\n    left: boundingRect.left - thisRect.left - size.marginLeft,\n    top: boundingRect.top - thisRect.top - size.marginTop,\n    right: thisRect.right - boundingRect.right - size.marginRight,\n    bottom: thisRect.bottom - boundingRect.bottom - size.marginBottom\n  };\n  return offset;\n};\n\n// -------------------------- resize -------------------------- //\n\n// enable event handlers for listeners\n// i.e. resize -> onresize\nproto.handleEvent = utils.handleEvent;\n\n/**\n * Bind layout to window resizing\n */\nproto.bindResize = function() {\n  window.addEventListener( 'resize', this );\n  this.isResizeBound = true;\n};\n\n/**\n * Unbind layout to window resizing\n */\nproto.unbindResize = function() {\n  window.removeEventListener( 'resize', this );\n  this.isResizeBound = false;\n};\n\nproto.onresize = function() {\n  this.resize();\n};\n\nutils.debounceMethod( Outlayer, 'onresize', 100 );\n\nproto.resize = function() {\n  // don't trigger if size did not change\n  // or if resize was unbound. See #9\n  if ( !this.isResizeBound || !this.needsResizeLayout() ) {\n    return;\n  }\n\n  this.layout();\n};\n\n/**\n * check if layout is needed post layout\n * @returns Boolean\n */\nproto.needsResizeLayout = function() {\n  var size = getSize( this.element );\n  // check that this.size and size are there\n  // IE8 triggers resize on body size change, so they might not be\n  var hasSizes = this.size && size;\n  return hasSizes && size.innerWidth !== this.size.innerWidth;\n};\n\n// -------------------------- methods -------------------------- //\n\n/**\n * add items to Outlayer instance\n * @param {Array or NodeList or Element} elems\n * @returns {Array} items - Outlayer.Items\n**/\nproto.addItems = function( elems ) {\n  var items = this._itemize( elems );\n  // add items to collection\n  if ( items.length ) {\n    this.items = this.items.concat( items );\n  }\n  return items;\n};\n\n/**\n * Layout newly-appended item elements\n * @param {Array or NodeList or Element} elems\n */\nproto.appended = function( elems ) {\n  var items = this.addItems( elems );\n  if ( !items.length ) {\n    return;\n  }\n  // layout and reveal just the new items\n  this.layoutItems( items, true );\n  this.reveal( items );\n};\n\n/**\n * Layout prepended elements\n * @param {Array or NodeList or Element} elems\n */\nproto.prepended = function( elems ) {\n  var items = this._itemize( elems );\n  if ( !items.length ) {\n    return;\n  }\n  // add items to beginning of collection\n  var previousItems = this.items.slice(0);\n  this.items = items.concat( previousItems );\n  // start new layout\n  this._resetLayout();\n  this._manageStamps();\n  // layout new stuff without transition\n  this.layoutItems( items, true );\n  this.reveal( items );\n  // layout previous items\n  this.layoutItems( previousItems );\n};\n\n/**\n * reveal a collection of items\n * @param {Array of Outlayer.Items} items\n */\nproto.reveal = function( items ) {\n  this._emitCompleteOnItems( 'reveal', items );\n  if ( !items || !items.length ) {\n    return;\n  }\n  var stagger = this.updateStagger();\n  items.forEach( function( item, i ) {\n    item.stagger( i * stagger );\n    item.reveal();\n  });\n};\n\n/**\n * hide a collection of items\n * @param {Array of Outlayer.Items} items\n */\nproto.hide = function( items ) {\n  this._emitCompleteOnItems( 'hide', items );\n  if ( !items || !items.length ) {\n    return;\n  }\n  var stagger = this.updateStagger();\n  items.forEach( function( item, i ) {\n    item.stagger( i * stagger );\n    item.hide();\n  });\n};\n\n/**\n * reveal item elements\n * @param {Array}, {Element}, {NodeList} items\n */\nproto.revealItemElements = function( elems ) {\n  var items = this.getItems( elems );\n  this.reveal( items );\n};\n\n/**\n * hide item elements\n * @param {Array}, {Element}, {NodeList} items\n */\nproto.hideItemElements = function( elems ) {\n  var items = this.getItems( elems );\n  this.hide( items );\n};\n\n/**\n * get Outlayer.Item, given an Element\n * @param {Element} elem\n * @param {Function} callback\n * @returns {Outlayer.Item} item\n */\nproto.getItem = function( elem ) {\n  // loop through items to get the one that matches\n  for ( var i=0; i < this.items.length; i++ ) {\n    var item = this.items[i];\n    if ( item.element == elem ) {\n      // return item\n      return item;\n    }\n  }\n};\n\n/**\n * get collection of Outlayer.Items, given Elements\n * @param {Array} elems\n * @returns {Array} items - Outlayer.Items\n */\nproto.getItems = function( elems ) {\n  elems = utils.makeArray( elems );\n  var items = [];\n  elems.forEach( function( elem ) {\n    var item = this.getItem( elem );\n    if ( item ) {\n      items.push( item );\n    }\n  }, this );\n\n  return items;\n};\n\n/**\n * remove element(s) from instance and DOM\n * @param {Array or NodeList or Element} elems\n */\nproto.remove = function( elems ) {\n  var removeItems = this.getItems( elems );\n\n  this._emitCompleteOnItems( 'remove', removeItems );\n\n  // bail if no items to remove\n  if ( !removeItems || !removeItems.length ) {\n    return;\n  }\n\n  removeItems.forEach( function( item ) {\n    item.remove();\n    // remove item from collection\n    utils.removeFrom( this.items, item );\n  }, this );\n};\n\n// ----- destroy ----- //\n\n// remove and disable Outlayer instance\nproto.destroy = function() {\n  // clean up dynamic styles\n  var style = this.element.style;\n  style.height = '';\n  style.position = '';\n  style.width = '';\n  // destroy items\n  this.items.forEach( function( item ) {\n    item.destroy();\n  });\n\n  this.unbindResize();\n\n  var id = this.element.outlayerGUID;\n  delete instances[ id ]; // remove reference to instance by id\n  delete this.element.outlayerGUID;\n  // remove data for jQuery\n  if ( jQuery ) {\n    jQuery.removeData( this.element, this.constructor.namespace );\n  }\n\n};\n\n// -------------------------- data -------------------------- //\n\n/**\n * get Outlayer instance from element\n * @param {Element} elem\n * @returns {Outlayer}\n */\nOutlayer.data = function( elem ) {\n  elem = utils.getQueryElement( elem );\n  var id = elem && elem.outlayerGUID;\n  return id && instances[ id ];\n};\n\n\n// -------------------------- create Outlayer class -------------------------- //\n\n/**\n * create a layout class\n * @param {String} namespace\n */\nOutlayer.create = function( namespace, options ) {\n  // sub-class Outlayer\n  var Layout = subclass( Outlayer );\n  // apply new options and compatOptions\n  Layout.defaults = utils.extend( {}, Outlayer.defaults );\n  utils.extend( Layout.defaults, options );\n  Layout.compatOptions = utils.extend( {}, Outlayer.compatOptions  );\n\n  Layout.namespace = namespace;\n\n  Layout.data = Outlayer.data;\n\n  // sub-class Item\n  Layout.Item = subclass( Item );\n\n  // -------------------------- declarative -------------------------- //\n\n  utils.htmlInit( Layout, namespace );\n\n  // -------------------------- jQuery bridge -------------------------- //\n\n  // make into jQuery plugin\n  if ( jQuery && jQuery.bridget ) {\n    jQuery.bridget( namespace, Layout );\n  }\n\n  return Layout;\n};\n\nfunction subclass( Parent ) {\n  function SubClass() {\n    Parent.apply( this, arguments );\n  }\n\n  SubClass.prototype = Object.create( Parent.prototype );\n  SubClass.prototype.constructor = SubClass;\n\n  return SubClass;\n}\n\n// ----- helpers ----- //\n\n// how many milliseconds are in each unit\nvar msUnits = {\n  ms: 1,\n  s: 1000\n};\n\n// munge time-like parameter into millisecond number\n// '0.4s' -> 40\nfunction getMilliseconds( time ) {\n  if ( typeof time == 'number' ) {\n    return time;\n  }\n  var matches = time.match( /(^\\d*\\.?\\d*)(\\w*)/ );\n  var num = matches && matches[1];\n  var unit = matches && matches[2];\n  if ( !num.length ) {\n    return 0;\n  }\n  num = parseFloat( num );\n  var mult = msUnits[ unit ] || 1;\n  return num * mult;\n}\n\n// ----- fin ----- //\n\n// back in global\nOutlayer.Item = Item;\n\nreturn Outlayer;\n\n}));\n\n},{\"./item\":35,\"ev-emitter\":23,\"fizzy-ui-utils\":24,\"get-size\":25}]},{},[1])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"],"sourceRoot":"/source/"}